

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 04 17:06:02 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    30                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    31  0000                     
    32                           ; Version 2.20
    33                           ; Generated 05/05/2020 GMT
    34                           ; 
    35                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC18F45K50 Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     _ANSELE	set	3935
    67  0000                     _ANSELD	set	3934
    68  0000                     _ANSELA	set	3931
    69  0000                     _LATD	set	3980
    70  0000                     _ADRESH	set	4036
    71  0000                     _ADRESL	set	4035
    72  0000                     _ADCON0bits	set	4034
    73  0000                     _ADCON2	set	4032
    74  0000                     _ADCON1	set	4033
    75  0000                     _ADCON0	set	4034
    76  0000                     _TRISE	set	3990
    77  0000                     _TRISD	set	3989
    78  0000                     _TRISA	set	3986
    79  0000                     _LATE	set	3981
    80  0000                     _PORTAbits	set	3968
    81                           
    82                           	psect	smallconst
    83  000800                     __psmallconst:
    84                           	callstack 0
    85  000800  00                 	db	0
    86  000801                     STR_1:
    87                           
    88                           ; BSR set to: 15
    89  000801  50                 	db	80	;'P'
    90  000802  75                 	db	117	;'u'
    91  000803  65                 	db	101	;'e'
    92  000804  72                 	db	114	;'r'
    93  000805  74                 	db	116	;'t'
    94  000806  61                 	db	97	;'a'
    95  000807  20                 	db	32
    96  000808  63                 	db	99	;'c'
    97  000809  65                 	db	101	;'e'
    98  00080A  72                 	db	114	;'r'
    99  00080B  72                 	db	114	;'r'
   100  00080C  61                 	db	97	;'a'
   101  00080D  64                 	db	100	;'d'
   102  00080E  61                 	db	97	;'a'
   103  00080F  00                 	db	0
   104  000810                     STR_2:
   105                           
   106                           ; BSR set to: 15
   107  000810  43                 	db	67	;'C'
   108  000811  6F                 	db	111	;'o'
   109  000812  6E                 	db	110	;'n'
   110  000813  74                 	db	116	;'t'
   111  000814  61                 	db	97	;'a'
   112  000815  64                 	db	100	;'d'
   113  000816  6F                 	db	111	;'o'
   114  000817  72                 	db	114	;'r'
   115  000818  3A                 	db	58	;':'
   116  000819  20                 	db	32
   117  00081A  25                 	db	37
   118  00081B  64                 	db	100	;'d'
   119  00081C  20                 	db	32
   120  00081D  00                 	db	0
   121  00081E  00                 	db	0	; dummy byte at the end
   122  0000                     
   123                           ; #config settings
   124                           
   125                           	psect	cinit
   126  0014A0                     __pcinit:
   127                           	callstack 0
   128  0014A0                     start_initialization:
   129                           	callstack 0
   130  0014A0                     __initialization:
   131                           	callstack 0
   132                           
   133                           ; Clear objects allocated to BANK0 (40 bytes)
   134  0014A0  EE00  F060         	lfsr	0,__pbssBANK0
   135  0014A4  0E28               	movlw	40
   136  0014A6                     clear_0:
   137  0014A6  6AEE               	clrf	postinc0,c
   138  0014A8  06E8               	decf	wreg,f,c
   139  0014AA  E1FD               	bnz	clear_0
   140  0014AC                     end_of_initialization:
   141                           	callstack 0
   142  0014AC                     __end_of__initialization:
   143                           	callstack 0
   144  0014AC  0E00               	movlw	low (__Lsmallconst shr (0+16))
   145  0014AE  6EF8               	movwf	tblptru,c
   146  0014B0  0E08               	movlw	high __Lsmallconst
   147  0014B2  6EF7               	movwf	tblptrh,c
   148  0014B4  0100               	movlb	0
   149  0014B6  EFD1  F007         	goto	_main	;jump to C main() function
   150                           
   151                           	psect	bssBANK0
   152  000060                     __pbssBANK0:
   153                           	callstack 0
   154  000060                     _nout:
   155                           	callstack 0
   156  000060                     	ds	2
   157  000062                     _width:
   158                           	callstack 0
   159  000062                     	ds	2
   160  000064                     _prec:
   161                           	callstack 0
   162  000064                     	ds	2
   163  000066                     _flags:
   164                           	callstack 0
   165  000066                     	ds	2
   166  000068                     _dbuf:
   167                           	callstack 0
   168  000068                     	ds	32
   169                           
   170                           	psect	cstackBANK0
   171  000088                     __pcstackBANK0:
   172                           	callstack 0
   173  000088                     ??_main:
   174                           
   175                           ; 1 bytes @ 0x0
   176  000088                     	ds	1
   177  000089                     main@contador:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0x1
   181  000089                     	ds	2
   182  00008B                     main@enProceso:
   183                           	callstack 0
   184                           
   185                           ; 1 bytes @ 0x3
   186  00008B                     	ds	1
   187  00008C                     main@potenciometro:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x4
   191  00008C                     	ds	2
   192  00008E                     main@direccion:
   193                           	callstack 0
   194                           
   195                           ; 1 bytes @ 0x6
   196  00008E                     	ds	1
   197  00008F                     main@motor:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x7
   201  00008F                     	ds	1
   202                           
   203                           	psect	cstackCOMRAM
   204  000001                     __pcstackCOMRAM:
   205                           	callstack 0
   206  000001                     ?_Conversion:
   207                           	callstack 0
   208  000001                     ?_strlen:
   209                           	callstack 0
   210  000001                     ?___aodiv:
   211                           	callstack 0
   212  000001                     ?___aomod:
   213                           	callstack 0
   214  000001                     putch@data:
   215                           	callstack 0
   216  000001                     putcm@data:
   217                           	callstack 0
   218  000001                     strlen@s:
   219                           	callstack 0
   220  000001                     ___aodiv@dividend:
   221                           	callstack 0
   222  000001                     ___aomod@dividend:
   223                           	callstack 0
   224                           
   225                           ; 8 bytes @ 0x0
   226  000001                     	ds	1
   227  000002                     putch@Activa:
   228                           	callstack 0
   229  000002                     putcm@Activa:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0x1
   233  000002                     	ds	1
   234  000003                     ??_InicializaLCD:
   235  000003                     ??_Conversion:
   236  000003                     fputc@c:
   237                           	callstack 0
   238  000003                     strlen@a:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x2
   242  000003                     	ds	2
   243  000005                     fputc@fp:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0x4
   247  000005                     	ds	2
   248  000007                     ??_fputc:
   249                           
   250                           ; 1 bytes @ 0x6
   251  000007                     	ds	2
   252  000009                     ___aodiv@divisor:
   253                           	callstack 0
   254  000009                     ___aomod@divisor:
   255                           	callstack 0
   256                           
   257                           ; 8 bytes @ 0x8
   258  000009                     	ds	3
   259  00000C                     fputs@s:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xB
   263  00000C                     	ds	2
   264  00000E                     fputs@fp:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xD
   268  00000E                     	ds	2
   269  000010                     fputs@c:
   270                           	callstack 0
   271                           
   272                           ; 1 bytes @ 0xF
   273  000010                     	ds	1
   274  000011                     ___aodiv@counter:
   275                           	callstack 0
   276  000011                     ___aomod@counter:
   277                           	callstack 0
   278  000011                     fputs@i:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x10
   282  000011                     	ds	1
   283  000012                     ___aodiv@sign:
   284                           	callstack 0
   285  000012                     ___aomod@sign:
   286                           	callstack 0
   287                           
   288                           ; 1 bytes @ 0x11
   289  000012                     	ds	1
   290  000013                     ?_abs:
   291                           	callstack 0
   292  000013                     ?_pad:
   293                           	callstack 0
   294  000013                     pad@fp:
   295                           	callstack 0
   296  000013                     abs@a:
   297                           	callstack 0
   298  000013                     ___aodiv@quotient:
   299                           	callstack 0
   300                           
   301                           ; 8 bytes @ 0x12
   302  000013                     	ds	2
   303  000015                     ??_abs:
   304  000015                     pad@buf:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x14
   308  000015                     	ds	2
   309  000017                     pad@p:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x16
   313  000017                     	ds	2
   314  000019                     ??_pad:
   315                           
   316                           ; 1 bytes @ 0x18
   317  000019                     	ds	1
   318  00001A                     pad@i:
   319                           	callstack 0
   320                           
   321                           ; 2 bytes @ 0x19
   322  00001A                     	ds	2
   323  00001C                     pad@w:
   324                           	callstack 0
   325                           
   326                           ; 2 bytes @ 0x1B
   327  00001C                     	ds	2
   328  00001E                     ?_dtoa:
   329                           	callstack 0
   330  00001E                     dtoa@fp:
   331                           	callstack 0
   332                           
   333                           ; 2 bytes @ 0x1D
   334  00001E                     	ds	2
   335  000020                     dtoa@d:
   336                           	callstack 0
   337                           
   338                           ; 8 bytes @ 0x1F
   339  000020                     	ds	8
   340  000028                     ??_dtoa:
   341                           
   342                           ; 1 bytes @ 0x27
   343  000028                     	ds	8
   344  000030                     _dtoa$728:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x2F
   348  000030                     	ds	2
   349  000032                     dtoa@p:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0x31
   353  000032                     	ds	2
   354  000034                     dtoa@w:
   355                           	callstack 0
   356                           
   357                           ; 2 bytes @ 0x33
   358  000034                     	ds	2
   359  000036                     dtoa@s:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x35
   363  000036                     	ds	2
   364  000038                     dtoa@n:
   365                           	callstack 0
   366                           
   367                           ; 8 bytes @ 0x37
   368  000038                     	ds	8
   369  000040                     dtoa@i:
   370                           	callstack 0
   371                           
   372                           ; 2 bytes @ 0x3F
   373  000040                     	ds	2
   374  000042                     ?_vfpfcnvrt:
   375                           	callstack 0
   376  000042                     vfpfcnvrt@fp:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x41
   380  000042                     	ds	2
   381  000044                     vfpfcnvrt@fmt:
   382                           	callstack 0
   383                           
   384                           ; 2 bytes @ 0x43
   385  000044                     	ds	2
   386  000046                     vfpfcnvrt@ap:
   387                           	callstack 0
   388                           
   389                           ; 2 bytes @ 0x45
   390  000046                     	ds	2
   391  000048                     ??_vfpfcnvrt:
   392                           
   393                           ; 1 bytes @ 0x47
   394  000048                     	ds	2
   395  00004A                     vfpfcnvrt@ll:
   396                           	callstack 0
   397                           
   398                           ; 8 bytes @ 0x49
   399  00004A                     	ds	8
   400  000052                     ?_vfprintf:
   401                           	callstack 0
   402  000052                     vfprintf@fp:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0x51
   406  000052                     	ds	2
   407  000054                     vfprintf@fmt:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x53
   411  000054                     	ds	2
   412  000056                     vfprintf@ap:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0x55
   416  000056                     	ds	2
   417  000058                     vfprintf@cfmt:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x57
   421  000058                     	ds	2
   422  00005A                     ?_printf:
   423                           	callstack 0
   424  00005A                     printf@fmt:
   425                           	callstack 0
   426                           
   427                           ; 2 bytes @ 0x59
   428  00005A                     	ds	4
   429  00005E                     printf@ap:
   430                           	callstack 0
   431                           
   432                           ; 2 bytes @ 0x5D
   433  00005E                     	ds	2
   434                           
   435 ;;
   436 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   437 ;;
   438 ;; *************** function _main *****************
   439 ;; Defined at:
   440 ;;		line 23 in file "main.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;  potenciometr    2    4[BANK0 ] int 
   445 ;;  contador        2    1[BANK0 ] int 
   446 ;;  motor           1    7[BANK0 ] unsigned char 
   447 ;;  direccion       1    6[BANK0 ] unsigned char 
   448 ;;  enProceso       1    3[BANK0 ] unsigned char 
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   458 ;;      Params:         0       0       0       0       0       0       0       0       0
   459 ;;      Locals:         0       7       0       0       0       0       0       0       0
   460 ;;      Temps:          0       1       0       0       0       0       0       0       0
   461 ;;      Totals:         0       8       0       0       0       0       0       0       0
   462 ;;Total ram usage:        8 bytes
   463 ;; Hardware stack levels required when called: 8
   464 ;; This function calls:
   465 ;;		_Configuracion
   466 ;;		_Conversion
   467 ;;		_InicializaLCD
   468 ;;		_printf
   469 ;;		_putcm
   470 ;; This function is called by:
   471 ;;		Startup code after reset
   472 ;; This function uses a non-reentrant model
   473 ;;
   474                           
   475                           	psect	text0
   476  000FA2                     __ptext0:
   477                           	callstack 0
   478  000FA2                     _main:
   479                           	callstack 23
   480  000FA2                     
   481                           ;main.c: 24:     char direccion = 1;
   482  000FA2  0E01               	movlw	1
   483  000FA4  0100               	movlb	0	; () banked
   484  000FA6  6F8E               	movwf	main@direccion& (0+255),b
   485                           
   486                           ;main.c: 25:     char motor = 0;
   487  000FA8  0E00               	movlw	0
   488  000FAA  6F8F               	movwf	main@motor& (0+255),b
   489                           
   490                           ;main.c: 26:     char enProceso = 0;
   491  000FAC  0E00               	movlw	0
   492  000FAE  6F8B               	movwf	main@enProceso& (0+255),b
   493                           
   494                           ;main.c: 27:     int contador = 0;
   495  000FB0  0E00               	movlw	0
   496  000FB2  6F8A               	movwf	(main@contador+1)& (0+255),b
   497  000FB4  0E00               	movlw	0
   498  000FB6  6F89               	movwf	main@contador& (0+255),b
   499  000FB8                     
   500                           ; BSR set to: 0
   501                           ;main.c: 28:     int potenciometro;;main.c: 30:     Configuracion();
   502  000FB8  EC17  F00A         	call	_Configuracion	;wreg free
   503  000FBC                     
   504                           ;main.c: 31:     InicializaLCD();
   505  000FBC  EC24  F009         	call	_InicializaLCD	;wreg free
   506  000FC0                     
   507                           ;main.c: 32:     printf("Puerta cerrada");
   508  000FC0  0E01               	movlw	low STR_1
   509  000FC2  6E5A               	movwf	printf@fmt^0,c
   510  000FC4  0E08               	movlw	high STR_1
   511  000FC6  6E5B               	movwf	(printf@fmt+1)^0,c
   512  000FC8  EC2B  F00A         	call	_printf	;wreg free
   513  000FCC                     l1542:
   514                           
   515                           ;main.c: 35:         putcm(0xC2);
   516  000FCC  0EC2               	movlw	194
   517  000FCE  ECFF  F009         	call	_putcm
   518  000FD2                     
   519                           ;main.c: 36:         printf("Contador: %d ", contador);
   520  000FD2  0E10               	movlw	low STR_2
   521  000FD4  6E5A               	movwf	printf@fmt^0,c
   522  000FD6  0E08               	movlw	high STR_2
   523  000FD8  6E5B               	movwf	(printf@fmt+1)^0,c
   524  000FDA  C089  F05C         	movff	main@contador,?_printf+2
   525  000FDE  C08A  F05D         	movff	main@contador+1,?_printf+3
   526  000FE2  EC2B  F00A         	call	_printf	;wreg free
   527  000FE6                     
   528                           ;main.c: 37:         potenciometro = Conversion();
   529  000FE6  EC3E  F00A         	call	_Conversion	;wreg free
   530  000FEA  C001  F08C         	movff	?_Conversion,main@potenciometro
   531  000FEE  C002  F08D         	movff	?_Conversion+1,main@potenciometro+1
   532                           
   533                           ;main.c: 38:         if (potenciometro >= 800 && motor) {
   534  000FF2  0100               	movlb	0	; () banked
   535  000FF4  BF8D               	btfsc	(main@potenciometro+1)& (0+255),7,b
   536  000FF6  EF06  F008         	goto	u991
   537  000FFA  0E20               	movlw	32
   538  000FFC  5D8C               	subwf	main@potenciometro& (0+255),w,b
   539  000FFE  0E03               	movlw	3
   540  001000  598D               	subwfb	(main@potenciometro+1)& (0+255),w,b
   541  001002  A0D8               	btfss	status,0,c
   542  001004  EF06  F008         	goto	u991
   543  001008  EF08  F008         	goto	u990
   544  00100C                     u991:
   545  00100C  EF27  F008         	goto	l1560
   546  001010                     u990:
   547  001010                     
   548                           ; BSR set to: 0
   549  001010  518F               	movf	main@motor& (0+255),w,b
   550  001012  B4D8               	btfsc	status,2,c
   551  001014  EF0E  F008         	goto	u1001
   552  001018  EF10  F008         	goto	u1000
   553  00101C                     u1001:
   554  00101C  EF27  F008         	goto	l1560
   555  001020                     u1000:
   556  001020                     
   557                           ; BSR set to: 0
   558                           ;main.c: 39:             motor = 0;
   559  001020  0E00               	movlw	0
   560  001022  6F8F               	movwf	main@motor& (0+255),b
   561  001024                     
   562                           ; BSR set to: 0
   563                           ;main.c: 40:             if (direccion == 2) {
   564  001024  0E02               	movlw	2
   565  001026  198E               	xorwf	main@direccion& (0+255),w,b
   566  001028  A4D8               	btfss	status,2,c
   567  00102A  EF19  F008         	goto	u1011
   568  00102E  EF1B  F008         	goto	u1010
   569  001032                     u1011:
   570  001032  EF21  F008         	goto	l1558
   571  001036                     u1010:
   572  001036                     
   573                           ; BSR set to: 0
   574                           ;main.c: 41:                 contador++;
   575  001036  4B89               	infsnz	main@contador& (0+255),f,b
   576  001038  2B8A               	incf	(main@contador+1)& (0+255),f,b
   577  00103A                     
   578                           ; BSR set to: 0
   579                           ;main.c: 42:                 direccion = 1;
   580  00103A  0E01               	movlw	1
   581  00103C  6F8E               	movwf	main@direccion& (0+255),b
   582                           
   583                           ;main.c: 43:             } else {
   584  00103E  EF23  F008         	goto	l50
   585  001042                     l1558:
   586                           
   587                           ; BSR set to: 0
   588                           ;main.c: 44:                 direccion = 2;
   589  001042  0E02               	movlw	2
   590  001044  6F8E               	movwf	main@direccion& (0+255),b
   591  001046                     l50:
   592                           
   593                           ; BSR set to: 0
   594                           ;main.c: 46:             enProceso = 0;
   595  001046  0E00               	movlw	0
   596  001048  6F8B               	movwf	main@enProceso& (0+255),b
   597                           
   598                           ;main.c: 47:         } else if (potenciometro < 800 && PORTAbits.RA0) {
   599  00104A  EF67  F008         	goto	l1576
   600  00104E                     l1560:
   601                           
   602                           ; BSR set to: 0
   603  00104E  BF8D               	btfsc	(main@potenciometro+1)& (0+255),7,b
   604  001050  EF35  F008         	goto	u1020
   605  001054  0E20               	movlw	32
   606  001056  5D8C               	subwf	main@potenciometro& (0+255),w,b
   607  001058  0E03               	movlw	3
   608  00105A  598D               	subwfb	(main@potenciometro+1)& (0+255),w,b
   609  00105C  B0D8               	btfsc	status,0,c
   610  00105E  EF33  F008         	goto	u1021
   611  001062  EF35  F008         	goto	u1020
   612  001066                     u1021:
   613  001066  EF67  F008         	goto	l1576
   614  00106A                     u1020:
   615  00106A                     
   616                           ; BSR set to: 0
   617  00106A  A080               	btfss	128,0,c	;volatile
   618  00106C  EF3A  F008         	goto	u1031
   619  001070  EF3C  F008         	goto	u1030
   620  001074                     u1031:
   621  001074  EF67  F008         	goto	l1576
   622  001078                     u1030:
   623  001078                     
   624                           ; BSR set to: 0
   625                           ;main.c: 48:             if (direccion == 2 && enProceso) {
   626  001078  0E02               	movlw	2
   627  00107A  198E               	xorwf	main@direccion& (0+255),w,b
   628  00107C  A4D8               	btfss	status,2,c
   629  00107E  EF43  F008         	goto	u1041
   630  001082  EF45  F008         	goto	u1040
   631  001086                     u1041:
   632  001086  EF4F  F008         	goto	l53
   633  00108A                     u1040:
   634  00108A                     
   635                           ; BSR set to: 0
   636  00108A  518B               	movf	main@enProceso& (0+255),w,b
   637  00108C  B4D8               	btfsc	status,2,c
   638  00108E  EF4B  F008         	goto	u1051
   639  001092  EF4D  F008         	goto	u1050
   640  001096                     u1051:
   641  001096  EF4F  F008         	goto	l53
   642  00109A                     u1050:
   643  00109A                     
   644                           ; BSR set to: 0
   645                           ;main.c: 49:                 direccion = 1;
   646  00109A  0E01               	movlw	1
   647  00109C  6F8E               	movwf	main@direccion& (0+255),b
   648  00109E                     l53:
   649                           
   650                           ; BSR set to: 0
   651                           ;main.c: 51:             if (motor) {
   652  00109E  518F               	movf	main@motor& (0+255),w,b
   653  0010A0  B4D8               	btfsc	status,2,c
   654  0010A2  EF55  F008         	goto	u1061
   655  0010A6  EF57  F008         	goto	u1060
   656  0010AA                     u1061:
   657  0010AA  EF5B  F008         	goto	l54
   658  0010AE                     u1060:
   659  0010AE                     
   660                           ; BSR set to: 0
   661                           ;main.c: 52:                 motor = 0;
   662  0010AE  0E00               	movlw	0
   663  0010B0  6F8F               	movwf	main@motor& (0+255),b
   664                           
   665                           ;main.c: 53:             } else {
   666  0010B2  EF5D  F008         	goto	l1572
   667  0010B6                     l54:
   668                           
   669                           ; BSR set to: 0
   670                           ;main.c: 54:                 motor = direccion;
   671  0010B6  C08E  F08F         	movff	main@direccion,main@motor
   672  0010BA                     l1572:
   673                           
   674                           ; BSR set to: 0
   675                           ;main.c: 56:             enProceso = 1;
   676  0010BA  0E01               	movlw	1
   677  0010BC  6F8B               	movwf	main@enProceso& (0+255),b
   678  0010BE                     
   679                           ; BSR set to: 0
   680                           ;main.c: 57:             _delay((unsigned long)((500)*(1000000/4000.0)));
   681  0010BE  0EA3               	movlw	163
   682  0010C0  0100               	movlb	0	; () banked
   683  0010C2  6F88               	movwf	??_main& (0+255),b
   684  0010C4  0E55               	movlw	85
   685  0010C6                     u1077:
   686  0010C6  2EE8               	decfsz	wreg,f,c
   687  0010C8  D7FE               	bra	u1077
   688  0010CA  2F88               	decfsz	??_main& (0+255),f,b
   689  0010CC  D7FC               	bra	u1077
   690  0010CE                     l1576:
   691                           
   692                           ;main.c: 59:         LATE = motor;
   693  0010CE  C08F  FF8D         	movff	main@motor,3981	;volatile
   694  0010D2                     
   695                           ;main.c: 60:         _delay((unsigned long)((100)*(1000000/4000.0)));
   696  0010D2  0E21               	movlw	33
   697  0010D4  0100               	movlb	0	; () banked
   698  0010D6  6F88               	movwf	??_main& (0+255),b
   699  0010D8  0E76               	movlw	118
   700  0010DA                     u1087:
   701  0010DA  2EE8               	decfsz	wreg,f,c
   702  0010DC  D7FE               	bra	u1087
   703  0010DE  2F88               	decfsz	??_main& (0+255),f,b
   704  0010E0  D7FC               	bra	u1087
   705  0010E2  F000               	nop	
   706  0010E4  EFE6  F007         	goto	l1542
   707  0010E8  EF00  F000         	goto	start
   708  0010EC                     __end_of_main:
   709                           	callstack 0
   710                           
   711 ;; *************** function _printf *****************
   712 ;; Defined at:
   713 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
   714 ;; Parameters:    Size  Location     Type
   715 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   716 ;;		 -> STR_2(14), STR_1(15), 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  ap              2   93[COMRAM] PTR void [1]
   719 ;;		 -> ?_printf(2), 
   720 ;;  ret             2    0        int 
   721 ;; Return value:  Size  Location     Type
   722 ;;                  2   89[COMRAM] int 
   723 ;; Registers used:
   724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   725 ;; Tracked objects:
   726 ;;		On entry : 0/0
   727 ;;		On exit  : 0/0
   728 ;;		Unchanged: 0/0
   729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   730 ;;      Params:         4       0       0       0       0       0       0       0       0
   731 ;;      Locals:         2       0       0       0       0       0       0       0       0
   732 ;;      Temps:          0       0       0       0       0       0       0       0       0
   733 ;;      Totals:         6       0       0       0       0       0       0       0       0
   734 ;;Total ram usage:        6 bytes
   735 ;; Hardware stack levels used: 1
   736 ;; Hardware stack levels required when called: 7
   737 ;; This function calls:
   738 ;;		_vfprintf
   739 ;; This function is called by:
   740 ;;		_main
   741 ;; This function uses a non-reentrant model
   742 ;;
   743                           
   744                           	psect	text1
   745  001456                     __ptext1:
   746                           	callstack 0
   747  001456                     _printf:
   748                           	callstack 23
   749  001456  0E5C               	movlw	low (?_printf+2)
   750  001458  6E5E               	movwf	printf@ap^0,c
   751  00145A  0E00               	movlw	high (?_printf+2)
   752  00145C  6E5F               	movwf	(printf@ap+1)^0,c
   753  00145E  0E00               	movlw	0
   754  001460  6E52               	movwf	vfprintf@fp^0,c
   755  001462  0E00               	movlw	0
   756  001464  6E53               	movwf	(vfprintf@fp+1)^0,c
   757  001466  C05A  F054         	movff	printf@fmt,vfprintf@fmt
   758  00146A  C05B  F055         	movff	printf@fmt+1,vfprintf@fmt+1
   759  00146E  0E5E               	movlw	low printf@ap
   760  001470  6E56               	movwf	vfprintf@ap^0,c
   761  001472  0E00               	movlw	high printf@ap
   762  001474  6E57               	movwf	(vfprintf@ap+1)^0,c
   763  001476  EC57  F009         	call	_vfprintf	;wreg free
   764  00147A  0012               	return		;funcret
   765  00147C                     __end_of_printf:
   766                           	callstack 0
   767                           
   768 ;; *************** function _vfprintf *****************
   769 ;; Defined at:
   770 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   773 ;;		 -> NULL(0), 
   774 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
   775 ;;		 -> STR_2(14), STR_1(15), 
   776 ;;  ap              2   85[COMRAM] PTR PTR void 
   777 ;;		 -> printf@ap(2), 
   778 ;; Auto vars:     Size  Location     Type
   779 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
   780 ;;		 -> STR_2(14), STR_1(15), 
   781 ;; Return value:  Size  Location     Type
   782 ;;                  2   81[COMRAM] int 
   783 ;; Registers used:
   784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   790 ;;      Params:         6       0       0       0       0       0       0       0       0
   791 ;;      Locals:         2       0       0       0       0       0       0       0       0
   792 ;;      Temps:          0       0       0       0       0       0       0       0       0
   793 ;;      Totals:         8       0       0       0       0       0       0       0       0
   794 ;;Total ram usage:        8 bytes
   795 ;; Hardware stack levels used: 1
   796 ;; Hardware stack levels required when called: 6
   797 ;; This function calls:
   798 ;;		_vfpfcnvrt
   799 ;; This function is called by:
   800 ;;		_printf
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text2
   805  0012AE                     __ptext2:
   806                           	callstack 0
   807  0012AE                     _vfprintf:
   808                           	callstack 23
   809  0012AE                     
   810                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
   811  0012AE  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
   812  0012B2  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   813  0012B6                     
   814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
   815  0012B6  0E00               	movlw	0
   816  0012B8  0100               	movlb	0	; () banked
   817  0012BA  6F61               	movwf	(_nout+1)& (0+255),b
   818  0012BC  0E00               	movlw	0
   819  0012BE  6F60               	movwf	_nout& (0+255),b
   820                           
   821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   822  0012C0  EF75  F009         	goto	l1500
   823  0012C4                     l1498:
   824                           
   825                           ; BSR set to: 0
   826                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
   827  0012C4  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
   828  0012C8  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   829  0012CC  0E58               	movlw	low vfprintf@cfmt
   830  0012CE  6E44               	movwf	vfpfcnvrt@fmt^0,c
   831  0012D0  0E00               	movlw	high vfprintf@cfmt
   832  0012D2  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
   833  0012D4  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
   834  0012D8  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   835  0012DC  EC81  F005         	call	_vfpfcnvrt	;wreg free
   836  0012E0  5042               	movf	?_vfpfcnvrt^0,w,c
   837  0012E2  0100               	movlb	0	; () banked
   838  0012E4  2760               	addwf	_nout& (0+255),f,b
   839  0012E6  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
   840  0012E8  2361               	addwfc	(_nout+1)& (0+255),f,b
   841  0012EA                     l1500:
   842                           
   843                           ; BSR set to: 0
   844                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
   845  0012EA  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
   846  0012EE  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   847  0012F2                     	if	0	;tblptru may be non-zero
   848  0012F2                     	endif
   849  0012F2                     	if	0	;tblptru may be non-zero
   850  0012F2                     	endif
   851  0012F2  0008               	tblrd		*
   852  0012F4  50F5               	movf	tablat,w,c
   853  0012F6  0900               	iorlw	0
   854  0012F8  A4D8               	btfss	status,2,c
   855  0012FA  EF81  F009         	goto	u971
   856  0012FE  EF83  F009         	goto	u970
   857  001302                     u971:
   858  001302  EF62  F009         	goto	l1498
   859  001306                     u970:
   860  001306                     
   861                           ; BSR set to: 0
   862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
   863  001306  C060  F052         	movff	_nout,?_vfprintf
   864  00130A  C061  F053         	movff	_nout+1,?_vfprintf+1
   865  00130E                     
   866                           ; BSR set to: 0
   867  00130E  0012               	return		;funcret
   868  001310                     __end_of_vfprintf:
   869                           	callstack 0
   870                           
   871 ;; *************** function _vfpfcnvrt *****************
   872 ;; Defined at:
   873 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
   876 ;;		 -> NULL(0), 
   877 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
   878 ;;		 -> vfprintf@cfmt(2), 
   879 ;;  ap              2   69[COMRAM] PTR PTR void 
   880 ;;		 -> printf@ap(2), 
   881 ;; Auto vars:     Size  Location     Type
   882 ;;  ll              8   73[COMRAM] long long 
   883 ;;  llu             8    0        unsigned long long 
   884 ;;  f               4    0        unsigned long long 
   885 ;;  vp              3    0        PTR void 
   886 ;;  ct              3    0        unsigned char [3]
   887 ;;  cp              3    0        PTR unsigned char 
   888 ;;  i               2    0        int 
   889 ;;  done            2    0        int 
   890 ;;  c               1    0        unsigned char 
   891 ;; Return value:  Size  Location     Type
   892 ;;                  2   65[COMRAM] int 
   893 ;; Registers used:
   894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   900 ;;      Params:         6       0       0       0       0       0       0       0       0
   901 ;;      Locals:         8       0       0       0       0       0       0       0       0
   902 ;;      Temps:          2       0       0       0       0       0       0       0       0
   903 ;;      Totals:        16       0       0       0       0       0       0       0       0
   904 ;;Total ram usage:       16 bytes
   905 ;; Hardware stack levels used: 1
   906 ;; Hardware stack levels required when called: 5
   907 ;; This function calls:
   908 ;;		_dtoa
   909 ;;		_fputc
   910 ;; This function is called by:
   911 ;;		_vfprintf
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           	psect	text3
   916  000B02                     __ptext3:
   917                           	callstack 0
   918  000B02                     _vfpfcnvrt:
   919                           	callstack 23
   920  000B02                     
   921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
   922  000B02  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   923  000B06  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   924  000B0A  CFDE FFF6          	movff	postinc2,tblptrl
   925  000B0E  CFDD FFF7          	movff	postdec2,tblptrh
   926  000B12                     	if	0	;tblptru may be non-zero
   927  000B12                     	endif
   928  000B12                     	if	0	;tblptru may be non-zero
   929  000B12                     	endif
   930  000B12  0008               	tblrd		*
   931  000B14  50F5               	movf	tablat,w,c
   932  000B16  0A25               	xorlw	37
   933  000B18  A4D8               	btfss	status,2,c
   934  000B1A  EF91  F005         	goto	u931
   935  000B1E  EF93  F005         	goto	u930
   936  000B22                     u931:
   937  000B22  EF3F  F006         	goto	l1470
   938  000B26                     u930:
   939  000B26                     
   940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
   941  000B26  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   942  000B2A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   943  000B2E  2ADE               	incf	postinc2,f,c
   944  000B30  0E00               	movlw	0
   945  000B32  22DD               	addwfc	postdec2,f,c
   946  000B34                     
   947                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
   948  000B34  0E00               	movlw	0
   949  000B36  0100               	movlb	0	; () banked
   950  000B38  6F63               	movwf	(_width+1)& (0+255),b
   951  000B3A  0E00               	movlw	0
   952  000B3C  6F62               	movwf	_width& (0+255),b
   953  000B3E  C062  F066         	movff	_width,_flags
   954  000B42  C063  F067         	movff	_width+1,_flags+1
   955  000B46                     
   956                           ; BSR set to: 0
   957                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
   958  000B46  6964               	setf	_prec& (0+255),b
   959  000B48  6965               	setf	(_prec+1)& (0+255),b
   960  000B4A                     
   961                           ; BSR set to: 0
   962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
   963  000B4A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   964  000B4E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   965  000B52  CFDE FFF6          	movff	postinc2,tblptrl
   966  000B56  CFDD FFF7          	movff	postdec2,tblptrh
   967  000B5A                     	if	0	;tblptru may be non-zero
   968  000B5A                     	endif
   969  000B5A                     	if	0	;tblptru may be non-zero
   970  000B5A                     	endif
   971  000B5A  0008               	tblrd		*
   972  000B5C  50F5               	movf	tablat,w,c
   973  000B5E  0A64               	xorlw	100
   974  000B60  B4D8               	btfsc	status,2,c
   975  000B62  EFB5  F005         	goto	u941
   976  000B66  EFB7  F005         	goto	u940
   977  000B6A                     u941:
   978  000B6A  EFC9  F005         	goto	l1448
   979  000B6E                     u940:
   980  000B6E                     
   981                           ; BSR set to: 0
   982  000B6E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   983  000B72  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   984  000B76  CFDE FFF6          	movff	postinc2,tblptrl
   985  000B7A  CFDD FFF7          	movff	postdec2,tblptrh
   986  000B7E                     	if	0	;tblptru may be non-zero
   987  000B7E                     	endif
   988  000B7E                     	if	0	;tblptru may be non-zero
   989  000B7E                     	endif
   990  000B7E  0008               	tblrd		*
   991  000B80  50F5               	movf	tablat,w,c
   992  000B82  0A69               	xorlw	105
   993  000B84  A4D8               	btfss	status,2,c
   994  000B86  EFC7  F005         	goto	u951
   995  000B8A  EFC9  F005         	goto	u950
   996  000B8E                     u951:
   997  000B8E  EF09  F006         	goto	l1454
   998  000B92                     u950:
   999  000B92                     l1448:
  1000                           
  1001                           ; BSR set to: 0
  1002                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1003  000B92  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1004  000B96  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1005  000B9A  2ADE               	incf	postinc2,f,c
  1006  000B9C  0E00               	movlw	0
  1007  000B9E  22DD               	addwfc	postdec2,f,c
  1008                           
  1009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1010  000BA0  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1011  000BA4  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1012  000BA8  CFDF F048          	movff	indf2,??_vfpfcnvrt
  1013  000BAC  0E02               	movlw	2
  1014  000BAE  26DE               	addwf	postinc2,f,c
  1015  000BB0  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
  1016  000BB4  0E00               	movlw	0
  1017  000BB6  22DD               	addwfc	postdec2,f,c
  1018  000BB8  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1019  000BBC  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1020  000BC0  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
  1021  000BC4  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
  1022  000BC8  0E00               	movlw	0
  1023  000BCA  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1024  000BCC  0EFF               	movlw	-1
  1025  000BCE  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
  1026  000BD0  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
  1027  000BD2  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
  1028  000BD4  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
  1029  000BD6  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
  1030  000BD8  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
  1031  000BDA                     
  1032                           ; BSR set to: 0
  1033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1034  000BDA  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
  1035  000BDE  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1036  000BE2  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
  1037  000BE6  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1038  000BEA  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1039  000BEE  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1040  000BF2  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1041  000BF6  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1042  000BFA  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1043  000BFE  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1044  000C02  EC10  F004         	call	_dtoa	;wreg free
  1045  000C06  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
  1046  000C0A  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1047  000C0E  EF5A  F006         	goto	l822
  1048  000C12                     l1454:
  1049                           
  1050                           ; BSR set to: 0
  1051                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1052  000C12  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1053  000C16  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1054  000C1A  CFDE FFF6          	movff	postinc2,tblptrl
  1055  000C1E  CFDD FFF7          	movff	postdec2,tblptrh
  1056  000C22                     	if	0	;tblptru may be non-zero
  1057  000C22                     	endif
  1058  000C22                     	if	0	;tblptru may be non-zero
  1059  000C22                     	endif
  1060  000C22  0008               	tblrd		*
  1061  000C24  50F5               	movf	tablat,w,c
  1062  000C26  0A25               	xorlw	37
  1063  000C28  A4D8               	btfss	status,2,c
  1064  000C2A  EF19  F006         	goto	u961
  1065  000C2E  EF1B  F006         	goto	u960
  1066  000C32                     u961:
  1067  000C32  EF32  F006         	goto	l1464
  1068  000C36                     u960:
  1069  000C36                     
  1070                           ; BSR set to: 0
  1071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1072  000C36  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1073  000C3A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1074  000C3E  2ADE               	incf	postinc2,f,c
  1075  000C40  0E00               	movlw	0
  1076  000C42  22DD               	addwfc	postdec2,f,c
  1077  000C44                     
  1078                           ; BSR set to: 0
  1079                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1080  000C44  0E00               	movlw	0
  1081  000C46  6E04               	movwf	(fputc@c+1)^0,c
  1082  000C48  0E25               	movlw	37
  1083  000C4A  6E03               	movwf	fputc@c^0,c
  1084  000C4C  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1085  000C50  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1086  000C54  ECD9  F008         	call	_fputc	;wreg free
  1087  000C58                     l1460:
  1088                           
  1089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1090  000C58  0E00               	movlw	0
  1091  000C5A  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  1092  000C5C  0E01               	movlw	1
  1093  000C5E  6E42               	movwf	?_vfpfcnvrt^0,c
  1094  000C60  EF5A  F006         	goto	l822
  1095  000C64                     l1464:
  1096                           
  1097                           ; BSR set to: 0
  1098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1099  000C64  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1100  000C68  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1101  000C6C  2ADE               	incf	postinc2,f,c
  1102  000C6E  0E00               	movlw	0
  1103  000C70  22DD               	addwfc	postdec2,f,c
  1104  000C72                     
  1105                           ; BSR set to: 0
  1106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1107  000C72  0E00               	movlw	0
  1108  000C74  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
  1109  000C76  0E00               	movlw	0
  1110  000C78  6E42               	movwf	?_vfpfcnvrt^0,c
  1111  000C7A  EF5A  F006         	goto	l822
  1112  000C7E                     l1470:
  1113                           
  1114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1115  000C7E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1116  000C82  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1117  000C86  CFDE FFF6          	movff	postinc2,tblptrl
  1118  000C8A  CFDD FFF7          	movff	postdec2,tblptrh
  1119  000C8E                     	if	0	;tblptru may be non-zero
  1120  000C8E                     	endif
  1121  000C8E                     	if	0	;tblptru may be non-zero
  1122  000C8E                     	endif
  1123  000C8E  0008               	tblrd		*
  1124  000C90  50F5               	movf	tablat,w,c
  1125  000C92  6E03               	movwf	fputc@c^0,c
  1126  000C94  6A04               	clrf	(fputc@c+1)^0,c
  1127  000C96  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
  1128  000C9A  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1129  000C9E  ECD9  F008         	call	_fputc	;wreg free
  1130  000CA2                     
  1131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1132  000CA2  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1133  000CA6  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1134  000CAA  2ADE               	incf	postinc2,f,c
  1135  000CAC  0E00               	movlw	0
  1136  000CAE  22DD               	addwfc	postdec2,f,c
  1137  000CB0  EF2C  F006         	goto	l1460
  1138  000CB4                     l822:
  1139  000CB4  0012               	return		;funcret
  1140  000CB6                     __end_of_vfpfcnvrt:
  1141                           	callstack 0
  1142                           
  1143 ;; *************** function _dtoa *****************
  1144 ;; Defined at:
  1145 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1146 ;; Parameters:    Size  Location     Type
  1147 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
  1148 ;;		 -> NULL(0), 
  1149 ;;  d               8   31[COMRAM] long long 
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;  n               8   55[COMRAM] long long 
  1152 ;;  i               2   63[COMRAM] int 
  1153 ;;  s               2   53[COMRAM] int 
  1154 ;;  w               2   51[COMRAM] int 
  1155 ;;  p               2   49[COMRAM] int 
  1156 ;; Return value:  Size  Location     Type
  1157 ;;                  2   29[COMRAM] int 
  1158 ;; Registers used:
  1159 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1165 ;;      Params:        10       0       0       0       0       0       0       0       0
  1166 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1167 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1168 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1169 ;;Total ram usage:       36 bytes
  1170 ;; Hardware stack levels used: 1
  1171 ;; Hardware stack levels required when called: 4
  1172 ;; This function calls:
  1173 ;;		___aodiv
  1174 ;;		___aomod
  1175 ;;		_abs
  1176 ;;		_pad
  1177 ;; This function is called by:
  1178 ;;		_vfpfcnvrt
  1179 ;; This function uses a non-reentrant model
  1180 ;;
  1181                           
  1182                           	psect	text4
  1183  000820                     __ptext4:
  1184                           	callstack 0
  1185  000820                     _dtoa:
  1186                           	callstack 23
  1187  000820                     
  1188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1189  000820  C020  F038         	movff	dtoa@d,dtoa@n
  1190  000824  C021  F039         	movff	dtoa@d+1,dtoa@n+1
  1191  000828  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
  1192  00082C  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
  1193  000830  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
  1194  000834  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
  1195  000838  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
  1196  00083C  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
  1197  000840                     
  1198                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1199  000840  BE3F               	btfsc	(dtoa@n+7)^0,7,c
  1200  000842  EF25  F004         	goto	u781
  1201  000846  EF28  F004         	goto	u780
  1202  00084A                     u781:
  1203  00084A  0E01               	movlw	1
  1204  00084C  EF29  F004         	goto	u790
  1205  000850                     u780:
  1206  000850  0E00               	movlw	0
  1207  000852                     u790:
  1208  000852  6E36               	movwf	dtoa@s^0,c
  1209  000854  6A37               	clrf	(dtoa@s+1)^0,c
  1210                           
  1211                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1212  000856  5036               	movf	dtoa@s^0,w,c
  1213  000858  1037               	iorwf	(dtoa@s+1)^0,w,c
  1214  00085A  B4D8               	btfsc	status,2,c
  1215  00085C  EF32  F004         	goto	u801
  1216  000860  EF34  F004         	goto	u800
  1217  000864                     u801:
  1218  000864  EF44  F004         	goto	l1380
  1219  000868                     u800:
  1220  000868                     
  1221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1222  000868  1E3F               	comf	(dtoa@n+7)^0,f,c
  1223  00086A  1E3E               	comf	(dtoa@n+6)^0,f,c
  1224  00086C  1E3D               	comf	(dtoa@n+5)^0,f,c
  1225  00086E  1E3C               	comf	(dtoa@n+4)^0,f,c
  1226  000870  1E3B               	comf	(dtoa@n+3)^0,f,c
  1227  000872  1E3A               	comf	(dtoa@n+2)^0,f,c
  1228  000874  1E39               	comf	(dtoa@n+1)^0,f,c
  1229  000876  6C38               	negf	dtoa@n^0,c
  1230  000878  0E00               	movlw	0
  1231  00087A  2239               	addwfc	(dtoa@n+1)^0,f,c
  1232  00087C  223A               	addwfc	(dtoa@n+2)^0,f,c
  1233  00087E  223B               	addwfc	(dtoa@n+3)^0,f,c
  1234  000880  223C               	addwfc	(dtoa@n+4)^0,f,c
  1235  000882  223D               	addwfc	(dtoa@n+5)^0,f,c
  1236  000884  223E               	addwfc	(dtoa@n+6)^0,f,c
  1237  000886  223F               	addwfc	(dtoa@n+7)^0,f,c
  1238  000888                     l1380:
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1241  000888  0100               	movlb	0	; () banked
  1242  00088A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1243  00088C  EF4A  F004         	goto	u811
  1244  000890  EF4C  F004         	goto	u810
  1245  000894                     u811:
  1246  000894  EF4D  F004         	goto	l1384
  1247  000898                     u810:
  1248  000898                     
  1249                           ; BSR set to: 0
  1250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1251  000898  9366               	bcf	_flags& (0+255),1,b
  1252  00089A                     l1384:
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1256  00089A  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1257  00089C  EF5A  F004         	goto	u820
  1258  0008A0  5165               	movf	(_prec+1)& (0+255),w,b
  1259  0008A2  E106               	bnz	u821
  1260  0008A4  0564               	decf	_prec& (0+255),w,b
  1261  0008A6  B0D8               	btfsc	status,0,c
  1262  0008A8  EF58  F004         	goto	u821
  1263  0008AC  EF5A  F004         	goto	u820
  1264  0008B0                     u821:
  1265  0008B0  EF60  F004         	goto	l795
  1266  0008B4                     u820:
  1267  0008B4                     
  1268                           ; BSR set to: 0
  1269  0008B4  0E00               	movlw	0
  1270  0008B6  6E33               	movwf	(dtoa@p+1)^0,c
  1271  0008B8  0E01               	movlw	1
  1272  0008BA  6E32               	movwf	dtoa@p^0,c
  1273  0008BC  EF64  F004         	goto	l797
  1274  0008C0                     l795:
  1275                           
  1276                           ; BSR set to: 0
  1277  0008C0  C064  F032         	movff	_prec,dtoa@p
  1278  0008C4  C065  F033         	movff	_prec+1,dtoa@p+1
  1279  0008C8                     l797:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1283  0008C8  C062  F034         	movff	_width,dtoa@w
  1284  0008CC  C063  F035         	movff	_width+1,dtoa@w+1
  1285  0008D0                     
  1286                           ; BSR set to: 0
  1287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1288  0008D0  5036               	movf	dtoa@s^0,w,c
  1289  0008D2  1037               	iorwf	(dtoa@s+1)^0,w,c
  1290  0008D4  A4D8               	btfss	status,2,c
  1291  0008D6  EF6F  F004         	goto	u831
  1292  0008DA  EF71  F004         	goto	u830
  1293  0008DE                     u831:
  1294  0008DE  EF78  F004         	goto	l1392
  1295  0008E2                     u830:
  1296  0008E2                     
  1297                           ; BSR set to: 0
  1298  0008E2  A566               	btfss	_flags& (0+255),2,b
  1299  0008E4  EF76  F004         	goto	u841
  1300  0008E8  EF78  F004         	goto	u840
  1301  0008EC                     u841:
  1302  0008EC  EF7B  F004         	goto	l1394
  1303  0008F0                     u840:
  1304  0008F0                     l1392:
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1308  0008F0  0634               	decf	dtoa@w^0,f,c
  1309  0008F2  A0D8               	btfss	status,0,c
  1310  0008F4  0635               	decf	(dtoa@w+1)^0,f,c
  1311  0008F6                     l1394:
  1312                           
  1313                           ; BSR set to: 0
  1314                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1315  0008F6  0E00               	movlw	0
  1316  0008F8  6E41               	movwf	(dtoa@i+1)^0,c
  1317  0008FA  0E1F               	movlw	31
  1318  0008FC  6E40               	movwf	dtoa@i^0,c
  1319  0008FE                     
  1320                           ; BSR set to: 0
  1321                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1322  0008FE  0E00               	movlw	0
  1323  000900  6F87               	movwf	(_dbuf+31)& (0+255),b
  1324                           
  1325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1326  000902  EFFF  F004         	goto	l1408
  1327  000906                     l1398:
  1328                           
  1329                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1330  000906  0640               	decf	dtoa@i^0,f,c
  1331  000908  A0D8               	btfss	status,0,c
  1332  00090A  0641               	decf	(dtoa@i+1)^0,f,c
  1333  00090C                     
  1334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1335  00090C  0E68               	movlw	low _dbuf
  1336  00090E  2440               	addwf	dtoa@i^0,w,c
  1337  000910  6ED9               	movwf	fsr2l,c
  1338  000912  0E00               	movlw	high _dbuf
  1339  000914  2041               	addwfc	(dtoa@i+1)^0,w,c
  1340  000916  6EDA               	movwf	fsr2h,c
  1341  000918  C038  F001         	movff	dtoa@n,___aomod@dividend
  1342  00091C  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1343  000920  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1344  000924  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1345  000928  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1346  00092C  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1347  000930  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1348  000934  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1349  000938  0E0A               	movlw	10
  1350  00093A  6E09               	movwf	___aomod@divisor^0,c
  1351  00093C  0E00               	movlw	0
  1352  00093E  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1353  000940  0E00               	movlw	0
  1354  000942  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1355  000944  0E00               	movlw	0
  1356  000946  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1357  000948  0E00               	movlw	0
  1358  00094A  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1359  00094C  0E00               	movlw	0
  1360  00094E  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1361  000950  0E00               	movlw	0
  1362  000952  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1363  000954  0E00               	movlw	0
  1364  000956  6E10               	movwf	(___aomod@divisor+7)^0,c
  1365  000958  EC1F  F007         	call	___aomod	;wreg free
  1366  00095C  C001  F028         	movff	?___aomod,??_dtoa
  1367  000960  C002  F029         	movff	?___aomod+1,??_dtoa+1
  1368  000964  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  1369  000968  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  1370  00096C  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  1371  000970  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  1372  000974  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  1373  000978  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  1374  00097C  C028  F013         	movff	??_dtoa,abs@a
  1375  000980  C02A  F014         	movff	??_dtoa+2,abs@a+1
  1376  000984  ECAA  F009         	call	_abs	;wreg free
  1377  000988  5013               	movf	?_abs^0,w,c
  1378  00098A  0F30               	addlw	48
  1379  00098C  6EDF               	movwf	indf2,c
  1380  00098E                     
  1381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1382  00098E  0632               	decf	dtoa@p^0,f,c
  1383  000990  A0D8               	btfss	status,0,c
  1384  000992  0633               	decf	(dtoa@p+1)^0,f,c
  1385  000994                     
  1386                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1387  000994  0634               	decf	dtoa@w^0,f,c
  1388  000996  A0D8               	btfss	status,0,c
  1389  000998  0635               	decf	(dtoa@w+1)^0,f,c
  1390  00099A                     
  1391                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1392  00099A  C038  F001         	movff	dtoa@n,___aodiv@dividend
  1393  00099E  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1394  0009A2  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1395  0009A6  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1396  0009AA  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1397  0009AE  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1398  0009B2  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1399  0009B6  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1400  0009BA  0E0A               	movlw	10
  1401  0009BC  6E09               	movwf	___aodiv@divisor^0,c
  1402  0009BE  0E00               	movlw	0
  1403  0009C0  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1404  0009C2  0E00               	movlw	0
  1405  0009C4  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1406  0009C6  0E00               	movlw	0
  1407  0009C8  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1408  0009CA  0E00               	movlw	0
  1409  0009CC  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1410  0009CE  0E00               	movlw	0
  1411  0009D0  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1412  0009D2  0E00               	movlw	0
  1413  0009D4  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1414  0009D6  0E00               	movlw	0
  1415  0009D8  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1416  0009DA  EC5B  F006         	call	___aodiv	;wreg free
  1417  0009DE  C001  F038         	movff	?___aodiv,dtoa@n
  1418  0009E2  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  1419  0009E6  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  1420  0009EA  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  1421  0009EE  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  1422  0009F2  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  1423  0009F6  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  1424  0009FA  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  1425  0009FE                     l1408:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1428  0009FE  BE41               	btfsc	(dtoa@i+1)^0,7,c
  1429  000A00  EF0A  F005         	goto	u851
  1430  000A04  5041               	movf	(dtoa@i+1)^0,w,c
  1431  000A06  E108               	bnz	u850
  1432  000A08  0440               	decf	dtoa@i^0,w,c
  1433  000A0A  A0D8               	btfss	status,0,c
  1434  000A0C  EF0A  F005         	goto	u851
  1435  000A10  EF0C  F005         	goto	u850
  1436  000A14                     u851:
  1437  000A14  EF3D  F005         	goto	l1418
  1438  000A18                     u850:
  1439  000A18  5038               	movf	dtoa@n^0,w,c
  1440  000A1A  1039               	iorwf	(dtoa@n+1)^0,w,c
  1441  000A1C  103A               	iorwf	(dtoa@n+2)^0,w,c
  1442  000A1E  103B               	iorwf	(dtoa@n+3)^0,w,c
  1443  000A20  103C               	iorwf	(dtoa@n+4)^0,w,c
  1444  000A22  103D               	iorwf	(dtoa@n+5)^0,w,c
  1445  000A24  103E               	iorwf	(dtoa@n+6)^0,w,c
  1446  000A26  103F               	iorwf	(dtoa@n+7)^0,w,c
  1447  000A28  A4D8               	btfss	status,2,c
  1448  000A2A  EF19  F005         	goto	u861
  1449  000A2E  EF1B  F005         	goto	u860
  1450  000A32                     u861:
  1451  000A32  EF83  F004         	goto	l1398
  1452  000A36                     u860:
  1453  000A36  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1454  000A38  EF28  F005         	goto	u870
  1455  000A3C  5033               	movf	(dtoa@p+1)^0,w,c
  1456  000A3E  E106               	bnz	u871
  1457  000A40  0432               	decf	dtoa@p^0,w,c
  1458  000A42  B0D8               	btfsc	status,0,c
  1459  000A44  EF26  F005         	goto	u871
  1460  000A48  EF28  F005         	goto	u870
  1461  000A4C                     u871:
  1462  000A4C  EF83  F004         	goto	l1398
  1463  000A50                     u870:
  1464  000A50  BE35               	btfsc	(dtoa@w+1)^0,7,c
  1465  000A52  EF33  F005         	goto	u881
  1466  000A56  5035               	movf	(dtoa@w+1)^0,w,c
  1467  000A58  E108               	bnz	u880
  1468  000A5A  0434               	decf	dtoa@w^0,w,c
  1469  000A5C  A0D8               	btfss	status,0,c
  1470  000A5E  EF33  F005         	goto	u881
  1471  000A62  EF35  F005         	goto	u880
  1472  000A66                     u881:
  1473  000A66  EF3D  F005         	goto	l1418
  1474  000A6A                     u880:
  1475  000A6A  0100               	movlb	0	; () banked
  1476  000A6C  B366               	btfsc	_flags& (0+255),1,b
  1477  000A6E  EF3B  F005         	goto	u891
  1478  000A72  EF3D  F005         	goto	u890
  1479  000A76                     u891:
  1480  000A76  EF83  F004         	goto	l1398
  1481  000A7A                     u890:
  1482  000A7A                     l1418:
  1483                           
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1485  000A7A  5036               	movf	dtoa@s^0,w,c
  1486  000A7C  1037               	iorwf	(dtoa@s+1)^0,w,c
  1487  000A7E  A4D8               	btfss	status,2,c
  1488  000A80  EF44  F005         	goto	u901
  1489  000A84  EF46  F005         	goto	u900
  1490  000A88                     u901:
  1491  000A88  EF4E  F005         	goto	l1422
  1492  000A8C                     u900:
  1493  000A8C  0100               	movlb	0	; () banked
  1494  000A8E  A566               	btfss	_flags& (0+255),2,b
  1495  000A90  EF4C  F005         	goto	u911
  1496  000A94  EF4E  F005         	goto	u910
  1497  000A98                     u911:
  1498  000A98  EF6C  F005         	goto	l1432
  1499  000A9C                     u910:
  1500  000A9C                     l1422:
  1501                           
  1502                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1503  000A9C  0640               	decf	dtoa@i^0,f,c
  1504  000A9E  A0D8               	btfss	status,0,c
  1505  000AA0  0641               	decf	(dtoa@i+1)^0,f,c
  1506  000AA2                     
  1507                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1508  000AA2  5036               	movf	dtoa@s^0,w,c
  1509  000AA4  1037               	iorwf	(dtoa@s+1)^0,w,c
  1510  000AA6  A4D8               	btfss	status,2,c
  1511  000AA8  EF58  F005         	goto	u921
  1512  000AAC  EF5A  F005         	goto	u920
  1513  000AB0                     u921:
  1514  000AB0  EF60  F005         	goto	l1428
  1515  000AB4                     u920:
  1516  000AB4  0E00               	movlw	0
  1517  000AB6  6E31               	movwf	(_dtoa$728+1)^0,c
  1518  000AB8  0E2B               	movlw	43
  1519  000ABA  6E30               	movwf	_dtoa$728^0,c
  1520  000ABC  EF64  F005         	goto	l1430
  1521  000AC0                     l1428:
  1522  000AC0  0E00               	movlw	0
  1523  000AC2  6E31               	movwf	(_dtoa$728+1)^0,c
  1524  000AC4  0E2D               	movlw	45
  1525  000AC6  6E30               	movwf	_dtoa$728^0,c
  1526  000AC8                     l1430:
  1527  000AC8  0E68               	movlw	low _dbuf
  1528  000ACA  2440               	addwf	dtoa@i^0,w,c
  1529  000ACC  6ED9               	movwf	fsr2l,c
  1530  000ACE  0E00               	movlw	high _dbuf
  1531  000AD0  2041               	addwfc	(dtoa@i+1)^0,w,c
  1532  000AD2  6EDA               	movwf	fsr2h,c
  1533  000AD4  C030  FFDF         	movff	_dtoa$728,indf2
  1534  000AD8                     l1432:
  1535                           
  1536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1537  000AD8  C01E  F013         	movff	dtoa@fp,pad@fp
  1538  000ADC  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1539  000AE0  0E68               	movlw	low _dbuf
  1540  000AE2  2440               	addwf	dtoa@i^0,w,c
  1541  000AE4  6E15               	movwf	pad@buf^0,c
  1542  000AE6  0E00               	movlw	high _dbuf
  1543  000AE8  2041               	addwfc	(dtoa@i+1)^0,w,c
  1544  000AEA  6E16               	movwf	(pad@buf+1)^0,c
  1545  000AEC  C034  F017         	movff	dtoa@w,pad@p
  1546  000AF0  C035  F018         	movff	dtoa@w+1,pad@p+1
  1547  000AF4  EC76  F008         	call	_pad	;wreg free
  1548  000AF8  C013  F01E         	movff	?_pad,?_dtoa
  1549  000AFC  C014  F01F         	movff	?_pad+1,?_dtoa+1
  1550  000B00  0012               	return		;funcret
  1551  000B02                     __end_of_dtoa:
  1552                           	callstack 0
  1553                           
  1554 ;; *************** function _pad *****************
  1555 ;; Defined at:
  1556 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1559 ;;		 -> NULL(0), 
  1560 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1561 ;;		 -> dbuf(32), 
  1562 ;;  p               2   22[COMRAM] int 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  w               2   27[COMRAM] int 
  1565 ;;  i               2   25[COMRAM] int 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  2   18[COMRAM] int 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1575 ;;      Params:         6       0       0       0       0       0       0       0       0
  1576 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1577 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1578 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1579 ;;Total ram usage:       11 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 3
  1582 ;; This function calls:
  1583 ;;		_fputc
  1584 ;;		_fputs
  1585 ;;		_strlen
  1586 ;; This function is called by:
  1587 ;;		_dtoa
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           	psect	text5
  1592  0010EC                     __ptext5:
  1593                           	callstack 0
  1594  0010EC                     _pad:
  1595                           	callstack 23
  1596  0010EC                     
  1597                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  1598  0010EC  0100               	movlb	0	; () banked
  1599  0010EE  A166               	btfss	_flags& (0+255),0,b
  1600  0010F0  EF7C  F008         	goto	u731
  1601  0010F4  EF7E  F008         	goto	u730
  1602  0010F8                     u731:
  1603  0010F8  EF88  F008         	goto	l1352
  1604  0010FC                     u730:
  1605  0010FC                     
  1606                           ; BSR set to: 0
  1607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  1608  0010FC  C015  F00C         	movff	pad@buf,fputs@s
  1609  001100  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1610  001104  C013  F00E         	movff	pad@fp,fputs@fp
  1611  001108  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1612  00110C  EC88  F009         	call	_fputs	;wreg free
  1613  001110                     l1352:
  1614                           
  1615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  1616  001110  BE18               	btfsc	(pad@p+1)^0,7,c
  1617  001112  EF8D  F008         	goto	u741
  1618  001116  EF8F  F008         	goto	u740
  1619  00111A                     u741:
  1620  00111A  EF95  F008         	goto	l1356
  1621  00111E                     u740:
  1622  00111E  C017  F01C         	movff	pad@p,pad@w
  1623  001122  C018  F01D         	movff	pad@p+1,pad@w+1
  1624  001126  EF99  F008         	goto	l784
  1625  00112A                     l1356:
  1626  00112A  0E00               	movlw	0
  1627  00112C  6E1D               	movwf	(pad@w+1)^0,c
  1628  00112E  0E00               	movlw	0
  1629  001130  6E1C               	movwf	pad@w^0,c
  1630  001132                     l784:
  1631                           
  1632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  1633  001132  0E00               	movlw	0
  1634  001134  6E1B               	movwf	(pad@i+1)^0,c
  1635  001136  0E00               	movlw	0
  1636  001138  6E1A               	movwf	pad@i^0,c
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1639  00113A  EFAB  F008         	goto	l1362
  1640  00113E                     l1358:
  1641                           
  1642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  1643  00113E  0E00               	movlw	0
  1644  001140  6E04               	movwf	(fputc@c+1)^0,c
  1645  001142  0E20               	movlw	32
  1646  001144  6E03               	movwf	fputc@c^0,c
  1647  001146  C013  F005         	movff	pad@fp,fputc@fp
  1648  00114A  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1649  00114E  ECD9  F008         	call	_fputc	;wreg free
  1650  001152                     
  1651                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  1652  001152  4A1A               	infsnz	pad@i^0,f,c
  1653  001154  2A1B               	incf	(pad@i+1)^0,f,c
  1654  001156                     l1362:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  1657  001156  501C               	movf	pad@w^0,w,c
  1658  001158  5C1A               	subwf	pad@i^0,w,c
  1659  00115A  501B               	movf	(pad@i+1)^0,w,c
  1660  00115C  0A80               	xorlw	128
  1661  00115E  6E19               	movwf	??_pad^0,c
  1662  001160  501D               	movf	(pad@w+1)^0,w,c
  1663  001162  0A80               	xorlw	128
  1664  001164  5819               	subwfb	??_pad^0,w,c
  1665  001166  A0D8               	btfss	status,0,c
  1666  001168  EFB8  F008         	goto	u751
  1667  00116C  EFBA  F008         	goto	u750
  1668  001170                     u751:
  1669  001170  EF9F  F008         	goto	l1358
  1670  001174                     u750:
  1671  001174                     
  1672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  1673  001174  0100               	movlb	0	; () banked
  1674  001176  B166               	btfsc	_flags& (0+255),0,b
  1675  001178  EFC0  F008         	goto	u761
  1676  00117C  EFC2  F008         	goto	u760
  1677  001180                     u761:
  1678  001180  EFCC  F008         	goto	l1366
  1679  001184                     u760:
  1680  001184                     
  1681                           ; BSR set to: 0
  1682                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  1683  001184  C015  F00C         	movff	pad@buf,fputs@s
  1684  001188  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1685  00118C  C013  F00E         	movff	pad@fp,fputs@fp
  1686  001190  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1687  001194  EC88  F009         	call	_fputs	;wreg free
  1688  001198                     l1366:
  1689                           
  1690                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  1691  001198  C015  F001         	movff	pad@buf,strlen@s
  1692  00119C  C016  F002         	movff	pad@buf+1,strlen@s+1
  1693  0011A0  ECCA  F009         	call	_strlen	;wreg free
  1694  0011A4  501C               	movf	pad@w^0,w,c
  1695  0011A6  2401               	addwf	?_strlen^0,w,c
  1696  0011A8  6E13               	movwf	?_pad^0,c
  1697  0011AA  501D               	movf	(pad@w+1)^0,w,c
  1698  0011AC  2002               	addwfc	(?_strlen+1)^0,w,c
  1699  0011AE  6E14               	movwf	(?_pad+1)^0,c
  1700  0011B0  0012               	return		;funcret
  1701  0011B2                     __end_of_pad:
  1702                           	callstack 0
  1703                           
  1704 ;; *************** function _strlen *****************
  1705 ;; Defined at:
  1706 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1709 ;;		 -> dbuf(32), 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1712 ;;		 -> dbuf(32), 
  1713 ;; Return value:  Size  Location     Type
  1714 ;;                  2    0[COMRAM] unsigned int 
  1715 ;; Registers used:
  1716 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1717 ;; Tracked objects:
  1718 ;;		On entry : 0/0
  1719 ;;		On exit  : 0/0
  1720 ;;		Unchanged: 0/0
  1721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1722 ;;      Params:         2       0       0       0       0       0       0       0       0
  1723 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1724 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1725 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1726 ;;Total ram usage:        4 bytes
  1727 ;; Hardware stack levels used: 1
  1728 ;; This function calls:
  1729 ;;		Nothing
  1730 ;; This function is called by:
  1731 ;;		_pad
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           	psect	text6
  1736  001394                     __ptext6:
  1737                           	callstack 0
  1738  001394                     _strlen:
  1739                           	callstack 25
  1740  001394  C001  F003         	movff	strlen@s,strlen@a
  1741  001398  C002  F004         	movff	strlen@s+1,strlen@a+1
  1742  00139C  EFD2  F009         	goto	l1262
  1743  0013A0                     l1260:
  1744  0013A0  4A01               	infsnz	strlen@s^0,f,c
  1745  0013A2  2A02               	incf	(strlen@s+1)^0,f,c
  1746  0013A4                     l1262:
  1747  0013A4  C001  FFD9         	movff	strlen@s,fsr2l
  1748  0013A8  C002  FFDA         	movff	strlen@s+1,fsr2h
  1749  0013AC  50DF               	movf	indf2,w,c
  1750  0013AE  A4D8               	btfss	status,2,c
  1751  0013B0  EFDC  F009         	goto	u591
  1752  0013B4  EFDE  F009         	goto	u590
  1753  0013B8                     u591:
  1754  0013B8  EFD0  F009         	goto	l1260
  1755  0013BC                     u590:
  1756  0013BC  5003               	movf	strlen@a^0,w,c
  1757  0013BE  5C01               	subwf	strlen@s^0,w,c
  1758  0013C0  6E01               	movwf	?_strlen^0,c
  1759  0013C2  5004               	movf	(strlen@a+1)^0,w,c
  1760  0013C4  5802               	subwfb	(strlen@s+1)^0,w,c
  1761  0013C6  6E02               	movwf	(?_strlen+1)^0,c
  1762  0013C8  0012               	return		;funcret
  1763  0013CA                     __end_of_strlen:
  1764                           	callstack 0
  1765                           
  1766 ;; *************** function _fputs *****************
  1767 ;; Defined at:
  1768 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  1769 ;; Parameters:    Size  Location     Type
  1770 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1771 ;;		 -> dbuf(32), 
  1772 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1773 ;;		 -> NULL(0), 
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;  i               2   16[COMRAM] int 
  1776 ;;  c               1   15[COMRAM] unsigned char 
  1777 ;; Return value:  Size  Location     Type
  1778 ;;                  2   11[COMRAM] int 
  1779 ;; Registers used:
  1780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1781 ;; Tracked objects:
  1782 ;;		On entry : 0/0
  1783 ;;		On exit  : 0/0
  1784 ;;		Unchanged: 0/0
  1785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1786 ;;      Params:         4       0       0       0       0       0       0       0       0
  1787 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1788 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1789 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1790 ;;Total ram usage:        7 bytes
  1791 ;; Hardware stack levels used: 1
  1792 ;; Hardware stack levels required when called: 2
  1793 ;; This function calls:
  1794 ;;		_fputc
  1795 ;; This function is called by:
  1796 ;;		_pad
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           	psect	text7
  1801  001310                     __ptext7:
  1802                           	callstack 0
  1803  001310                     _fputs:
  1804                           	callstack 23
  1805  001310  0E00               	movlw	0
  1806  001312  6E12               	movwf	(fputs@i+1)^0,c
  1807  001314  0E00               	movlw	0
  1808  001316  6E11               	movwf	fputs@i^0,c
  1809  001318  EF99  F009         	goto	l1256
  1810  00131C                     l1252:
  1811  00131C  C010  F003         	movff	fputs@c,fputc@c
  1812  001320  6A04               	clrf	(fputc@c+1)^0,c
  1813  001322  C00E  F005         	movff	fputs@fp,fputc@fp
  1814  001326  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1815  00132A  ECD9  F008         	call	_fputc	;wreg free
  1816  00132E  4A11               	infsnz	fputs@i^0,f,c
  1817  001330  2A12               	incf	(fputs@i+1)^0,f,c
  1818  001332                     l1256:
  1819  001332  5011               	movf	fputs@i^0,w,c
  1820  001334  240C               	addwf	fputs@s^0,w,c
  1821  001336  6ED9               	movwf	fsr2l,c
  1822  001338  5012               	movf	(fputs@i+1)^0,w,c
  1823  00133A  200D               	addwfc	(fputs@s+1)^0,w,c
  1824  00133C  6EDA               	movwf	fsr2h,c
  1825  00133E  50DF               	movf	indf2,w,c
  1826  001340  6E10               	movwf	fputs@c^0,c
  1827  001342  5010               	movf	fputs@c^0,w,c
  1828  001344  A4D8               	btfss	status,2,c
  1829  001346  EFA7  F009         	goto	u581
  1830  00134A  EFA9  F009         	goto	u580
  1831  00134E                     u581:
  1832  00134E  EF8E  F009         	goto	l1252
  1833  001352                     u580:
  1834  001352  0012               	return		;funcret
  1835  001354                     __end_of_fputs:
  1836                           	callstack 0
  1837                           
  1838 ;; *************** function _fputc *****************
  1839 ;; Defined at:
  1840 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  1841 ;; Parameters:    Size  Location     Type
  1842 ;;  c               2    2[COMRAM] int 
  1843 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1844 ;;		 -> NULL(0), 
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;		None
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  2    2[COMRAM] int 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1856 ;;      Params:         4       0       0       0       0       0       0       0       0
  1857 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1858 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1859 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1860 ;;Total ram usage:        9 bytes
  1861 ;; Hardware stack levels used: 1
  1862 ;; Hardware stack levels required when called: 1
  1863 ;; This function calls:
  1864 ;;		_putch
  1865 ;; This function is called by:
  1866 ;;		_pad
  1867 ;;		_vfpfcnvrt
  1868 ;;		_fputs
  1869 ;; This function uses a non-reentrant model
  1870 ;;
  1871                           
  1872                           	psect	text8
  1873  0011B2                     __ptext8:
  1874                           	callstack 0
  1875  0011B2                     _fputc:
  1876                           	callstack 26
  1877  0011B2  5005               	movf	fputc@fp^0,w,c
  1878  0011B4  1006               	iorwf	(fputc@fp+1)^0,w,c
  1879  0011B6  B4D8               	btfsc	status,2,c
  1880  0011B8  EFE0  F008         	goto	u541
  1881  0011BC  EFE2  F008         	goto	u540
  1882  0011C0                     u541:
  1883  0011C0  EFEB  F008         	goto	l1240
  1884  0011C4                     u540:
  1885  0011C4  5005               	movf	fputc@fp^0,w,c
  1886  0011C6  1006               	iorwf	(fputc@fp+1)^0,w,c
  1887  0011C8  A4D8               	btfss	status,2,c
  1888  0011CA  EFE9  F008         	goto	u551
  1889  0011CE  EFEB  F008         	goto	u550
  1890  0011D2                     u551:
  1891  0011D2  EFF0  F008         	goto	l1242
  1892  0011D6                     u550:
  1893  0011D6                     l1240:
  1894  0011D6  5003               	movf	fputc@c^0,w,c
  1895  0011D8  ECE5  F009         	call	_putch
  1896  0011DC  EF23  F009         	goto	l848
  1897  0011E0                     l1242:
  1898  0011E0  EE20 F004          	lfsr	2,4
  1899  0011E4  5005               	movf	fputc@fp^0,w,c
  1900  0011E6  26D9               	addwf	fsr2l,f,c
  1901  0011E8  5006               	movf	(fputc@fp+1)^0,w,c
  1902  0011EA  22DA               	addwfc	fsr2h,f,c
  1903  0011EC  50DE               	movf	postinc2,w,c
  1904  0011EE  10DE               	iorwf	postinc2,w,c
  1905  0011F0  B4D8               	btfsc	status,2,c
  1906  0011F2  EFFD  F008         	goto	u561
  1907  0011F6  EFFF  F008         	goto	u560
  1908  0011FA                     u561:
  1909  0011FA  EF1A  F009         	goto	l1246
  1910  0011FE                     u560:
  1911  0011FE  EE20 F004          	lfsr	2,4
  1912  001202  5005               	movf	fputc@fp^0,w,c
  1913  001204  26D9               	addwf	fsr2l,f,c
  1914  001206  5006               	movf	(fputc@fp+1)^0,w,c
  1915  001208  22DA               	addwfc	fsr2h,f,c
  1916  00120A  EE10 F002          	lfsr	1,2
  1917  00120E  5005               	movf	fputc@fp^0,w,c
  1918  001210  26E1               	addwf	fsr1l,f,c
  1919  001212  5006               	movf	(fputc@fp+1)^0,w,c
  1920  001214  22E2               	addwfc	fsr1h,f,c
  1921  001216  50DE               	movf	postinc2,w,c
  1922  001218  5CE6               	subwf	postinc1,w,c
  1923  00121A  50E6               	movf	postinc1,w,c
  1924  00121C  0A80               	xorlw	128
  1925  00121E  6E0B               	movwf	(??_fputc+4)^0,c
  1926  001220  50DE               	movf	postinc2,w,c
  1927  001222  0A80               	xorlw	128
  1928  001224  580B               	subwfb	(??_fputc+4)^0,w,c
  1929  001226  B0D8               	btfsc	status,0,c
  1930  001228  EF18  F009         	goto	u571
  1931  00122C  EF1A  F009         	goto	u570
  1932  001230                     u571:
  1933  001230  EF23  F009         	goto	l848
  1934  001234                     u570:
  1935  001234                     l1246:
  1936  001234  EE20 F002          	lfsr	2,2
  1937  001238  5005               	movf	fputc@fp^0,w,c
  1938  00123A  26D9               	addwf	fsr2l,f,c
  1939  00123C  5006               	movf	(fputc@fp+1)^0,w,c
  1940  00123E  22DA               	addwfc	fsr2h,f,c
  1941  001240  2ADE               	incf	postinc2,f,c
  1942  001242  0E00               	movlw	0
  1943  001244  22DD               	addwfc	postdec2,f,c
  1944  001246                     l848:
  1945  001246  0012               	return		;funcret
  1946  001248                     __end_of_fputc:
  1947                           	callstack 0
  1948                           
  1949 ;; *************** function _putch *****************
  1950 ;; Defined at:
  1951 ;;		line 83 in file "main.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  data            1    wreg     unsigned char 
  1954 ;; Auto vars:     Size  Location     Type
  1955 ;;  data            1    0[COMRAM] unsigned char 
  1956 ;;  Activa          1    1[COMRAM] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1966 ;;      Params:         0       0       0       0       0       0       0       0       0
  1967 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1968 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1969 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1970 ;;Total ram usage:        2 bytes
  1971 ;; Hardware stack levels used: 1
  1972 ;; This function calls:
  1973 ;;		Nothing
  1974 ;; This function is called by:
  1975 ;;		_fputc
  1976 ;; This function uses a non-reentrant model
  1977 ;;
  1978                           
  1979                           	psect	text9
  1980  0013CA                     __ptext9:
  1981                           	callstack 0
  1982  0013CA                     _putch:
  1983                           	callstack 26
  1984                           
  1985                           ;incstack = 0
  1986                           ;putch@data stored from wreg
  1987  0013CA  6E01               	movwf	putch@data^0,c
  1988  0013CC                     
  1989                           ;main.c: 84:     char Activa;;main.c: 85:     Activa = data & 0xF0;
  1990  0013CC  5001               	movf	putch@data^0,w,c
  1991  0013CE  0BF0               	andlw	240
  1992  0013D0  6E02               	movwf	putch@Activa^0,c
  1993                           
  1994                           ;main.c: 86:     LATD = Activa | 0x05;
  1995  0013D2  5002               	movf	putch@Activa^0,w,c
  1996  0013D4  0905               	iorlw	5
  1997  0013D6  6E8C               	movwf	140,c	;volatile
  1998  0013D8                     
  1999                           ;main.c: 87:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2000  0013D8  D000               	nop2		;2 cycle nop
  2001                           
  2002                           ;main.c: 88:     LATD = Activa | 0x01;
  2003  0013DA  5002               	movf	putch@Activa^0,w,c
  2004  0013DC  0901               	iorlw	1
  2005  0013DE  6E8C               	movwf	140,c	;volatile
  2006  0013E0                     
  2007                           ;main.c: 89:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2008  0013E0  0E53               	movlw	83
  2009  0013E2                     u1097:
  2010  0013E2  2EE8               	decfsz	wreg,f,c
  2011  0013E4  D7FE               	bra	u1097
  2012  0013E6  F000               	nop	
  2013  0013E8                     
  2014                           ;main.c: 90:     Activa = data << 4;
  2015  0013E8  3801               	swapf	putch@data^0,w,c
  2016  0013EA  0BF0               	andlw	240
  2017  0013EC  6E02               	movwf	putch@Activa^0,c
  2018  0013EE                     
  2019                           ;main.c: 91:     LATD = Activa | 0x05;
  2020  0013EE  5002               	movf	putch@Activa^0,w,c
  2021  0013F0  0905               	iorlw	5
  2022  0013F2  6E8C               	movwf	140,c	;volatile
  2023  0013F4                     
  2024                           ;main.c: 92:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2025  0013F4  D000               	nop2		;2 cycle nop
  2026  0013F6                     
  2027                           ;main.c: 93:     LATD = Activa | 0x01;
  2028  0013F6  5002               	movf	putch@Activa^0,w,c
  2029  0013F8  0901               	iorlw	1
  2030  0013FA  6E8C               	movwf	140,c	;volatile
  2031  0013FC  0012               	return		;funcret
  2032  0013FE                     __end_of_putch:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _abs *****************
  2036 ;; Defined at:
  2037 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;  a               2   18[COMRAM] int 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  2   18[COMRAM] int 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2051 ;;      Params:         2       0       0       0       0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2053 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2054 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2055 ;;Total ram usage:        4 bytes
  2056 ;; Hardware stack levels used: 1
  2057 ;; This function calls:
  2058 ;;		Nothing
  2059 ;; This function is called by:
  2060 ;;		_dtoa
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text10
  2065  001354                     __ptext10:
  2066                           	callstack 0
  2067  001354                     _abs:
  2068                           	callstack 26
  2069  001354  BE14               	btfsc	(abs@a+1)^0,7,c
  2070  001356  EFB7  F009         	goto	u770
  2071  00135A  5014               	movf	(abs@a+1)^0,w,c
  2072  00135C  E106               	bnz	u771
  2073  00135E  0413               	decf	abs@a^0,w,c
  2074  001360  B0D8               	btfsc	status,0,c
  2075  001362  EFB5  F009         	goto	u771
  2076  001366  EFB7  F009         	goto	u770
  2077  00136A                     u771:
  2078  00136A  EFC5  F009         	goto	l833
  2079  00136E                     u770:
  2080  00136E  C013  F015         	movff	abs@a,??_abs
  2081  001372  C014  F016         	movff	abs@a+1,??_abs+1
  2082  001376  1E15               	comf	??_abs^0,f,c
  2083  001378  1E16               	comf	(??_abs+1)^0,f,c
  2084  00137A  4A15               	infsnz	??_abs^0,f,c
  2085  00137C  2A16               	incf	(??_abs+1)^0,f,c
  2086  00137E  C015  F013         	movff	??_abs,?_abs
  2087  001382  C016  F014         	movff	??_abs+1,?_abs+1
  2088  001386  EFC9  F009         	goto	l836
  2089  00138A                     l833:
  2090  00138A  C013  F013         	movff	abs@a,?_abs
  2091  00138E  C014  F014         	movff	abs@a+1,?_abs+1
  2092  001392                     l836:
  2093  001392  0012               	return		;funcret
  2094  001394                     __end_of_abs:
  2095                           	callstack 0
  2096                           
  2097 ;; *************** function ___aomod *****************
  2098 ;; Defined at:
  2099 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2100 ;; Parameters:    Size  Location     Type
  2101 ;;  dividend        8    0[COMRAM] long long 
  2102 ;;  divisor         8    8[COMRAM] long long 
  2103 ;; Auto vars:     Size  Location     Type
  2104 ;;  sign            1   17[COMRAM] unsigned char 
  2105 ;;  counter         1   16[COMRAM] unsigned char 
  2106 ;; Return value:  Size  Location     Type
  2107 ;;                  8    0[COMRAM] long long 
  2108 ;; Registers used:
  2109 ;;		wreg, status,2, status,0
  2110 ;; Tracked objects:
  2111 ;;		On entry : 0/0
  2112 ;;		On exit  : 0/0
  2113 ;;		Unchanged: 0/0
  2114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2115 ;;      Params:        16       0       0       0       0       0       0       0       0
  2116 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2117 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2118 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2119 ;;Total ram usage:       18 bytes
  2120 ;; Hardware stack levels used: 1
  2121 ;; This function calls:
  2122 ;;		Nothing
  2123 ;; This function is called by:
  2124 ;;		_dtoa
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text11
  2129  000E3E                     __ptext11:
  2130                           	callstack 0
  2131  000E3E                     ___aomod:
  2132                           	callstack 26
  2133  000E3E  0E00               	movlw	0
  2134  000E40  6E12               	movwf	___aomod@sign^0,c
  2135  000E42  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  2136  000E44  EF28  F007         	goto	u670
  2137  000E48  EF26  F007         	goto	u671
  2138  000E4C                     u671:
  2139  000E4C  EF3A  F007         	goto	l1320
  2140  000E50                     u670:
  2141  000E50  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2142  000E52  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2143  000E54  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2144  000E56  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2145  000E58  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2146  000E5A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2147  000E5C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2148  000E5E  6C01               	negf	___aomod@dividend^0,c
  2149  000E60  0E00               	movlw	0
  2150  000E62  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2151  000E64  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2152  000E66  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2153  000E68  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2154  000E6A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2155  000E6C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2156  000E6E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2157  000E70  0E01               	movlw	1
  2158  000E72  6E12               	movwf	___aomod@sign^0,c
  2159  000E74                     l1320:
  2160  000E74  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  2161  000E76  EF41  F007         	goto	u680
  2162  000E7A  EF3F  F007         	goto	u681
  2163  000E7E                     u681:
  2164  000E7E  EF51  F007         	goto	l1324
  2165  000E82                     u680:
  2166  000E82  1E10               	comf	(___aomod@divisor+7)^0,f,c
  2167  000E84  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  2168  000E86  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  2169  000E88  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  2170  000E8A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  2171  000E8C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  2172  000E8E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  2173  000E90  6C09               	negf	___aomod@divisor^0,c
  2174  000E92  0E00               	movlw	0
  2175  000E94  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  2176  000E96  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  2177  000E98  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  2178  000E9A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  2179  000E9C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  2180  000E9E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  2181  000EA0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  2182  000EA2                     l1324:
  2183  000EA2  5009               	movf	___aomod@divisor^0,w,c
  2184  000EA4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  2185  000EA6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  2186  000EA8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  2187  000EAA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  2188  000EAC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  2189  000EAE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  2190  000EB0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  2191  000EB2  B4D8               	btfsc	status,2,c
  2192  000EB4  EF5E  F007         	goto	u691
  2193  000EB8  EF60  F007         	goto	u690
  2194  000EBC                     u691:
  2195  000EBC  EFA8  F007         	goto	l1340
  2196  000EC0                     u690:
  2197  000EC0  0E01               	movlw	1
  2198  000EC2  6E11               	movwf	___aomod@counter^0,c
  2199  000EC4  EF6E  F007         	goto	l1330
  2200  000EC8                     l1328:
  2201  000EC8  90D8               	bcf	status,0,c
  2202  000ECA  3609               	rlcf	___aomod@divisor^0,f,c
  2203  000ECC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  2204  000ECE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  2205  000ED0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  2206  000ED2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  2207  000ED4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  2208  000ED6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  2209  000ED8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  2210  000EDA  2A11               	incf	___aomod@counter^0,f,c
  2211  000EDC                     l1330:
  2212  000EDC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  2213  000EDE  EF73  F007         	goto	u701
  2214  000EE2  EF75  F007         	goto	u700
  2215  000EE6                     u701:
  2216  000EE6  EF64  F007         	goto	l1328
  2217  000EEA                     u700:
  2218  000EEA                     l1332:
  2219  000EEA  5009               	movf	___aomod@divisor^0,w,c
  2220  000EEC  5C01               	subwf	___aomod@dividend^0,w,c
  2221  000EEE  500A               	movf	(___aomod@divisor+1)^0,w,c
  2222  000EF0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  2223  000EF2  500B               	movf	(___aomod@divisor+2)^0,w,c
  2224  000EF4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  2225  000EF6  500C               	movf	(___aomod@divisor+3)^0,w,c
  2226  000EF8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  2227  000EFA  500D               	movf	(___aomod@divisor+4)^0,w,c
  2228  000EFC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2229  000EFE  500E               	movf	(___aomod@divisor+5)^0,w,c
  2230  000F00  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2231  000F02  500F               	movf	(___aomod@divisor+6)^0,w,c
  2232  000F04  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2233  000F06  5010               	movf	(___aomod@divisor+7)^0,w,c
  2234  000F08  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2235  000F0A  A0D8               	btfss	status,0,c
  2236  000F0C  EF8A  F007         	goto	u711
  2237  000F10  EF8C  F007         	goto	u710
  2238  000F14                     u711:
  2239  000F14  EF9C  F007         	goto	l1336
  2240  000F18                     u710:
  2241  000F18  5009               	movf	___aomod@divisor^0,w,c
  2242  000F1A  5E01               	subwf	___aomod@dividend^0,f,c
  2243  000F1C  500A               	movf	(___aomod@divisor+1)^0,w,c
  2244  000F1E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2245  000F20  500B               	movf	(___aomod@divisor+2)^0,w,c
  2246  000F22  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2247  000F24  500C               	movf	(___aomod@divisor+3)^0,w,c
  2248  000F26  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2249  000F28  500D               	movf	(___aomod@divisor+4)^0,w,c
  2250  000F2A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2251  000F2C  500E               	movf	(___aomod@divisor+5)^0,w,c
  2252  000F2E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2253  000F30  500F               	movf	(___aomod@divisor+6)^0,w,c
  2254  000F32  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2255  000F34  5010               	movf	(___aomod@divisor+7)^0,w,c
  2256  000F36  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2257  000F38                     l1336:
  2258  000F38  90D8               	bcf	status,0,c
  2259  000F3A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2260  000F3C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2261  000F3E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2262  000F40  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2263  000F42  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2264  000F44  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2265  000F46  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2266  000F48  3209               	rrcf	___aomod@divisor^0,f,c
  2267  000F4A  2E11               	decfsz	___aomod@counter^0,f,c
  2268  000F4C  EF75  F007         	goto	l1332
  2269  000F50                     l1340:
  2270  000F50  5012               	movf	___aomod@sign^0,w,c
  2271  000F52  B4D8               	btfsc	status,2,c
  2272  000F54  EFAE  F007         	goto	u721
  2273  000F58  EFB0  F007         	goto	u720
  2274  000F5C                     u721:
  2275  000F5C  EFC0  F007         	goto	l1344
  2276  000F60                     u720:
  2277  000F60  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2278  000F62  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2279  000F64  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2280  000F66  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2281  000F68  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2282  000F6A  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2283  000F6C  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2284  000F6E  6C01               	negf	___aomod@dividend^0,c
  2285  000F70  0E00               	movlw	0
  2286  000F72  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2287  000F74  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2288  000F76  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2289  000F78  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2290  000F7A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2291  000F7C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2292  000F7E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2293  000F80                     l1344:
  2294  000F80  C001  F001         	movff	___aomod@dividend,?___aomod
  2295  000F84  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2296  000F88  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2297  000F8C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2298  000F90  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2299  000F94  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2300  000F98  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2301  000F9C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2302  000FA0  0012               	return		;funcret
  2303  000FA2                     __end_of___aomod:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function ___aodiv *****************
  2307 ;; Defined at:
  2308 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  dividend        8    0[COMRAM] long long 
  2311 ;;  divisor         8    8[COMRAM] long long 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;  quotient        8   18[COMRAM] long long 
  2314 ;;  sign            1   17[COMRAM] unsigned char 
  2315 ;;  counter         1   16[COMRAM] unsigned char 
  2316 ;; Return value:  Size  Location     Type
  2317 ;;                  8    0[COMRAM] long long 
  2318 ;; Registers used:
  2319 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2320 ;; Tracked objects:
  2321 ;;		On entry : 0/0
  2322 ;;		On exit  : 0/0
  2323 ;;		Unchanged: 0/0
  2324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2325 ;;      Params:        16       0       0       0       0       0       0       0       0
  2326 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2327 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2328 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2329 ;;Total ram usage:       26 bytes
  2330 ;; Hardware stack levels used: 1
  2331 ;; This function calls:
  2332 ;;		Nothing
  2333 ;; This function is called by:
  2334 ;;		_dtoa
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text12
  2339  000CB6                     __ptext12:
  2340                           	callstack 0
  2341  000CB6                     ___aodiv:
  2342                           	callstack 26
  2343  000CB6  0E00               	movlw	0
  2344  000CB8  6E12               	movwf	___aodiv@sign^0,c
  2345  000CBA  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2346  000CBC  EF64  F006         	goto	u600
  2347  000CC0  EF62  F006         	goto	u601
  2348  000CC4                     u601:
  2349  000CC4  EF76  F006         	goto	l1276
  2350  000CC8                     u600:
  2351  000CC8  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2352  000CCA  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2353  000CCC  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2354  000CCE  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2355  000CD0  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2356  000CD2  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2357  000CD4  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2358  000CD6  6C09               	negf	___aodiv@divisor^0,c
  2359  000CD8  0E00               	movlw	0
  2360  000CDA  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2361  000CDC  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2362  000CDE  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2363  000CE0  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2364  000CE2  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2365  000CE4  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2366  000CE6  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2367  000CE8  0E01               	movlw	1
  2368  000CEA  6E12               	movwf	___aodiv@sign^0,c
  2369  000CEC                     l1276:
  2370  000CEC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2371  000CEE  EF7D  F006         	goto	u610
  2372  000CF2  EF7B  F006         	goto	u611
  2373  000CF6                     u611:
  2374  000CF6  EF8F  F006         	goto	l1282
  2375  000CFA                     u610:
  2376  000CFA  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2377  000CFC  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2378  000CFE  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2379  000D00  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2380  000D02  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2381  000D04  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2382  000D06  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2383  000D08  6C01               	negf	___aodiv@dividend^0,c
  2384  000D0A  0E00               	movlw	0
  2385  000D0C  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2386  000D0E  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2387  000D10  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2388  000D12  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2389  000D14  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2390  000D16  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2391  000D18  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2392  000D1A  0E01               	movlw	1
  2393  000D1C  1A12               	xorwf	___aodiv@sign^0,f,c
  2394  000D1E                     l1282:
  2395  000D1E  EE20  F013         	lfsr	2,___aodiv@quotient
  2396  000D22  0E07               	movlw	7
  2397  000D24                     u621:
  2398  000D24  6ADE               	clrf	postinc2,c
  2399  000D26  06E8               	decf	wreg,f,c
  2400  000D28  E2FD               	bc	u621
  2401  000D2A  5009               	movf	___aodiv@divisor^0,w,c
  2402  000D2C  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2403  000D2E  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2404  000D30  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2405  000D32  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2406  000D34  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2407  000D36  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2408  000D38  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2409  000D3A  B4D8               	btfsc	status,2,c
  2410  000D3C  EFA2  F006         	goto	u631
  2411  000D40  EFA4  F006         	goto	u630
  2412  000D44                     u631:
  2413  000D44  EFF6  F006         	goto	l1304
  2414  000D48                     u630:
  2415  000D48  0E01               	movlw	1
  2416  000D4A  6E11               	movwf	___aodiv@counter^0,c
  2417  000D4C  EFB2  F006         	goto	l1290
  2418  000D50                     l1288:
  2419  000D50  90D8               	bcf	status,0,c
  2420  000D52  3609               	rlcf	___aodiv@divisor^0,f,c
  2421  000D54  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2422  000D56  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2423  000D58  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2424  000D5A  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2425  000D5C  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2426  000D5E  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2427  000D60  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2428  000D62  2A11               	incf	___aodiv@counter^0,f,c
  2429  000D64                     l1290:
  2430  000D64  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2431  000D66  EFB7  F006         	goto	u641
  2432  000D6A  EFB9  F006         	goto	u640
  2433  000D6E                     u641:
  2434  000D6E  EFA8  F006         	goto	l1288
  2435  000D72                     u640:
  2436  000D72                     l1292:
  2437  000D72  90D8               	bcf	status,0,c
  2438  000D74  3613               	rlcf	___aodiv@quotient^0,f,c
  2439  000D76  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2440  000D78  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2441  000D7A  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2442  000D7C  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2443  000D7E  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2444  000D80  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2445  000D82  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2446  000D84  5009               	movf	___aodiv@divisor^0,w,c
  2447  000D86  5C01               	subwf	___aodiv@dividend^0,w,c
  2448  000D88  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2449  000D8A  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2450  000D8C  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2451  000D8E  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2452  000D90  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2453  000D92  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2454  000D94  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2455  000D96  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2456  000D98  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2457  000D9A  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2458  000D9C  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2459  000D9E  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2460  000DA0  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2461  000DA2  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2462  000DA4  A0D8               	btfss	status,0,c
  2463  000DA6  EFD7  F006         	goto	u651
  2464  000DAA  EFD9  F006         	goto	u650
  2465  000DAE                     u651:
  2466  000DAE  EFEA  F006         	goto	l1300
  2467  000DB2                     u650:
  2468  000DB2  5009               	movf	___aodiv@divisor^0,w,c
  2469  000DB4  5E01               	subwf	___aodiv@dividend^0,f,c
  2470  000DB6  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2471  000DB8  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2472  000DBA  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2473  000DBC  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2474  000DBE  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2475  000DC0  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2476  000DC2  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2477  000DC4  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2478  000DC6  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2479  000DC8  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2480  000DCA  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2481  000DCC  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2482  000DCE  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2483  000DD0  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2484  000DD2  8013               	bsf	___aodiv@quotient^0,0,c
  2485  000DD4                     l1300:
  2486  000DD4  90D8               	bcf	status,0,c
  2487  000DD6  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2488  000DD8  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2489  000DDA  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2490  000DDC  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2491  000DDE  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2492  000DE0  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2493  000DE2  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2494  000DE4  3209               	rrcf	___aodiv@divisor^0,f,c
  2495  000DE6  2E11               	decfsz	___aodiv@counter^0,f,c
  2496  000DE8  EFB9  F006         	goto	l1292
  2497  000DEC                     l1304:
  2498  000DEC  5012               	movf	___aodiv@sign^0,w,c
  2499  000DEE  B4D8               	btfsc	status,2,c
  2500  000DF0  EFFC  F006         	goto	u661
  2501  000DF4  EFFE  F006         	goto	u660
  2502  000DF8                     u661:
  2503  000DF8  EF0E  F007         	goto	l1308
  2504  000DFC                     u660:
  2505  000DFC  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2506  000DFE  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2507  000E00  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2508  000E02  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2509  000E04  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2510  000E06  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2511  000E08  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2512  000E0A  6C13               	negf	___aodiv@quotient^0,c
  2513  000E0C  0E00               	movlw	0
  2514  000E0E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2515  000E10  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2516  000E12  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2517  000E14  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2518  000E16  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2519  000E18  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2520  000E1A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2521  000E1C                     l1308:
  2522  000E1C  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2523  000E20  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2524  000E24  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2525  000E28  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2526  000E2C  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2527  000E30  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2528  000E34  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2529  000E38  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2530  000E3C  0012               	return		;funcret
  2531  000E3E                     __end_of___aodiv:
  2532                           	callstack 0
  2533                           
  2534 ;; *************** function _InicializaLCD *****************
  2535 ;; Defined at:
  2536 ;;		line 109 in file "main.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;		None
  2539 ;; Auto vars:     Size  Location     Type
  2540 ;;		None
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, status,2, status,0, cstack
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2550 ;;      Params:         0       0       0       0       0       0       0       0       0
  2551 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2552 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2553 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2554 ;;Total ram usage:        1 bytes
  2555 ;; Hardware stack levels used: 1
  2556 ;; Hardware stack levels required when called: 1
  2557 ;; This function calls:
  2558 ;;		_putcm
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           	psect	text13
  2565  001248                     __ptext13:
  2566                           	callstack 0
  2567  001248                     _InicializaLCD:
  2568                           	callstack 29
  2569  001248                     
  2570                           ;main.c: 110:     _delay((unsigned long)((30)*(1000000/4000.0)));
  2571  001248  0E0A               	movlw	10
  2572  00124A  6E03               	movwf	??_InicializaLCD^0,c
  2573  00124C  0EBC               	movlw	188
  2574  00124E                     u1107:
  2575  00124E  2EE8               	decfsz	wreg,f,c
  2576  001250  D7FE               	bra	u1107
  2577  001252  2E03               	decfsz	??_InicializaLCD^0,f,c
  2578  001254  D7FC               	bra	u1107
  2579  001256  D000               	nop2	
  2580  001258                     
  2581                           ;main.c: 111:     putcm(0x02);
  2582  001258  0E02               	movlw	2
  2583  00125A  ECFF  F009         	call	_putcm
  2584  00125E                     
  2585                           ;main.c: 112:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2586  00125E  0E53               	movlw	83
  2587  001260                     u1117:
  2588  001260  2EE8               	decfsz	wreg,f,c
  2589  001262  D7FE               	bra	u1117
  2590  001264  F000               	nop	
  2591                           
  2592                           ;main.c: 113:     putcm(0x28);
  2593  001266  0E28               	movlw	40
  2594  001268  ECFF  F009         	call	_putcm
  2595  00126C                     
  2596                           ;main.c: 114:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2597  00126C  0E53               	movlw	83
  2598  00126E                     u1127:
  2599  00126E  2EE8               	decfsz	wreg,f,c
  2600  001270  D7FE               	bra	u1127
  2601  001272  F000               	nop	
  2602  001274                     
  2603                           ;main.c: 115:     putcm(0x2C);
  2604  001274  0E2C               	movlw	44
  2605  001276  ECFF  F009         	call	_putcm
  2606                           
  2607                           ;main.c: 116:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2608  00127A  0E53               	movlw	83
  2609  00127C                     u1137:
  2610  00127C  2EE8               	decfsz	wreg,f,c
  2611  00127E  D7FE               	bra	u1137
  2612  001280  F000               	nop	
  2613  001282                     
  2614                           ;main.c: 117:     putcm(0x0C);
  2615  001282  0E0C               	movlw	12
  2616  001284  ECFF  F009         	call	_putcm
  2617  001288                     
  2618                           ;main.c: 118:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2619  001288  0E53               	movlw	83
  2620  00128A                     u1147:
  2621  00128A  2EE8               	decfsz	wreg,f,c
  2622  00128C  D7FE               	bra	u1147
  2623  00128E  F000               	nop	
  2624                           
  2625                           ;main.c: 119:     putcm(0x06);
  2626  001290  0E06               	movlw	6
  2627  001292  ECFF  F009         	call	_putcm
  2628  001296                     
  2629                           ;main.c: 120:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2630  001296  0E53               	movlw	83
  2631  001298                     u1157:
  2632  001298  2EE8               	decfsz	wreg,f,c
  2633  00129A  D7FE               	bra	u1157
  2634  00129C  F000               	nop	
  2635  00129E                     
  2636                           ;main.c: 121:     putcm(0x80);
  2637  00129E  0E80               	movlw	128
  2638  0012A0  ECFF  F009         	call	_putcm
  2639                           
  2640                           ;main.c: 122:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2641  0012A4  0E53               	movlw	83
  2642  0012A6                     u1167:
  2643  0012A6  2EE8               	decfsz	wreg,f,c
  2644  0012A8  D7FE               	bra	u1167
  2645  0012AA  F000               	nop	
  2646  0012AC  0012               	return		;funcret
  2647  0012AE                     __end_of_InicializaLCD:
  2648                           	callstack 0
  2649                           
  2650 ;; *************** function _putcm *****************
  2651 ;; Defined at:
  2652 ;;		line 96 in file "main.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  data            1    wreg     unsigned char 
  2655 ;; Auto vars:     Size  Location     Type
  2656 ;;  data            1    0[COMRAM] unsigned char 
  2657 ;;  Activa          1    1[COMRAM] unsigned char 
  2658 ;; Return value:  Size  Location     Type
  2659 ;;                  1    wreg      void 
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2667 ;;      Params:         0       0       0       0       0       0       0       0       0
  2668 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2669 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2670 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2671 ;;Total ram usage:        2 bytes
  2672 ;; Hardware stack levels used: 1
  2673 ;; This function calls:
  2674 ;;		Nothing
  2675 ;; This function is called by:
  2676 ;;		_main
  2677 ;;		_InicializaLCD
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text14
  2682  0013FE                     __ptext14:
  2683                           	callstack 0
  2684  0013FE                     _putcm:
  2685                           	callstack 30
  2686                           
  2687                           ;incstack = 0
  2688                           ;putcm@data stored from wreg
  2689  0013FE  6E01               	movwf	putcm@data^0,c
  2690  001400                     
  2691                           ;main.c: 97:     char Activa;;main.c: 98:     Activa = data & 0xF0;
  2692  001400  5001               	movf	putcm@data^0,w,c
  2693  001402  0BF0               	andlw	240
  2694  001404  6E02               	movwf	putcm@Activa^0,c
  2695                           
  2696                           ;main.c: 99:     LATD = Activa | 0x04;
  2697  001406  5002               	movf	putcm@Activa^0,w,c
  2698  001408  0904               	iorlw	4
  2699  00140A  6E8C               	movwf	140,c	;volatile
  2700  00140C                     
  2701                           ;main.c: 100:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2702  00140C  D000               	nop2		;2 cycle nop
  2703  00140E                     
  2704                           ;main.c: 101:     LATD = Activa;
  2705  00140E  C002  FF8C         	movff	putcm@Activa,3980	;volatile
  2706  001412                     
  2707                           ;main.c: 102:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2708  001412  0E53               	movlw	83
  2709  001414                     u1177:
  2710  001414  2EE8               	decfsz	wreg,f,c
  2711  001416  D7FE               	bra	u1177
  2712  001418  F000               	nop	
  2713  00141A                     
  2714                           ;main.c: 103:     Activa = data << 4;
  2715  00141A  3801               	swapf	putcm@data^0,w,c
  2716  00141C  0BF0               	andlw	240
  2717  00141E  6E02               	movwf	putcm@Activa^0,c
  2718  001420                     
  2719                           ;main.c: 104:     LATD = Activa | 0x04;
  2720  001420  5002               	movf	putcm@Activa^0,w,c
  2721  001422  0904               	iorlw	4
  2722  001424  6E8C               	movwf	140,c	;volatile
  2723  001426                     
  2724                           ;main.c: 105:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2725  001426  D000               	nop2		;2 cycle nop
  2726  001428                     
  2727                           ;main.c: 106:     LATD = Activa;
  2728  001428  C002  FF8C         	movff	putcm@Activa,3980	;volatile
  2729  00142C  0012               	return		;funcret
  2730  00142E                     __end_of_putcm:
  2731                           	callstack 0
  2732                           
  2733 ;; *************** function _Conversion *****************
  2734 ;; Defined at:
  2735 ;;		line 77 in file "main.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  2    0[COMRAM] int 
  2742 ;; Registers used:
  2743 ;;		wreg, status,2, status,0
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2749 ;;      Params:         2       0       0       0       0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2751 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2752 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2753 ;;Total ram usage:        4 bytes
  2754 ;; Hardware stack levels used: 1
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text15
  2763  00147C                     __ptext15:
  2764                           	callstack 0
  2765  00147C                     _Conversion:
  2766                           	callstack 30
  2767  00147C                     
  2768                           ;main.c: 78:     ADCON0bits.GO = 1;
  2769  00147C  82C2               	bsf	194,1,c	;volatile
  2770  00147E                     l64:
  2771  00147E  B2C2               	btfsc	194,1,c	;volatile
  2772  001480  EF44  F00A         	goto	u981
  2773  001484  EF46  F00A         	goto	u980
  2774  001488                     u981:
  2775  001488  EF3F  F00A         	goto	l64
  2776  00148C                     u980:
  2777  00148C                     
  2778                           ;main.c: 80:     return ADRESL + ADRESH * 256;
  2779  00148C  50C4               	movf	196,w,c	;volatile
  2780  00148E  6E04               	movwf	(??_Conversion+1)^0,c
  2781  001490  6A03               	clrf	??_Conversion^0,c
  2782  001492  50C3               	movf	195,w,c	;volatile
  2783  001494  2403               	addwf	??_Conversion^0,w,c
  2784  001496  6E01               	movwf	?_Conversion^0,c
  2785  001498  0E00               	movlw	0
  2786  00149A  2004               	addwfc	(??_Conversion+1)^0,w,c
  2787  00149C  6E02               	movwf	(?_Conversion+1)^0,c
  2788  00149E  0012               	return		;funcret
  2789  0014A0                     __end_of_Conversion:
  2790                           	callstack 0
  2791                           
  2792 ;; *************** function _Configuracion *****************
  2793 ;; Defined at:
  2794 ;;		line 65 in file "main.c"
  2795 ;; Parameters:    Size  Location     Type
  2796 ;;		None
  2797 ;; Auto vars:     Size  Location     Type
  2798 ;;		None
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, status,2
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0
  2809 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2811 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2812 ;;Total ram usage:        0 bytes
  2813 ;; Hardware stack levels used: 1
  2814 ;; This function calls:
  2815 ;;		Nothing
  2816 ;; This function is called by:
  2817 ;;		_main
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text16
  2822  00142E                     __ptext16:
  2823                           	callstack 0
  2824  00142E                     _Configuracion:
  2825                           	callstack 30
  2826  00142E                     
  2827                           ;main.c: 66:     TRISA = 1;
  2828  00142E  0E01               	movlw	1
  2829  001430  6E92               	movwf	146,c	;volatile
  2830                           
  2831                           ;main.c: 67:     ANSELA = 0;
  2832  001432  0E00               	movlw	0
  2833  001434  010F               	movlb	15	; () banked
  2834  001436  6F5B               	movwf	91,b	;volatile
  2835                           
  2836                           ;main.c: 68:     TRISD = 0;
  2837  001438  0E00               	movlw	0
  2838  00143A  6E95               	movwf	149,c	;volatile
  2839                           
  2840                           ;main.c: 69:     ANSELD = 0;
  2841  00143C  0E00               	movlw	0
  2842  00143E  6F5E               	movwf	94,b	;volatile
  2843                           
  2844                           ;main.c: 70:     TRISE = 0;
  2845  001440  0E00               	movlw	0
  2846  001442  6E96               	movwf	150,c	;volatile
  2847                           
  2848                           ;main.c: 71:     ANSELE = 0;
  2849  001444  0E00               	movlw	0
  2850  001446  6F5F               	movwf	95,b	;volatile
  2851                           
  2852                           ;main.c: 72:     ADCON0 = 0x39;
  2853  001448  0E39               	movlw	57
  2854  00144A  6EC2               	movwf	194,c	;volatile
  2855                           
  2856                           ;main.c: 73:     ADCON1 = 0x00;
  2857  00144C  0E00               	movlw	0
  2858  00144E  6EC1               	movwf	193,c	;volatile
  2859                           
  2860                           ;main.c: 74:     ADCON2 = 0x90;
  2861  001450  0E90               	movlw	144
  2862  001452  6EC0               	movwf	192,c	;volatile
  2863  001454                     
  2864                           ; BSR set to: 15
  2865  001454  0012               	return		;funcret
  2866  001456                     __end_of_Configuracion:
  2867                           	callstack 0
  2868                           
  2869                           	psect	rparam
  2870  0000                     
  2871                           	psect	idloc
  2872                           
  2873                           ;Config register IDLOC0 @ 0x200000
  2874                           ;	unspecified, using default values
  2875  200000                     	org	2097152
  2876  200000  FF                 	db	255
  2877                           
  2878                           ;Config register IDLOC1 @ 0x200001
  2879                           ;	unspecified, using default values
  2880  200001                     	org	2097153
  2881  200001  FF                 	db	255
  2882                           
  2883                           ;Config register IDLOC2 @ 0x200002
  2884                           ;	unspecified, using default values
  2885  200002                     	org	2097154
  2886  200002  FF                 	db	255
  2887                           
  2888                           ;Config register IDLOC3 @ 0x200003
  2889                           ;	unspecified, using default values
  2890  200003                     	org	2097155
  2891  200003  FF                 	db	255
  2892                           
  2893                           ;Config register IDLOC4 @ 0x200004
  2894                           ;	unspecified, using default values
  2895  200004                     	org	2097156
  2896  200004  FF                 	db	255
  2897                           
  2898                           ;Config register IDLOC5 @ 0x200005
  2899                           ;	unspecified, using default values
  2900  200005                     	org	2097157
  2901  200005  FF                 	db	255
  2902                           
  2903                           ;Config register IDLOC6 @ 0x200006
  2904                           ;	unspecified, using default values
  2905  200006                     	org	2097158
  2906  200006  FF                 	db	255
  2907                           
  2908                           ;Config register IDLOC7 @ 0x200007
  2909                           ;	unspecified, using default values
  2910  200007                     	org	2097159
  2911  200007  FF                 	db	255
  2912                           
  2913                           	psect	config
  2914                           
  2915                           ;Config register CONFIG1L @ 0x300000
  2916                           ;	unspecified, using default values
  2917                           ;	PLL Selection
  2918                           ;	PLLSEL = 0x0, unprogrammed default
  2919                           ;	PLL Enable Configuration bit
  2920                           ;	CFGPLLEN = 0x0, unprogrammed default
  2921                           ;	CPU System Clock Postscaler
  2922                           ;	CPUDIV = 0x0, unprogrammed default
  2923                           ;	Low Speed USB mode with 48 MHz system clock
  2924                           ;	LS48MHZ = 0x0, unprogrammed default
  2925  300000                     	org	3145728
  2926  300000  00                 	db	0
  2927                           
  2928                           ;Config register CONFIG1H @ 0x300001
  2929                           ;	Oscillator Selection
  2930                           ;	FOSC = INTOSCIO, Internal oscillator
  2931                           ;	Primary Oscillator Shutdown
  2932                           ;	PCLKEN = 0x1, unprogrammed default
  2933                           ;	Fail-Safe Clock Monitor
  2934                           ;	FCMEN = 0x0, unprogrammed default
  2935                           ;	Internal/External Oscillator Switchover
  2936                           ;	IESO = 0x0, unprogrammed default
  2937  300001                     	org	3145729
  2938  300001  28                 	db	40
  2939                           
  2940                           ;Config register CONFIG2L @ 0x300002
  2941                           ;	unspecified, using default values
  2942                           ;	Power-up Timer Enable
  2943                           ;	nPWRTEN = 0x1, unprogrammed default
  2944                           ;	Brown-out Reset Enable
  2945                           ;	BOREN = 0x3, unprogrammed default
  2946                           ;	Brown-out Reset Voltage
  2947                           ;	BORV = 0x3, unprogrammed default
  2948                           ;	Low-Power Brown-out Reset
  2949                           ;	nLPBOR = 0x1, unprogrammed default
  2950  300002                     	org	3145730
  2951  300002  5F                 	db	95
  2952                           
  2953                           ;Config register CONFIG2H @ 0x300003
  2954                           ;	Watchdog Timer Enable bits
  2955                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2956                           ;	Watchdog Timer Postscaler
  2957                           ;	WDTPS = 0xF, unprogrammed default
  2958  300003                     	org	3145731
  2959  300003  3C                 	db	60
  2960                           
  2961                           ; Padding undefined space
  2962  300004                     	org	3145732
  2963  300004  FF                 	db	255
  2964                           
  2965                           ;Config register CONFIG3H @ 0x300005
  2966                           ;	CCP2 MUX bit
  2967                           ;	CCP2MX = 0x1, unprogrammed default
  2968                           ;	PORTB A/D Enable bit
  2969                           ;	PBADEN = 0x1, unprogrammed default
  2970                           ;	Timer3 Clock Input MUX bit
  2971                           ;	T3CMX = 0x1, unprogrammed default
  2972                           ;	SDO Output MUX bit
  2973                           ;	SDOMX = 0x1, unprogrammed default
  2974                           ;	Master Clear Reset Pin Enable
  2975                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2976  300005                     	org	3145733
  2977  300005  D3                 	db	211
  2978                           
  2979                           ;Config register CONFIG4L @ 0x300006
  2980                           ;	Stack Full/Underflow Reset
  2981                           ;	STVREN = 0x1, unprogrammed default
  2982                           ;	Single-Supply ICSP Enable bit
  2983                           ;	LVP = OFF, Single-Supply ICSP disabled
  2984                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2985                           ;	ICPRT = OFF, ICPORT disabled
  2986                           ;	Extended Instruction Set Enable bit
  2987                           ;	XINST = 0x0, unprogrammed default
  2988                           ;	Background Debugger Enable bit
  2989                           ;	DEBUG = 0x1, unprogrammed default
  2990  300006                     	org	3145734
  2991  300006  81                 	db	129
  2992                           
  2993                           ; Padding undefined space
  2994  300007                     	org	3145735
  2995  300007  FF                 	db	255
  2996                           
  2997                           ;Config register CONFIG5L @ 0x300008
  2998                           ;	unspecified, using default values
  2999                           ;	Block 0 Code Protect
  3000                           ;	CP0 = 0x1, unprogrammed default
  3001                           ;	Block 1 Code Protect
  3002                           ;	CP1 = 0x1, unprogrammed default
  3003                           ;	Block 2 Code Protect
  3004                           ;	CP2 = 0x1, unprogrammed default
  3005                           ;	Block 3 Code Protect
  3006                           ;	CP3 = 0x1, unprogrammed default
  3007  300008                     	org	3145736
  3008  300008  0F                 	db	15
  3009                           
  3010                           ;Config register CONFIG5H @ 0x300009
  3011                           ;	unspecified, using default values
  3012                           ;	Boot Block Code Protect
  3013                           ;	CPB = 0x1, unprogrammed default
  3014                           ;	Data EEPROM Code Protect
  3015                           ;	CPD = 0x1, unprogrammed default
  3016  300009                     	org	3145737
  3017  300009  C0                 	db	192
  3018                           
  3019                           ;Config register CONFIG6L @ 0x30000A
  3020                           ;	unspecified, using default values
  3021                           ;	Block 0 Write Protect
  3022                           ;	WRT0 = 0x1, unprogrammed default
  3023                           ;	Block 1 Write Protect
  3024                           ;	WRT1 = 0x1, unprogrammed default
  3025                           ;	Block 2 Write Protect
  3026                           ;	WRT2 = 0x1, unprogrammed default
  3027                           ;	Block 3 Write Protect
  3028                           ;	WRT3 = 0x1, unprogrammed default
  3029  30000A                     	org	3145738
  3030  30000A  0F                 	db	15
  3031                           
  3032                           ;Config register CONFIG6H @ 0x30000B
  3033                           ;	unspecified, using default values
  3034                           ;	Configuration Registers Write Protect
  3035                           ;	WRTC = 0x1, unprogrammed default
  3036                           ;	Boot Block Write Protect
  3037                           ;	WRTB = 0x1, unprogrammed default
  3038                           ;	Data EEPROM Write Protect
  3039                           ;	WRTD = 0x1, unprogrammed default
  3040  30000B                     	org	3145739
  3041  30000B  E0                 	db	224
  3042                           
  3043                           ;Config register CONFIG7L @ 0x30000C
  3044                           ;	unspecified, using default values
  3045                           ;	Block 0 Table Read Protect
  3046                           ;	EBTR0 = 0x1, unprogrammed default
  3047                           ;	Block 1 Table Read Protect
  3048                           ;	EBTR1 = 0x1, unprogrammed default
  3049                           ;	Block 2 Table Read Protect
  3050                           ;	EBTR2 = 0x1, unprogrammed default
  3051                           ;	Block 3 Table Read Protect
  3052                           ;	EBTR3 = 0x1, unprogrammed default
  3053  30000C                     	org	3145740
  3054  30000C  0F                 	db	15
  3055                           
  3056                           ;Config register CONFIG7H @ 0x30000D
  3057                           ;	unspecified, using default values
  3058                           ;	Boot Block Table Read Protect
  3059                           ;	EBTRB = 0x1, unprogrammed default
  3060  30000D                     	org	3145741
  3061  30000D  40                 	db	64
  3062                           tosu	equ	0xFFF
  3063                           tosh	equ	0xFFE
  3064                           tosl	equ	0xFFD
  3065                           stkptr	equ	0xFFC
  3066                           pclatu	equ	0xFFB
  3067                           pclath	equ	0xFFA
  3068                           pcl	equ	0xFF9
  3069                           tblptru	equ	0xFF8
  3070                           tblptrh	equ	0xFF7
  3071                           tblptrl	equ	0xFF6
  3072                           tablat	equ	0xFF5
  3073                           prodh	equ	0xFF4
  3074                           prodl	equ	0xFF3
  3075                           indf0	equ	0xFEF
  3076                           postinc0	equ	0xFEE
  3077                           postdec0	equ	0xFED
  3078                           preinc0	equ	0xFEC
  3079                           plusw0	equ	0xFEB
  3080                           fsr0h	equ	0xFEA
  3081                           fsr0l	equ	0xFE9
  3082                           wreg	equ	0xFE8
  3083                           indf1	equ	0xFE7
  3084                           postinc1	equ	0xFE6
  3085                           postdec1	equ	0xFE5
  3086                           preinc1	equ	0xFE4
  3087                           plusw1	equ	0xFE3
  3088                           fsr1h	equ	0xFE2
  3089                           fsr1l	equ	0xFE1
  3090                           bsr	equ	0xFE0
  3091                           indf2	equ	0xFDF
  3092                           postinc2	equ	0xFDE
  3093                           postdec2	equ	0xFDD
  3094                           preinc2	equ	0xFDC
  3095                           plusw2	equ	0xFDB
  3096                           fsr2h	equ	0xFDA
  3097                           fsr2l	equ	0xFD9
  3098                           status	equ	0xFD8

Data Sizes:
    Strings     29
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      8      48
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S664_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[14]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _InicializaLCD->_putcm

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    7017
                                              0 BANK0      8     8      0
                      _Configuracion
                         _Conversion
                      _InicializaLCD
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6515
                                             89 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6309
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5955
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4494
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2845
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1303
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     902
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                2     2      0     134
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        1     1      0     134
                                              2 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _putcm                                                2     2      0     134
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Conversion                                           4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
   _Conversion
   _InicializaLCD
     _putcm
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _putcm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      8      30       5       30.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8F       6        0.0%
DATA                 0      0      8F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 04 17:06:02 2021

                     l50 1046                       l61 1454                       l53 109E  
                     l70 13FC                       l54 10B6                       l64 147E  
                     l73 142C                       l67 149E                       l76 12AC  
          _InicializaLCD 1248                      l206 0FA0                      l193 0E3C  
                    l822 0CB4                      l815 0B00                      l833 138A  
                    l836 1392                      l828 1306                      l829 130E  
                    l757 147A                      l862 13C8                      l848 1246  
                    l856 1352                      l784 1132                      l787 1174  
                    l795 08C0                      l789 11B0                      l797 08C8  
                    u600 0CC8                      u601 0CC4                      u610 0CFA  
                    u611 0CF6                      u700 0EEA                      u540 11C4  
                    u621 0D24                      u701 0EE6                      u541 11C0  
                    u630 0D48                      u710 0F18                      u550 11D6  
                    u631 0D44                      u711 0F14                      u551 11D2  
                    u640 0D72                      u720 0F60                      u560 11FE  
                    u800 0868                      u641 0D6E                      u721 0F5C  
                    u561 11FA                      u801 0864                      u650 0DB2  
                    u570 1234                      u730 10FC                      u810 0898  
                    u651 0DAE                      u571 1230                      u731 10F8  
                    u811 0894                      u660 0DFC                      u580 1352  
                    u740 111E                      u900 0A8C                      u820 08B4  
                    u661 0DF8                      u581 134E                      u741 111A  
                    u901 0A88                      u821 08B0                      u670 0E50  
                    u590 13BC                      u750 1174                      u910 0A9C  
                    u830 08E2                      u671 0E4C                      u591 13B8  
                    u751 1170                      u911 0A98                      u831 08DE  
                    u680 0E82                      u760 1184                      u920 0AB4  
                    u840 08F0                      u681 0E7E                      u761 1180  
                    u921 0AB0                      u841 08EC                      u690 0EC0  
                    u770 136E                      u850 0A18                      u930 0B26  
                    u691 0EBC                      u771 136A                      u851 0A14  
                    u931 0B22                      u860 0A36                      u780 0850  
                    u940 0B6E                      u861 0A32                      u781 084A  
                    u941 0B6A                      u870 0A50                      u790 0852  
                    u950 0B92                      u871 0A4C                      u951 0B8E  
                    u880 0A6A                      u960 0C36                      u881 0A66  
                    u961 0C32                      u890 0A7A                      u970 1306  
                    u891 0A76                      u971 1302                      u980 148C  
                    u981 1488                      u990 1010                      u991 100C  
                    _abs 1354                      _pad 10EC                      wreg 000FE8  
                   ?_abs 0013                     l1300 0DD4                     l1302 0DE6  
                   l1230 13EE                     l1222 13CC                     l1304 0DEC  
                   l1320 0E74                     l1312 0E3E                     l1232 13F4  
                   l1224 13D8                     l1240 11D6                     l1400 090C  
                   l1306 0DFC                     l1330 0EDC                     l1322 0E82  
                   l1314 0E42                     l1234 13F6                     l1226 13E0  
                   l1242 11E0                     l1250 1310                     l1410 0A18  
                   l1402 098E                     l1308 0E1C                     l1332 0EEA  
                   l1340 0F50                     l1324 0EA2                     l1316 0E50  
                   l1228 13E8                     l1244 11FE                     l1236 11B2  
                   l1252 131C                     l1260 13A0                     l1420 0A8C  
                   l1412 0A36                     l1404 0994                     l1500 12EA  
                   l1502 142E                     l1510 126C                     l1270 0CBA  
                   l1342 0F60                     l1334 0F18                     l1326 0EC0  
                   l1318 0E70                     l1246 1234                     l1238 11C4  
                   l1254 132E                     l1262 13A4                     l1350 10FC  
                   l1430 0AC8                     l1422 0A9C                     l1414 0A50  
                   l1406 099A                     l1520 129E                     l1512 1274  
                   l1504 1248                     l1280 0D1A                     l1272 0CC8  
                   l1344 0F80                     l1336 0F38                     l1328 0EC8  
                   l1256 1332                     l1264 13BC                     l1360 1152  
                   l1352 1110                     l1424 0AA2                     l1432 0AD8  
                   l1416 0A6A                     l1408 09FE                     l1440 0B34  
                   l1530 148C                     l1514 1282                     l1506 1258  
                   l1290 0D64                     l1282 0D1E                     l1274 0CE8  
                   l1338 0F4A                     l1370 1354                     l1258 1394  
                   l1362 1156                     l1354 111E                     l1426 0AB4  
                   l1418 0A7A                     l1450 0BDA                     l1442 0B46  
                   l1522 1456                     l1516 1288                     l1508 125E  
                   l1292 0D72                     l1284 0D2A                     l1276 0CEC  
                   l1268 0CB6                     l1372 136E                     l1364 1184  
                   l1356 112A                     l1348 10EC                     l1428 0AC0  
                   l1380 0888                     l1460 0C58                     l1444 0B4A  
                   l1436 0B02                     l1524 145E                     l1540 0FC0  
                   l1518 1296                     l1294 0D84                     l1286 0D48  
                   l1278 0CFA                     l1366 1198                     l1358 113E  
                   l1390 08E2                     l1382 0898                     l1374 0820  
                   l1454 0C12                     l1446 0B6E                     l1438 0B26  
                   l1470 0C7E                     l1550 1020                     l1542 0FCC  
                   l1534 0FA2                     l1528 147C                     l1480 140C  
                   l1296 0DB2                     l1288 0D50                     l1392 08F0  
                   l1384 089A                     l1376 0840                     l1472 0CA2  
                   l1456 0C36                     l1464 0C64                     l1448 0B92  
                   l1552 1024                     l1560 104E                     l1544 0FD2  
                   l1536 0FB8                     l1490 1426                     l1482 140E  
                   l1298 0DD2                     l1394 08F6                     l1386 08B4  
                   l1378 0868                     l1466 0C72                     l1458 0C44  
                   l1570 10AE                     l1562 106A                     l1554 1036  
                   l1546 0FE6                     l1538 0FBC                     l1492 1428  
                   l1484 1412                     l1396 08FE                     l1388 08D0  
                   l1572 10BA                     l1564 1078                     l1556 103A  
                   l1548 1010                     l1486 141A                     l1478 1400  
                   l1398 0906                     l1494 12AE                     l1574 10BE  
                   l1566 108A                     l1558 1042                     l1488 1420  
                   l1496 12B6                     l1568 109A                     l1576 10CE  
                   l1498 12C4                     l1578 10D2                     ?_pad 0013  
                   STR_1 0801                     STR_2 0810                     u1000 1020  
                   u1001 101C                     u1010 1036                     u1011 1032  
                   u1020 106A                     u1021 1066                     u1030 1078  
                   u1031 1074                     u1040 108A                     u1041 1086  
                   u1050 109A                     u1107 124E                     u1051 1096  
                   u1060 10AE                     u1117 1260                     u1061 10AA  
                   u1127 126E                     u1137 127C                     u1147 128A  
                   u1157 1298                     u1077 10C6                     u1167 12A6  
                   u1087 10DA                     _LATD 000F8C                     u1177 1414  
                   u1097 13E2                     _LATE 000F8D                     abs@a 0013  
                   _dbuf 0068                     _main 0FA2                     _dtoa 0820  
                   _prec 0064                     _nout 0060                     pad@i 001A  
                   pad@p 0017                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001C  
                   fsr2l 000FD9                     start 0000             ___param_bank 000000  
                  ??_abs 0015                    ??_pad 0019           ?_InicializaLCD 0001  
        __end_of___aodiv 0E3E             main@contador 0089                    ?_main 0001  
                  ?_dtoa 001E          __end_of___aomod 0FA2             vfpfcnvrt@fmt 0044  
                  _TRISA 000F92                    _TRISD 000F95                    _TRISE 000F96  
                  _flags 0066                    _fputc 11B2                    _fputs 1310  
                  pad@fp 0013                    _width 0062                    _putch 13CA  
                  _putcm 13FE                    dtoa@d 0020                    dtoa@i 0040  
                  dtoa@n 0038                    dtoa@p 0032                    dtoa@s 0036  
                  dtoa@w 0034                    tablat 000FF5               _Conversion 147C  
                  status 000FD8          __initialization 14A0             __end_of_main 10EC  
           __end_of_dtoa 0B02            main@enProceso 008B                   ??_main 0088  
                 ??_dtoa 0028            __activetblptr 000001            main@direccion 008E  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 ?_fputc 0003                   ?_fputs 000C                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _ANSELA 000F5B                   ?_putch 0001  
                 _ANSELD 000F5E                   _ANSELE 000F5F                   ?_putcm 0001  
           vfprintf@cfmt 0058                ??___aodiv 0011                ??___aomod 0011  
        ??_InicializaLCD 0003                   clear_0 14A6                   isa$std 000001  
                 _printf 1456                   pad@buf 0015                   dtoa@fp 001E  
                 _strlen 1394                   fputc@c 0003                   fputs@c 0010  
                 fputs@i 0011                   fputs@s 000C             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
       __end_of_vfprintf 1310              ?_Conversion 0001               __accesstop 0060  
__end_of__initialization 14AC            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_fputc 1248            __end_of_fputs 1354            __end_of_putch 13FE  
          __end_of_putcm 142E                  ??_fputc 0007                  ??_fputs 0010  
                ??_putch 0001                  ??_putcm 0001               __pbssBANK0 0060  
  __end_of_Configuracion 1456                  ?_printf 005A      __size_of_Conversion 0024  
                ?_strlen 0001       __size_of_vfpfcnvrt 01B4                  __Hparam 0000  
                __Lparam 0000                  ___aodiv 0CB6                  ___aomod 0E3E  
              ?_vfprintf 0052             __psmallconst 0800                  __pcinit 14A0  
                __ramtop 0800                  __ptext0 0FA2                  __ptext1 1456  
                __ptext2 12AE                  __ptext3 0B02                  __ptext4 0820  
                __ptext5 10EC                  __ptext6 1394                  __ptext7 1310  
                __ptext8 11B2                  __ptext9 13CA          __size_of_printf 0026  
        __size_of_strlen 0036             __size_of_abs 0040             __size_of_pad 00C6  
   end_of_initialization 14AC                  fputc@fp 0005                  fputs@fp 000E  
      __end_of_vfpfcnvrt 0CB6                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0058  
                strlen@a 0003                  strlen@s 0001                _PORTAbits 000F80  
           ??_Conversion 0003              vfpfcnvrt@ap 0046              vfpfcnvrt@fp 0042  
            vfpfcnvrt@ll 004A              putch@Activa 0002    __end_of_InicializaLCD 12AE  
     __end_of_Conversion 14A0           __end_of_printf 147C           __end_of_strlen 13CA  
            putcm@Activa 0002      start_initialization 14A0              __end_of_abs 1394  
            __end_of_pad 11B2              vfprintf@fmt 0054                 ??_printf 005E  
               ??_strlen 0003            __pcstackBANK0 0088         ___aodiv@dividend 0001  
      main@potenciometro 008C                 ?___aodiv 0001                 ?___aomod 0001  
       ___aodiv@quotient 0013   __size_of_Configuracion 0028        __size_of_vfprintf 0062  
            __smallconst 0800           __size_of_fputc 0096           __size_of_fputs 0044  
         __size_of_putch 0034           __size_of_putcm 0030                _vfpfcnvrt 0B02  
             _ADCON0bits 000FC2                main@motor 008F            _Configuracion 142E  
               __Hrparam 0000               vfprintf@ap 0056                 __Lrparam 0000  
             vfprintf@fp 0052             __Lsmallconst 0800         __size_of___aodiv 0188  
       __size_of___aomod 0164               ?_vfpfcnvrt 0042          ___aodiv@divisor 0009  
        ___aodiv@counter 0011                 _dtoa$728 0030                 __ptext10 1354  
               __ptext11 0E3E                 __ptext12 0CB6                 __ptext13 1248  
               __ptext14 13FE                 __ptext15 147C                 __ptext16 142E  
         ?_Configuracion 0001            __size_of_main 014A            __size_of_dtoa 02E2  
               isa$xinst 000000                 _vfprintf 12AE                printf@fmt 005A  
       ___aomod@dividend 0001                putch@data 0001                putcm@data 0001  
 __size_of_InicializaLCD 0066                 printf@ap 005E          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0048          ___aomod@counter 0011          ??_Configuracion 0001  
           ___aodiv@sign 0012             ___aomod@sign 0012  
