

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Oct 05 14:38:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    38                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    39  0000                     
    40                           ; Version 2.20
    41                           ; Generated 05/05/2020 GMT
    42                           ; 
    43                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    44                           ; All rights reserved.
    45                           ; 
    46                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    47                           ; 
    48                           ; Redistribution and use in source and binary forms, with or without modification, are
    49                           ; permitted provided that the following conditions are met:
    50                           ; 
    51                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    52                           ;        conditions and the following disclaimer.
    53                           ; 
    54                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    55                           ;        of conditions and the following disclaimer in the documentation and/or other
    56                           ;        materials provided with the distribution.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC18F45K50 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74  0000                     
    75                           	psect	idataCOMRAM
    76  0014D2                     __pidataCOMRAM:
    77                           	callstack 0
    78                           
    79                           ;initializer for _direccion
    80  0014D2  01                 	db	1
    81                           
    82                           	psect	idataBANK0
    83  0014D0                     __pidataBANK0:
    84                           	callstack 0
    85                           
    86                           ;initializer for _contador
    87  0014D0  03E6               	dw	998
    88  0000                     _ANSELE	set	3935
    89  0000                     _ANSELD	set	3934
    90  0000                     _ANSELB	set	3932
    91  0000                     _LATD	set	3980
    92  0000                     _ADRESH	set	4036
    93  0000                     _ADRESL	set	4035
    94  0000                     _ADCON0bits	set	4034
    95  0000                     _RCONbits	set	4048
    96  0000                     _INTCON	set	4082
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADCON1	set	4033
    99  0000                     _ADCON0	set	4034
   100  0000                     _TRISE	set	3990
   101  0000                     _TRISD	set	3989
   102  0000                     _TRISB	set	3987
   103  0000                     _INTCONbits	set	4082
   104  0000                     _PORTE	set	3972
   105  0000                     _LATE	set	3981
   106                           
   107                           	psect	smallconst
   108  000800                     __psmallconst:
   109                           	callstack 0
   110  000800  00                 	db	0
   111  000801                     STR_1:
   112                           
   113                           ; BSR set to: 0
   114  000801  54                 	db	84	;'T'
   115  000802  6F                 	db	111	;'o'
   116  000803  74                 	db	116	;'t'
   117  000804  61                 	db	97	;'a'
   118  000805  6C                 	db	108	;'l'
   119  000806  20                 	db	32
   120  000807  64                 	db	100	;'d'
   121  000808  65                 	db	101	;'e'
   122  000809  20                 	db	32
   123  00080A  63                 	db	99	;'c'
   124  00080B  69                 	db	105	;'i'
   125  00080C  65                 	db	101	;'e'
   126  00080D  72                 	db	114	;'r'
   127  00080E  72                 	db	114	;'r'
   128  00080F  65                 	db	101	;'e'
   129  000810  73                 	db	115	;'s'
   130  000811  00                 	db	0
   131  000812                     STR_2:
   132                           
   133                           ; BSR set to: 0
   134  000812  20                 	db	32
   135  000813  20                 	db	32
   136  000814  20                 	db	32
   137  000815  20                 	db	32
   138  000816  20                 	db	32
   139  000817  25                 	db	37
   140  000818  64                 	db	100	;'d'
   141  000819  20                 	db	32
   142  00081A  20                 	db	32
   143  00081B  20                 	db	32
   144  00081C  20                 	db	32
   145  00081D  20                 	db	32
   146  00081E  00                 	db	0
   147  00081F                     STR_3:
   148                           
   149                           ; BSR set to: 0
   150  00081F  20                 	db	32
   151  000820  20                 	db	32
   152  000821  20                 	db	32
   153  000822  20                 	db	32
   154  000823  20                 	db	32
   155  000824  25                 	db	37
   156  000825  64                 	db	100	;'d'
   157  000826  00                 	db	0
   158  000827  00                 	db	0	; dummy byte at the end
   159  0000                     
   160                           ; #config settings
   161                           
   162                           	psect	cinit
   163  0012D6                     __pcinit:
   164                           	callstack 0
   165  0012D6                     start_initialization:
   166                           	callstack 0
   167  0012D6                     __initialization:
   168                           	callstack 0
   169                           
   170                           ; Initialize objects allocated to BANK0 (2 bytes)
   171                           ; load TBLPTR registers with __pidataBANK0
   172  0012D6  0ED0               	movlw	low __pidataBANK0
   173  0012D8  6EF6               	movwf	tblptrl,c
   174  0012DA  0E14               	movlw	high __pidataBANK0
   175  0012DC  6EF7               	movwf	tblptrh,c
   176  0012DE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   177  0012E0  6EF8               	movwf	tblptru,c
   178  0012E2  0009               	tblrd		*+	;fetch initializer
   179  0012E4  CFF5 F090          	movff	tablat,__pdataBANK0
   180  0012E8  0009               	tblrd		*+	;fetch initializer
   181  0012EA  CFF5 F091          	movff	tablat,__pdataBANK0+1
   182                           
   183                           ; Initialize objects allocated to COMRAM (1 bytes)
   184                           ; load TBLPTR registers with __pidataCOMRAM
   185  0012EE  0ED2               	movlw	low __pidataCOMRAM
   186  0012F0  6EF6               	movwf	tblptrl,c
   187  0012F2  0E14               	movlw	high __pidataCOMRAM
   188  0012F4  6EF7               	movwf	tblptrh,c
   189  0012F6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   190  0012F8  6EF8               	movwf	tblptru,c
   191  0012FA  0009               	tblrd		*+	;fetch initializer
   192  0012FC  CFF5 F05D          	movff	tablat,__pdataCOMRAM
   193                           
   194                           ; Clear objects allocated to BANK0 (43 bytes)
   195  001300  EE00  F060         	lfsr	0,__pbssBANK0
   196  001304  0E2B               	movlw	43
   197  001306                     clear_0:
   198  001306  6AEE               	clrf	postinc0,c
   199  001308  06E8               	decf	wreg,f,c
   200  00130A  E1FD               	bnz	clear_0
   201  00130C                     end_of_initialization:
   202                           	callstack 0
   203  00130C                     __end_of__initialization:
   204                           	callstack 0
   205  00130C  905E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   206  00130E  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   207  001310  0E00               	movlw	low (__Lsmallconst shr (0+16))
   208  001312  6EF8               	movwf	tblptru,c
   209  001314  0E08               	movlw	high __Lsmallconst
   210  001316  6EF7               	movwf	tblptrh,c
   211  001318  0100               	movlb	0
   212  00131A  EFD4  F008         	goto	_main	;jump to C main() function
   213                           
   214                           	psect	dataCOMRAM
   215  00005D                     __pdataCOMRAM:
   216                           	callstack 0
   217  00005D                     _direccion:
   218                           	callstack 0
   219  00005D                     	ds	1
   220                           
   221                           	psect	bssBANK0
   222  000060                     __pbssBANK0:
   223                           	callstack 0
   224  000060                     _nout:
   225                           	callstack 0
   226  000060                     	ds	2
   227  000062                     _width:
   228                           	callstack 0
   229  000062                     	ds	2
   230  000064                     _prec:
   231                           	callstack 0
   232  000064                     	ds	2
   233  000066                     _flags:
   234                           	callstack 0
   235  000066                     	ds	2
   236  000068                     _corriente:
   237                           	callstack 0
   238  000068                     	ds	2
   239  00006A                     _enProceso:
   240                           	callstack 0
   241  00006A                     	ds	1
   242  00006B                     _dbuf:
   243                           	callstack 0
   244  00006B                     	ds	32
   245                           
   246                           	psect	dataBANK0
   247  000090                     __pdataBANK0:
   248                           	callstack 0
   249  000090                     _contador:
   250                           	callstack 0
   251  000090                     	ds	2
   252                           
   253                           	psect	cstackBANK0
   254  00008B                     __pcstackBANK0:
   255                           	callstack 0
   256  00008B                     ?_printf:
   257                           	callstack 0
   258  00008B                     printf@fmt:
   259                           	callstack 0
   260                           
   261                           ; 2 bytes @ 0x0
   262  00008B                     	ds	4
   263  00008F                     ??_main:
   264                           
   265                           ; 1 bytes @ 0x4
   266  00008F                     	ds	1
   267                           
   268                           	psect	cstackCOMRAM
   269  000001                     __pcstackCOMRAM:
   270                           	callstack 0
   271  000001                     ??_presionaBoton:
   272  000001                     
   273                           ; 1 bytes @ 0x0
   274  000001                     	ds	1
   275  000002                     ??_conversion:
   276  000002                     ?_strlen:
   277                           	callstack 0
   278  000002                     ?___aodiv:
   279                           	callstack 0
   280  000002                     ?___aomod:
   281                           	callstack 0
   282  000002                     putch@data:
   283                           	callstack 0
   284  000002                     putcm@data:
   285                           	callstack 0
   286  000002                     strlen@s:
   287                           	callstack 0
   288  000002                     ___aodiv@dividend:
   289                           	callstack 0
   290  000002                     ___aomod@dividend:
   291                           	callstack 0
   292                           
   293                           ; 8 bytes @ 0x1
   294  000002                     	ds	1
   295  000003                     putch@Activa:
   296                           	callstack 0
   297  000003                     putcm@Activa:
   298                           	callstack 0
   299                           
   300                           ; 1 bytes @ 0x2
   301  000003                     	ds	1
   302  000004                     ??_inicializaLCD:
   303  000004                     fputc@c:
   304                           	callstack 0
   305  000004                     strlen@a:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x3
   309  000004                     	ds	2
   310  000006                     fputc@fp:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0x5
   314  000006                     	ds	2
   315  000008                     ??_fputc:
   316                           
   317                           ; 1 bytes @ 0x7
   318  000008                     	ds	2
   319  00000A                     ___aodiv@divisor:
   320                           	callstack 0
   321  00000A                     ___aomod@divisor:
   322                           	callstack 0
   323                           
   324                           ; 8 bytes @ 0x9
   325  00000A                     	ds	3
   326  00000D                     fputs@s:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0xC
   330  00000D                     	ds	2
   331  00000F                     fputs@fp:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0xE
   335  00000F                     	ds	2
   336  000011                     fputs@c:
   337                           	callstack 0
   338                           
   339                           ; 1 bytes @ 0x10
   340  000011                     	ds	1
   341  000012                     ___aodiv@counter:
   342                           	callstack 0
   343  000012                     ___aomod@counter:
   344                           	callstack 0
   345  000012                     fputs@i:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x11
   349  000012                     	ds	1
   350  000013                     ___aodiv@sign:
   351                           	callstack 0
   352  000013                     ___aomod@sign:
   353                           	callstack 0
   354                           
   355                           ; 1 bytes @ 0x12
   356  000013                     	ds	1
   357  000014                     ?_abs:
   358                           	callstack 0
   359  000014                     ?_pad:
   360                           	callstack 0
   361  000014                     pad@fp:
   362                           	callstack 0
   363  000014                     abs@a:
   364                           	callstack 0
   365  000014                     ___aodiv@quotient:
   366                           	callstack 0
   367                           
   368                           ; 8 bytes @ 0x13
   369  000014                     	ds	2
   370  000016                     ??_abs:
   371  000016                     pad@buf:
   372                           	callstack 0
   373                           
   374                           ; 2 bytes @ 0x15
   375  000016                     	ds	2
   376  000018                     pad@p:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x17
   380  000018                     	ds	2
   381  00001A                     ??_pad:
   382                           
   383                           ; 1 bytes @ 0x19
   384  00001A                     	ds	1
   385  00001B                     pad@i:
   386                           	callstack 0
   387                           
   388                           ; 2 bytes @ 0x1A
   389  00001B                     	ds	2
   390  00001D                     pad@w:
   391                           	callstack 0
   392                           
   393                           ; 2 bytes @ 0x1C
   394  00001D                     	ds	2
   395  00001F                     ?_dtoa:
   396                           	callstack 0
   397  00001F                     dtoa@fp:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x1E
   401  00001F                     	ds	2
   402  000021                     dtoa@d:
   403                           	callstack 0
   404                           
   405                           ; 8 bytes @ 0x20
   406  000021                     	ds	8
   407  000029                     ??_dtoa:
   408                           
   409                           ; 1 bytes @ 0x28
   410  000029                     	ds	8
   411  000031                     _dtoa$803:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x30
   415  000031                     	ds	2
   416  000033                     dtoa@p:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x32
   420  000033                     	ds	2
   421  000035                     dtoa@w:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x34
   425  000035                     	ds	2
   426  000037                     dtoa@s:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x36
   430  000037                     	ds	2
   431  000039                     dtoa@n:
   432                           	callstack 0
   433                           
   434                           ; 8 bytes @ 0x38
   435  000039                     	ds	8
   436  000041                     dtoa@i:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x40
   440  000041                     	ds	2
   441  000043                     ?_vfpfcnvrt:
   442                           	callstack 0
   443  000043                     vfpfcnvrt@fp:
   444                           	callstack 0
   445                           
   446                           ; 2 bytes @ 0x42
   447  000043                     	ds	2
   448  000045                     vfpfcnvrt@fmt:
   449                           	callstack 0
   450                           
   451                           ; 2 bytes @ 0x44
   452  000045                     	ds	2
   453  000047                     vfpfcnvrt@ap:
   454                           	callstack 0
   455                           
   456                           ; 2 bytes @ 0x46
   457  000047                     	ds	2
   458  000049                     ??_vfpfcnvrt:
   459                           
   460                           ; 1 bytes @ 0x48
   461  000049                     	ds	2
   462  00004B                     vfpfcnvrt@ll:
   463                           	callstack 0
   464                           
   465                           ; 8 bytes @ 0x4A
   466  00004B                     	ds	8
   467  000053                     ?_vfprintf:
   468                           	callstack 0
   469  000053                     vfprintf@fp:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x52
   473  000053                     	ds	2
   474  000055                     vfprintf@fmt:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x54
   478  000055                     	ds	2
   479  000057                     vfprintf@ap:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x56
   483  000057                     	ds	2
   484  000059                     vfprintf@cfmt:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x58
   488  000059                     	ds	2
   489  00005B                     printf@ap:
   490                           	callstack 0
   491                           
   492                           ; 2 bytes @ 0x5A
   493  00005B                     	ds	2
   494  00005D                     
   495                           ; 1 bytes @ 0x5C
   496 ;;
   497 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   498 ;;
   499 ;; *************** function _main *****************
   500 ;; Defined at:
   501 ;;		line 33 in file "main.c"
   502 ;; Parameters:    Size  Location     Type
   503 ;;		None
   504 ;; Auto vars:     Size  Location     Type
   505 ;;		None
   506 ;; Return value:  Size  Location     Type
   507 ;;                  1    wreg      void 
   508 ;; Registers used:
   509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   510 ;; Tracked objects:
   511 ;;		On entry : 0/0
   512 ;;		On exit  : 0/0
   513 ;;		Unchanged: 0/0
   514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   515 ;;      Params:         0       0       0       0       0       0       0       0       0
   516 ;;      Locals:         0       0       0       0       0       0       0       0       0
   517 ;;      Temps:          0       1       0       0       0       0       0       0       0
   518 ;;      Totals:         0       1       0       0       0       0       0       0       0
   519 ;;Total ram usage:        1 bytes
   520 ;; Hardware stack levels required when called: 11
   521 ;; This function calls:
   522 ;;		_cerrar
   523 ;;		_configuracion
   524 ;;		_conversion
   525 ;;		_inicializaLCD
   526 ;;		_printf
   527 ;;		_putcm
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           	psect	text0
   534  0011A8                     __ptext0:
   535                           	callstack 0
   536  0011A8                     _main:
   537                           	callstack 20
   538  0011A8                     
   539                           ;main.c: 34:     configuracion();
   540  0011A8  EC1E  F00A         	call	_configuracion	;wreg free
   541  0011AC                     
   542                           ;main.c: 35:     _delay((unsigned long)((10)*(1000000/4000.0)));
   543  0011AC  0E04               	movlw	4
   544  0011AE  0100               	movlb	0	; () banked
   545  0011B0  6F8F               	movwf	??_main& (0+255),b
   546  0011B2  0E3D               	movlw	61
   547  0011B4                     u1077:
   548  0011B4  2EE8               	decfsz	wreg,f,c
   549  0011B6  D7FE               	bra	u1077
   550  0011B8  2F8F               	decfsz	??_main& (0+255),f,b
   551  0011BA  D7FC               	bra	u1077
   552  0011BC  D000               	nop2	
   553  0011BE                     
   554                           ;main.c: 36:     inicializaLCD();
   555  0011BE  EC07  F009         	call	_inicializaLCD	;wreg free
   556  0011C2                     
   557                           ;main.c: 38:     printf("Total de cierres");
   558  0011C2  0E01               	movlw	low STR_1
   559  0011C4  0100               	movlb	0	; () banked
   560  0011C6  6F8B               	movwf	printf@fmt& (0+255),b
   561  0011C8  0E08               	movlw	high STR_1
   562  0011CA  6F8C               	movwf	(printf@fmt+1)& (0+255),b
   563  0011CC  EC47  F00A         	call	_printf	;wreg free
   564  0011D0                     
   565                           ;main.c: 39:     putcm(0xC2);
   566  0011D0  0EC2               	movlw	194
   567  0011D2  EC06  F00A         	call	_putcm
   568  0011D6                     
   569                           ;main.c: 40:     printf("     %d     ", contador);
   570  0011D6  0E12               	movlw	low STR_2
   571  0011D8  0100               	movlb	0	; () banked
   572  0011DA  6F8B               	movwf	printf@fmt& (0+255),b
   573  0011DC  0E08               	movlw	high STR_2
   574  0011DE  6F8C               	movwf	(printf@fmt+1)& (0+255),b
   575  0011E0  C090  F08D         	movff	_contador,?_printf+2
   576  0011E4  C091  F08E         	movff	_contador+1,?_printf+3
   577  0011E8  EC47  F00A         	call	_printf	;wreg free
   578  0011EC                     l1667:
   579                           
   580                           ;main.c: 43:         conversion();
   581  0011EC  EC34  F00A         	call	_conversion	;wreg free
   582  0011F0                     
   583                           ;main.c: 44:         cerrar();
   584  0011F0  EC38  F008         	call	_cerrar	;wreg free
   585  0011F4                     
   586                           ;main.c: 45:         _delay((unsigned long)((100)*(1000000/4000.0)));
   587  0011F4  0E21               	movlw	33
   588  0011F6  0100               	movlb	0	; () banked
   589  0011F8  6F8F               	movwf	??_main& (0+255),b
   590  0011FA  0E76               	movlw	118
   591  0011FC                     u1087:
   592  0011FC  2EE8               	decfsz	wreg,f,c
   593  0011FE  D7FE               	bra	u1087
   594  001200  2F8F               	decfsz	??_main& (0+255),f,b
   595  001202  D7FC               	bra	u1087
   596  001204  F000               	nop	
   597  001206  EFF6  F008         	goto	l1667
   598  00120A  EF44  F000         	goto	start
   599  00120E                     __end_of_main:
   600                           	callstack 0
   601                           
   602 ;; *************** function _inicializaLCD *****************
   603 ;; Defined at:
   604 ;;		line 137 in file "main.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;                  1    wreg      void 
   611 ;; Registers used:
   612 ;;		wreg, status,2, status,0, cstack
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   618 ;;      Params:         0       0       0       0       0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0       0       0       0       0
   620 ;;      Temps:          1       0       0       0       0       0       0       0       0
   621 ;;      Totals:         1       0       0       0       0       0       0       0       0
   622 ;;Total ram usage:        1 bytes
   623 ;; Hardware stack levels used: 1
   624 ;; Hardware stack levels required when called: 2
   625 ;; This function calls:
   626 ;;		_putcm
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           
   632                           	psect	text1
   633  00120E                     __ptext1:
   634                           	callstack 0
   635  00120E                     _inicializaLCD:
   636                           	callstack 28
   637  00120E                     
   638                           ;main.c: 138:     _delay((unsigned long)((30)*(1000000/4000.0)));
   639  00120E  0E0A               	movlw	10
   640  001210  6E04               	movwf	??_inicializaLCD^0,c
   641  001212  0EBC               	movlw	188
   642  001214                     u1097:
   643  001214  2EE8               	decfsz	wreg,f,c
   644  001216  D7FE               	bra	u1097
   645  001218  2E04               	decfsz	??_inicializaLCD^0,f,c
   646  00121A  D7FC               	bra	u1097
   647  00121C  D000               	nop2	
   648  00121E                     
   649                           ;main.c: 139:     putcm(0x02);
   650  00121E  0E02               	movlw	2
   651  001220  EC06  F00A         	call	_putcm
   652  001224                     
   653                           ;main.c: 140:     _delay((unsigned long)((1)*(1000000/4000.0)));
   654  001224  0E53               	movlw	83
   655  001226                     u1107:
   656  001226  2EE8               	decfsz	wreg,f,c
   657  001228  D7FE               	bra	u1107
   658  00122A  F000               	nop	
   659                           
   660                           ;main.c: 141:     putcm(0x28);
   661  00122C  0E28               	movlw	40
   662  00122E  EC06  F00A         	call	_putcm
   663  001232                     
   664                           ;main.c: 142:     _delay((unsigned long)((1)*(1000000/4000.0)));
   665  001232  0E53               	movlw	83
   666  001234                     u1117:
   667  001234  2EE8               	decfsz	wreg,f,c
   668  001236  D7FE               	bra	u1117
   669  001238  F000               	nop	
   670  00123A                     
   671                           ;main.c: 143:     putcm(0x2C);
   672  00123A  0E2C               	movlw	44
   673  00123C  EC06  F00A         	call	_putcm
   674                           
   675                           ;main.c: 144:     _delay((unsigned long)((1)*(1000000/4000.0)));
   676  001240  0E53               	movlw	83
   677  001242                     u1127:
   678  001242  2EE8               	decfsz	wreg,f,c
   679  001244  D7FE               	bra	u1127
   680  001246  F000               	nop	
   681  001248                     
   682                           ;main.c: 145:     putcm(0x0C);
   683  001248  0E0C               	movlw	12
   684  00124A  EC06  F00A         	call	_putcm
   685  00124E                     
   686                           ;main.c: 146:     _delay((unsigned long)((1)*(1000000/4000.0)));
   687  00124E  0E53               	movlw	83
   688  001250                     u1137:
   689  001250  2EE8               	decfsz	wreg,f,c
   690  001252  D7FE               	bra	u1137
   691  001254  F000               	nop	
   692                           
   693                           ;main.c: 147:     putcm(0x06);
   694  001256  0E06               	movlw	6
   695  001258  EC06  F00A         	call	_putcm
   696  00125C                     
   697                           ;main.c: 148:     _delay((unsigned long)((1)*(1000000/4000.0)));
   698  00125C  0E53               	movlw	83
   699  00125E                     u1147:
   700  00125E  2EE8               	decfsz	wreg,f,c
   701  001260  D7FE               	bra	u1147
   702  001262  F000               	nop	
   703  001264                     
   704                           ;main.c: 149:     putcm(0x80);
   705  001264  0E80               	movlw	128
   706  001266  EC06  F00A         	call	_putcm
   707                           
   708                           ;main.c: 150:     _delay((unsigned long)((1)*(1000000/4000.0)));
   709  00126A  0E53               	movlw	83
   710  00126C                     u1157:
   711  00126C  2EE8               	decfsz	wreg,f,c
   712  00126E  D7FE               	bra	u1157
   713  001270  F000               	nop	
   714  001272  0012               	return		;funcret
   715  001274                     __end_of_inicializaLCD:
   716                           	callstack 0
   717                           
   718 ;; *************** function _conversion *****************
   719 ;; Defined at:
   720 ;;		line 85 in file "main.c"
   721 ;; Parameters:    Size  Location     Type
   722 ;;		None
   723 ;; Auto vars:     Size  Location     Type
   724 ;;		None
   725 ;; Return value:  Size  Location     Type
   726 ;;                  1    wreg      void 
   727 ;; Registers used:
   728 ;;		wreg, status,2, status,0
   729 ;; Tracked objects:
   730 ;;		On entry : 0/0
   731 ;;		On exit  : 0/0
   732 ;;		Unchanged: 0/0
   733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   734 ;;      Params:         0       0       0       0       0       0       0       0       0
   735 ;;      Locals:         0       0       0       0       0       0       0       0       0
   736 ;;      Temps:          2       0       0       0       0       0       0       0       0
   737 ;;      Totals:         2       0       0       0       0       0       0       0       0
   738 ;;Total ram usage:        2 bytes
   739 ;; Hardware stack levels used: 1
   740 ;; Hardware stack levels required when called: 1
   741 ;; This function calls:
   742 ;;		Nothing
   743 ;; This function is called by:
   744 ;;		_main
   745 ;; This function uses a non-reentrant model
   746 ;;
   747                           
   748                           	psect	text2
   749  001468                     __ptext2:
   750                           	callstack 0
   751  001468                     _conversion:
   752                           	callstack 29
   753  001468                     
   754                           ;main.c: 86:     ADCON0bits.GO = 1;
   755  001468  82C2               	bsf	194,1,c	;volatile
   756  00146A                     l84:
   757  00146A  B2C2               	btfsc	194,1,c	;volatile
   758  00146C  EF3A  F00A         	goto	u981
   759  001470  EF3C  F00A         	goto	u980
   760  001474                     u981:
   761  001474  EF35  F00A         	goto	l84
   762  001478                     u980:
   763  001478                     
   764                           ;main.c: 88:     corriente = ADRESL + ADRESH * 256;
   765  001478  50C4               	movf	196,w,c	;volatile
   766  00147A  6E03               	movwf	(??_conversion+1)^0,c
   767  00147C  6A02               	clrf	??_conversion^0,c
   768  00147E  50C3               	movf	195,w,c	;volatile
   769  001480  2402               	addwf	??_conversion^0,w,c
   770  001482  0100               	movlb	0	; () banked
   771  001484  6F68               	movwf	_corriente& (0+255),b
   772  001486  0E00               	movlw	0
   773  001488  2003               	addwfc	(??_conversion+1)^0,w,c
   774  00148A  6F69               	movwf	(_corriente+1)& (0+255),b
   775  00148C                     
   776                           ; BSR set to: 0
   777  00148C  0012               	return		;funcret
   778  00148E                     __end_of_conversion:
   779                           	callstack 0
   780                           
   781 ;; *************** function _configuracion *****************
   782 ;; Defined at:
   783 ;;		line 67 in file "main.c"
   784 ;; Parameters:    Size  Location     Type
   785 ;;		None
   786 ;; Auto vars:     Size  Location     Type
   787 ;;		None
   788 ;; Return value:  Size  Location     Type
   789 ;;                  1    wreg      void 
   790 ;; Registers used:
   791 ;;		wreg, status,2
   792 ;; Tracked objects:
   793 ;;		On entry : 0/0
   794 ;;		On exit  : 0/0
   795 ;;		Unchanged: 0/0
   796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   797 ;;      Params:         0       0       0       0       0       0       0       0       0
   798 ;;      Locals:         0       0       0       0       0       0       0       0       0
   799 ;;      Temps:          0       0       0       0       0       0       0       0       0
   800 ;;      Totals:         0       0       0       0       0       0       0       0       0
   801 ;;Total ram usage:        0 bytes
   802 ;; Hardware stack levels used: 1
   803 ;; Hardware stack levels required when called: 1
   804 ;; This function calls:
   805 ;;		Nothing
   806 ;; This function is called by:
   807 ;;		_main
   808 ;; This function uses a non-reentrant model
   809 ;;
   810                           
   811                           	psect	text3
   812  00143C                     __ptext3:
   813                           	callstack 0
   814  00143C                     _configuracion:
   815                           	callstack 29
   816  00143C                     
   817                           ;main.c: 68:     TRISB = 0xFF;
   818  00143C  6893               	setf	147,c	;volatile
   819  00143E                     
   820                           ;main.c: 69:     ANSELB = 0;
   821  00143E  0E00               	movlw	0
   822  001440  010F               	movlb	15	; () banked
   823  001442  6F5C               	movwf	92,b	;volatile
   824                           
   825                           ;main.c: 71:     TRISD = 0;
   826  001444  0E00               	movlw	0
   827  001446  6E95               	movwf	149,c	;volatile
   828                           
   829                           ;main.c: 72:     ANSELD = 0;
   830  001448  0E00               	movlw	0
   831  00144A  6F5E               	movwf	94,b	;volatile
   832                           
   833                           ;main.c: 74:     TRISE = 0;
   834  00144C  0E00               	movlw	0
   835  00144E  6E96               	movwf	150,c	;volatile
   836                           
   837                           ;main.c: 75:     ANSELE = 0;
   838  001450  0E00               	movlw	0
   839  001452  6F5F               	movwf	95,b	;volatile
   840                           
   841                           ;main.c: 77:     ADCON0 = 0x39;
   842  001454  0E39               	movlw	57
   843  001456  6EC2               	movwf	194,c	;volatile
   844                           
   845                           ;main.c: 78:     ADCON1 = 0x00;
   846  001458  0E00               	movlw	0
   847  00145A  6EC1               	movwf	193,c	;volatile
   848                           
   849                           ;main.c: 79:     ADCON2 = 0x90;
   850  00145C  0E90               	movlw	144
   851  00145E  6EC0               	movwf	192,c	;volatile
   852                           
   853                           ;main.c: 81:     INTCON = 0xD0;
   854  001460  0ED0               	movlw	208
   855  001462  6EF2               	movwf	242,c	;volatile
   856  001464                     
   857                           ; BSR set to: 15
   858                           ;main.c: 82:     RCONbits.IPEN = 1;
   859  001464  8ED0               	bsf	208,7,c	;volatile
   860  001466                     
   861                           ; BSR set to: 15
   862  001466  0012               	return		;funcret
   863  001468                     __end_of_configuracion:
   864                           	callstack 0
   865                           
   866 ;; *************** function _cerrar *****************
   867 ;; Defined at:
   868 ;;		line 91 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   882 ;;      Params:         0       0       0       0       0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0       0       0       0       0
   884 ;;      Temps:          0       0       0       0       0       0       0       0       0
   885 ;;      Totals:         0       0       0       0       0       0       0       0       0
   886 ;;Total ram usage:        0 bytes
   887 ;; Hardware stack levels used: 1
   888 ;; Hardware stack levels required when called: 10
   889 ;; This function calls:
   890 ;;		_limpiaLCD
   891 ;;		_printf
   892 ;;		_putcm
   893 ;; This function is called by:
   894 ;;		_main
   895 ;; This function uses a non-reentrant model
   896 ;;
   897                           
   898                           	psect	text4
   899  001070                     __ptext4:
   900                           	callstack 0
   901  001070                     _cerrar:
   902                           	callstack 20
   903  001070                     
   904                           ;main.c: 92:     if (corriente >= 800 && PORTE) {
   905  001070  0100               	movlb	0	; () banked
   906  001072  BF69               	btfsc	(_corriente+1)& (0+255),7,b
   907  001074  EF45  F008         	goto	u991
   908  001078  0E20               	movlw	32
   909  00107A  5D68               	subwf	_corriente& (0+255),w,b
   910  00107C  0E03               	movlw	3
   911  00107E  5969               	subwfb	(_corriente+1)& (0+255),w,b
   912  001080  A0D8               	btfss	status,0,c
   913  001082  EF45  F008         	goto	u991
   914  001086  EF47  F008         	goto	u990
   915  00108A                     u991:
   916  00108A  EF88  F008         	goto	l95
   917  00108E                     u990:
   918  00108E                     
   919                           ; BSR set to: 0
   920  00108E  5084               	movf	132,w,c	;volatile
   921  001090  B4D8               	btfsc	status,2,c
   922  001092  EF4D  F008         	goto	u1001
   923  001096  EF4F  F008         	goto	u1000
   924  00109A                     u1001:
   925  00109A  EF88  F008         	goto	l95
   926  00109E                     u1000:
   927  00109E                     
   928                           ; BSR set to: 0
   929                           ;main.c: 93:         enProceso = 0;
   930  00109E  0E00               	movlw	0
   931  0010A0  6F6A               	movwf	_enProceso& (0+255),b
   932  0010A2                     
   933                           ; BSR set to: 0
   934                           ;main.c: 94:         if (direccion == 2) {
   935  0010A2  0E02               	movlw	2
   936  0010A4  185D               	xorwf	_direccion^0,w,c
   937  0010A6  A4D8               	btfss	status,2,c
   938  0010A8  EF58  F008         	goto	u1011
   939  0010AC  EF5A  F008         	goto	u1010
   940  0010B0                     u1011:
   941  0010B0  EF84  F008         	goto	l1615
   942  0010B4                     u1010:
   943  0010B4                     
   944                           ; BSR set to: 0
   945                           ;main.c: 95:             if (contador < 999) {
   946  0010B4  BF91               	btfsc	(_contador+1)& (0+255),7,b
   947  0010B6  EF68  F008         	goto	u1020
   948  0010BA  0EE7               	movlw	231
   949  0010BC  5D90               	subwf	_contador& (0+255),w,b
   950  0010BE  0E03               	movlw	3
   951  0010C0  5991               	subwfb	(_contador+1)& (0+255),w,b
   952  0010C2  B0D8               	btfsc	status,0,c
   953  0010C4  EF66  F008         	goto	u1021
   954  0010C8  EF68  F008         	goto	u1020
   955  0010CC                     u1021:
   956  0010CC  EF6C  F008         	goto	l1605
   957  0010D0                     u1020:
   958  0010D0                     
   959                           ; BSR set to: 0
   960                           ;main.c: 96:                 contador++;
   961  0010D0  4B90               	infsnz	_contador& (0+255),f,b
   962  0010D2  2B91               	incf	(_contador+1)& (0+255),f,b
   963                           
   964                           ;main.c: 97:             } else {
   965  0010D4  EF72  F008         	goto	l1609
   966  0010D8                     l1605:
   967                           
   968                           ; BSR set to: 0
   969                           ;main.c: 98:                 contador = 0;
   970  0010D8  0E00               	movlw	0
   971  0010DA  6F91               	movwf	(_contador+1)& (0+255),b
   972  0010DC  0E00               	movlw	0
   973  0010DE  6F90               	movwf	_contador& (0+255),b
   974  0010E0                     
   975                           ; BSR set to: 0
   976                           ;main.c: 99:                 limpiaLCD();
   977  0010E0  EC5A  F00A         	call	_limpiaLCD	;wreg free
   978  0010E4                     l1609:
   979                           
   980                           ;main.c: 101:             putcm(0xC2);
   981  0010E4  0EC2               	movlw	194
   982  0010E6  EC06  F00A         	call	_putcm
   983  0010EA                     
   984                           ;main.c: 102:             printf("     %d", contador);
   985  0010EA  0E1F               	movlw	low STR_3
   986  0010EC  0100               	movlb	0	; () banked
   987  0010EE  6F8B               	movwf	printf@fmt& (0+255),b
   988  0010F0  0E08               	movlw	high STR_3
   989  0010F2  6F8C               	movwf	(printf@fmt+1)& (0+255),b
   990  0010F4  C090  F08D         	movff	_contador,?_printf+2
   991  0010F8  C091  F08E         	movff	_contador+1,?_printf+3
   992  0010FC  EC47  F00A         	call	_printf	;wreg free
   993  001100                     
   994                           ;main.c: 103:             direccion = 1;
   995  001100  0E01               	movlw	1
   996  001102  6E5D               	movwf	_direccion^0,c
   997                           
   998                           ;main.c: 104:         } else {
   999  001104  EF86  F008         	goto	l94
  1000  001108                     l1615:
  1001                           
  1002                           ; BSR set to: 0
  1003                           ;main.c: 105:             direccion = 2;
  1004  001108  0E02               	movlw	2
  1005  00110A  6E5D               	movwf	_direccion^0,c
  1006  00110C                     l94:
  1007                           
  1008                           ;main.c: 107:         LATE = 0;
  1009  00110C  0E00               	movlw	0
  1010  00110E  6E8D               	movwf	141,c	;volatile
  1011  001110                     l95:
  1012  001110  0012               	return		;funcret
  1013  001112                     __end_of_cerrar:
  1014                           	callstack 0
  1015                           
  1016 ;; *************** function _limpiaLCD *****************
  1017 ;; Defined at:
  1018 ;;		line 153 in file "main.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;		None
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;		None
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  1    wreg      void 
  1025 ;; Registers used:
  1026 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1032 ;;      Params:         0       0       0       0       0       0       0       0       0
  1033 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1035 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1036 ;;Total ram usage:        0 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; Hardware stack levels required when called: 9
  1039 ;; This function calls:
  1040 ;;		_printf
  1041 ;;		_putcm
  1042 ;; This function is called by:
  1043 ;;		_cerrar
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           
  1047                           	psect	text5
  1048  0014B4                     __ptext5:
  1049                           	callstack 0
  1050  0014B4                     _limpiaLCD:
  1051                           	callstack 20
  1052  0014B4                     
  1053                           ;main.c: 154:     putcm(0x01);
  1054  0014B4  0E01               	movlw	1
  1055  0014B6  EC06  F00A         	call	_putcm
  1056                           
  1057                           ;main.c: 155:     putcm(0x84);
  1058  0014BA  0E84               	movlw	132
  1059  0014BC  EC06  F00A         	call	_putcm
  1060  0014C0                     
  1061                           ;main.c: 156:     printf("Total de cierres");
  1062  0014C0  0E01               	movlw	low STR_1
  1063  0014C2  0100               	movlb	0	; () banked
  1064  0014C4  6F8B               	movwf	printf@fmt& (0+255),b
  1065  0014C6  0E08               	movlw	high STR_1
  1066  0014C8  6F8C               	movwf	(printf@fmt+1)& (0+255),b
  1067  0014CA  EC47  F00A         	call	_printf	;wreg free
  1068  0014CE  0012               	return		;funcret
  1069  0014D0                     __end_of_limpiaLCD:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _putcm *****************
  1073 ;; Defined at:
  1074 ;;		line 124 in file "main.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  data            1    wreg     unsigned char 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  data            1    1[COMRAM] unsigned char 
  1079 ;;  Activa          1    2[COMRAM] unsigned char 
  1080 ;; Return value:  Size  Location     Type
  1081 ;;                  1    wreg      void 
  1082 ;; Registers used:
  1083 ;;		wreg, status,2, status,0
  1084 ;; Tracked objects:
  1085 ;;		On entry : 0/0
  1086 ;;		On exit  : 0/0
  1087 ;;		Unchanged: 0/0
  1088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1089 ;;      Params:         0       0       0       0       0       0       0       0       0
  1090 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1091 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1092 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1093 ;;Total ram usage:        2 bytes
  1094 ;; Hardware stack levels used: 1
  1095 ;; Hardware stack levels required when called: 1
  1096 ;; This function calls:
  1097 ;;		Nothing
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;;		_cerrar
  1101 ;;		_inicializaLCD
  1102 ;;		_limpiaLCD
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           	psect	text6
  1107  00140C                     __ptext6:
  1108                           	callstack 0
  1109  00140C                     _putcm:
  1110                           	callstack 29
  1111                           
  1112                           ;incstack = 0
  1113                           ;putcm@data stored from wreg
  1114  00140C  6E02               	movwf	putcm@data^0,c
  1115  00140E                     
  1116                           ;main.c: 125:     char Activa;;main.c: 126:     Activa = data & 0xF0;
  1117  00140E  5002               	movf	putcm@data^0,w,c
  1118  001410  0BF0               	andlw	240
  1119  001412  6E03               	movwf	putcm@Activa^0,c
  1120                           
  1121                           ;main.c: 127:     LATD = Activa | 0x04;
  1122  001414  5003               	movf	putcm@Activa^0,w,c
  1123  001416  0904               	iorlw	4
  1124  001418  6E8C               	movwf	140,c	;volatile
  1125  00141A                     
  1126                           ;main.c: 128:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1127  00141A  D000               	nop2		;2 cycle nop
  1128  00141C                     
  1129                           ;main.c: 129:     LATD = Activa;
  1130  00141C  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  1131  001420                     
  1132                           ;main.c: 130:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1133  001420  0E53               	movlw	83
  1134  001422                     u1167:
  1135  001422  2EE8               	decfsz	wreg,f,c
  1136  001424  D7FE               	bra	u1167
  1137  001426  F000               	nop	
  1138  001428                     
  1139                           ;main.c: 131:     Activa = data << 4;
  1140  001428  3802               	swapf	putcm@data^0,w,c
  1141  00142A  0BF0               	andlw	240
  1142  00142C  6E03               	movwf	putcm@Activa^0,c
  1143  00142E                     
  1144                           ;main.c: 132:     LATD = Activa | 0x04;
  1145  00142E  5003               	movf	putcm@Activa^0,w,c
  1146  001430  0904               	iorlw	4
  1147  001432  6E8C               	movwf	140,c	;volatile
  1148  001434                     
  1149                           ;main.c: 133:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1150  001434  D000               	nop2		;2 cycle nop
  1151  001436                     
  1152                           ;main.c: 134:     LATD = Activa;
  1153  001436  C003  FF8C         	movff	putcm@Activa,3980	;volatile
  1154  00143A  0012               	return		;funcret
  1155  00143C                     __end_of_putcm:
  1156                           	callstack 0
  1157                           
  1158 ;; *************** function _printf *****************
  1159 ;; Defined at:
  1160 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  fmt             2    0[BANK0 ] PTR const unsigned char 
  1163 ;;		 -> STR_4(17), STR_3(8), STR_2(13), STR_1(17), 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  ap              2   90[COMRAM] PTR void [1]
  1166 ;;		 -> ?_printf(2), 
  1167 ;;  ret             2    0        int 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  2    0[BANK0 ] int 
  1170 ;; Registers used:
  1171 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1177 ;;      Params:         0       4       0       0       0       0       0       0       0
  1178 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1180 ;;      Totals:         2       4       0       0       0       0       0       0       0
  1181 ;;Total ram usage:        6 bytes
  1182 ;; Hardware stack levels used: 1
  1183 ;; Hardware stack levels required when called: 8
  1184 ;; This function calls:
  1185 ;;		_vfprintf
  1186 ;; This function is called by:
  1187 ;;		_main
  1188 ;;		_cerrar
  1189 ;;		_limpiaLCD
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text7
  1194  00148E                     __ptext7:
  1195                           	callstack 0
  1196  00148E                     _printf:
  1197                           	callstack 22
  1198  00148E  0E8D               	movlw	low (?_printf+2)
  1199  001490  6E5B               	movwf	printf@ap^0,c
  1200  001492  0E00               	movlw	high (?_printf+2)
  1201  001494  6E5C               	movwf	(printf@ap+1)^0,c
  1202  001496  0E00               	movlw	0
  1203  001498  6E53               	movwf	vfprintf@fp^0,c
  1204  00149A  0E00               	movlw	0
  1205  00149C  6E54               	movwf	(vfprintf@fp+1)^0,c
  1206  00149E  C08B  F055         	movff	printf@fmt,vfprintf@fmt
  1207  0014A2  C08C  F056         	movff	printf@fmt+1,vfprintf@fmt+1
  1208  0014A6  0E5B               	movlw	low printf@ap
  1209  0014A8  6E57               	movwf	vfprintf@ap^0,c
  1210  0014AA  0E00               	movlw	high printf@ap
  1211  0014AC  6E58               	movwf	(vfprintf@ap+1)^0,c
  1212  0014AE  EC3A  F009         	call	_vfprintf	;wreg free
  1213  0014B2  0012               	return		;funcret
  1214  0014B4                     __end_of_printf:
  1215                           	callstack 0
  1216                           
  1217 ;; *************** function _vfprintf *****************
  1218 ;; Defined at:
  1219 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1220 ;; Parameters:    Size  Location     Type
  1221 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  1222 ;;		 -> NULL(0), 
  1223 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  1224 ;;		 -> STR_4(17), STR_3(8), STR_2(13), STR_1(17), 
  1225 ;;  ap              2   86[COMRAM] PTR PTR void 
  1226 ;;		 -> printf@ap(2), 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  1229 ;;		 -> STR_4(17), STR_3(8), STR_2(13), STR_1(17), 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  2   82[COMRAM] int 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         6       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1242 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1243 ;;Total ram usage:        8 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 7
  1246 ;; This function calls:
  1247 ;;		_vfpfcnvrt
  1248 ;; This function is called by:
  1249 ;;		_printf
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text8
  1254  001274                     __ptext8:
  1255                           	callstack 0
  1256  001274                     _vfprintf:
  1257                           	callstack 22
  1258  001274                     
  1259                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1260  001274  C055  F059         	movff	vfprintf@fmt,vfprintf@cfmt
  1261  001278  C056  F05A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1262  00127C                     
  1263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1264  00127C  0E00               	movlw	0
  1265  00127E  0100               	movlb	0	; () banked
  1266  001280  6F61               	movwf	(_nout+1)& (0+255),b
  1267  001282  0E00               	movlw	0
  1268  001284  6F60               	movwf	_nout& (0+255),b
  1269                           
  1270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1271  001286  EF58  F009         	goto	l1537
  1272  00128A                     l1535:
  1273                           
  1274                           ; BSR set to: 0
  1275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1276  00128A  C053  F043         	movff	vfprintf@fp,vfpfcnvrt@fp
  1277  00128E  C054  F044         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1278  001292  0E59               	movlw	low vfprintf@cfmt
  1279  001294  6E45               	movwf	vfpfcnvrt@fmt^0,c
  1280  001296  0E00               	movlw	high vfprintf@cfmt
  1281  001298  6E46               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1282  00129A  C057  F047         	movff	vfprintf@ap,vfpfcnvrt@ap
  1283  00129E  C058  F048         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1284  0012A2  EC85  F005         	call	_vfpfcnvrt	;wreg free
  1285  0012A6  5043               	movf	?_vfpfcnvrt^0,w,c
  1286  0012A8  0100               	movlb	0	; () banked
  1287  0012AA  2760               	addwf	_nout& (0+255),f,b
  1288  0012AC  5044               	movf	(?_vfpfcnvrt+1)^0,w,c
  1289  0012AE  2361               	addwfc	(_nout+1)& (0+255),f,b
  1290  0012B0                     l1537:
  1291                           
  1292                           ; BSR set to: 0
  1293                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1294  0012B0  C059  FFF6         	movff	vfprintf@cfmt,tblptrl
  1295  0012B4  C05A  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1296  0012B8                     	if	0	;tblptru may be non-zero
  1297  0012B8                     	endif
  1298  0012B8                     	if	0	;tblptru may be non-zero
  1299  0012B8                     	endif
  1300  0012B8  0008               	tblrd		*
  1301  0012BA  50F5               	movf	tablat,w,c
  1302  0012BC  0900               	iorlw	0
  1303  0012BE  A4D8               	btfss	status,2,c
  1304  0012C0  EF64  F009         	goto	u971
  1305  0012C4  EF66  F009         	goto	u970
  1306  0012C8                     u971:
  1307  0012C8  EF45  F009         	goto	l1535
  1308  0012CC                     u970:
  1309  0012CC                     
  1310                           ; BSR set to: 0
  1311                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1312  0012CC  C060  F053         	movff	_nout,?_vfprintf
  1313  0012D0  C061  F054         	movff	_nout+1,?_vfprintf+1
  1314  0012D4                     
  1315                           ; BSR set to: 0
  1316  0012D4  0012               	return		;funcret
  1317  0012D6                     __end_of_vfprintf:
  1318                           	callstack 0
  1319                           
  1320 ;; *************** function _vfpfcnvrt *****************
  1321 ;; Defined at:
  1322 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  1325 ;;		 -> NULL(0), 
  1326 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  1327 ;;		 -> vfprintf@cfmt(2), 
  1328 ;;  ap              2   70[COMRAM] PTR PTR void 
  1329 ;;		 -> printf@ap(2), 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  ll              8   74[COMRAM] long long 
  1332 ;;  llu             8    0        unsigned long long 
  1333 ;;  f               4    0        unsigned long long 
  1334 ;;  vp              3    0        PTR void 
  1335 ;;  ct              3    0        unsigned char [3]
  1336 ;;  cp              3    0        PTR unsigned char 
  1337 ;;  i               2    0        int 
  1338 ;;  done            2    0        int 
  1339 ;;  c               1    0        unsigned char 
  1340 ;; Return value:  Size  Location     Type
  1341 ;;                  2   66[COMRAM] int 
  1342 ;; Registers used:
  1343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1344 ;; Tracked objects:
  1345 ;;		On entry : 0/0
  1346 ;;		On exit  : 0/0
  1347 ;;		Unchanged: 0/0
  1348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1349 ;;      Params:         6       0       0       0       0       0       0       0       0
  1350 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1351 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1352 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1353 ;;Total ram usage:       16 bytes
  1354 ;; Hardware stack levels used: 1
  1355 ;; Hardware stack levels required when called: 6
  1356 ;; This function calls:
  1357 ;;		_dtoa
  1358 ;;		_fputc
  1359 ;; This function is called by:
  1360 ;;		_vfprintf
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text9
  1365  000B0A                     __ptext9:
  1366                           	callstack 0
  1367  000B0A                     _vfpfcnvrt:
  1368                           	callstack 22
  1369  000B0A                     
  1370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1371  000B0A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1372  000B0E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1373  000B12  CFDE FFF6          	movff	postinc2,tblptrl
  1374  000B16  CFDD FFF7          	movff	postdec2,tblptrh
  1375  000B1A                     	if	0	;tblptru may be non-zero
  1376  000B1A                     	endif
  1377  000B1A                     	if	0	;tblptru may be non-zero
  1378  000B1A                     	endif
  1379  000B1A  0008               	tblrd		*
  1380  000B1C  50F5               	movf	tablat,w,c
  1381  000B1E  0A25               	xorlw	37
  1382  000B20  A4D8               	btfss	status,2,c
  1383  000B22  EF95  F005         	goto	u931
  1384  000B26  EF97  F005         	goto	u930
  1385  000B2A                     u931:
  1386  000B2A  EF43  F006         	goto	l1523
  1387  000B2E                     u930:
  1388  000B2E                     
  1389                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1390  000B2E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1391  000B32  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1392  000B36  2ADE               	incf	postinc2,f,c
  1393  000B38  0E00               	movlw	0
  1394  000B3A  22DD               	addwfc	postdec2,f,c
  1395  000B3C                     
  1396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1397  000B3C  0E00               	movlw	0
  1398  000B3E  0100               	movlb	0	; () banked
  1399  000B40  6F63               	movwf	(_width+1)& (0+255),b
  1400  000B42  0E00               	movlw	0
  1401  000B44  6F62               	movwf	_width& (0+255),b
  1402  000B46  C062  F066         	movff	_width,_flags
  1403  000B4A  C063  F067         	movff	_width+1,_flags+1
  1404  000B4E                     
  1405                           ; BSR set to: 0
  1406                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1407  000B4E  6964               	setf	_prec& (0+255),b
  1408  000B50  6965               	setf	(_prec+1)& (0+255),b
  1409  000B52                     
  1410                           ; BSR set to: 0
  1411                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  1412  000B52  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1413  000B56  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1414  000B5A  CFDE FFF6          	movff	postinc2,tblptrl
  1415  000B5E  CFDD FFF7          	movff	postdec2,tblptrh
  1416  000B62                     	if	0	;tblptru may be non-zero
  1417  000B62                     	endif
  1418  000B62                     	if	0	;tblptru may be non-zero
  1419  000B62                     	endif
  1420  000B62  0008               	tblrd		*
  1421  000B64  50F5               	movf	tablat,w,c
  1422  000B66  0A64               	xorlw	100
  1423  000B68  B4D8               	btfsc	status,2,c
  1424  000B6A  EFB9  F005         	goto	u941
  1425  000B6E  EFBB  F005         	goto	u940
  1426  000B72                     u941:
  1427  000B72  EFCD  F005         	goto	l1501
  1428  000B76                     u940:
  1429  000B76                     
  1430                           ; BSR set to: 0
  1431  000B76  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1432  000B7A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1433  000B7E  CFDE FFF6          	movff	postinc2,tblptrl
  1434  000B82  CFDD FFF7          	movff	postdec2,tblptrh
  1435  000B86                     	if	0	;tblptru may be non-zero
  1436  000B86                     	endif
  1437  000B86                     	if	0	;tblptru may be non-zero
  1438  000B86                     	endif
  1439  000B86  0008               	tblrd		*
  1440  000B88  50F5               	movf	tablat,w,c
  1441  000B8A  0A69               	xorlw	105
  1442  000B8C  A4D8               	btfss	status,2,c
  1443  000B8E  EFCB  F005         	goto	u951
  1444  000B92  EFCD  F005         	goto	u950
  1445  000B96                     u951:
  1446  000B96  EF0D  F006         	goto	l1507
  1447  000B9A                     u950:
  1448  000B9A                     l1501:
  1449                           
  1450                           ; BSR set to: 0
  1451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  1452  000B9A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1453  000B9E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1454  000BA2  2ADE               	incf	postinc2,f,c
  1455  000BA4  0E00               	movlw	0
  1456  000BA6  22DD               	addwfc	postdec2,f,c
  1457                           
  1458                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  1459  000BA8  C047  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1460  000BAC  C048  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1461  000BB0  CFDF F049          	movff	indf2,??_vfpfcnvrt
  1462  000BB4  0E02               	movlw	2
  1463  000BB6  26DE               	addwf	postinc2,f,c
  1464  000BB8  CFDF F04A          	movff	indf2,??_vfpfcnvrt+1
  1465  000BBC  0E00               	movlw	0
  1466  000BBE  22DD               	addwfc	postdec2,f,c
  1467  000BC0  C049  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1468  000BC4  C04A  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1469  000BC8  CFDE F04B          	movff	postinc2,vfpfcnvrt@ll
  1470  000BCC  CFDD F04C          	movff	postdec2,vfpfcnvrt@ll+1
  1471  000BD0  0E00               	movlw	0
  1472  000BD2  BE4C               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  1473  000BD4  0EFF               	movlw	-1
  1474  000BD6  6E4D               	movwf	(vfpfcnvrt@ll+2)^0,c
  1475  000BD8  6E4E               	movwf	(vfpfcnvrt@ll+3)^0,c
  1476  000BDA  6E4F               	movwf	(vfpfcnvrt@ll+4)^0,c
  1477  000BDC  6E50               	movwf	(vfpfcnvrt@ll+5)^0,c
  1478  000BDE  6E51               	movwf	(vfpfcnvrt@ll+6)^0,c
  1479  000BE0  6E52               	movwf	(vfpfcnvrt@ll+7)^0,c
  1480  000BE2                     
  1481                           ; BSR set to: 0
  1482                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  1483  000BE2  C043  F01F         	movff	vfpfcnvrt@fp,dtoa@fp
  1484  000BE6  C044  F020         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  1485  000BEA  C04B  F021         	movff	vfpfcnvrt@ll,dtoa@d
  1486  000BEE  C04C  F022         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  1487  000BF2  C04D  F023         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  1488  000BF6  C04E  F024         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  1489  000BFA  C04F  F025         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  1490  000BFE  C050  F026         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  1491  000C02  C051  F027         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  1492  000C06  C052  F028         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  1493  000C0A  EC14  F004         	call	_dtoa	;wreg free
  1494  000C0E  C01F  F043         	movff	?_dtoa,?_vfpfcnvrt
  1495  000C12  C020  F044         	movff	?_dtoa+1,?_vfpfcnvrt+1
  1496  000C16  EF5E  F006         	goto	l853
  1497  000C1A                     l1507:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  1501  000C1A  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1502  000C1E  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1503  000C22  CFDE FFF6          	movff	postinc2,tblptrl
  1504  000C26  CFDD FFF7          	movff	postdec2,tblptrh
  1505  000C2A                     	if	0	;tblptru may be non-zero
  1506  000C2A                     	endif
  1507  000C2A                     	if	0	;tblptru may be non-zero
  1508  000C2A                     	endif
  1509  000C2A  0008               	tblrd		*
  1510  000C2C  50F5               	movf	tablat,w,c
  1511  000C2E  0A25               	xorlw	37
  1512  000C30  A4D8               	btfss	status,2,c
  1513  000C32  EF1D  F006         	goto	u961
  1514  000C36  EF1F  F006         	goto	u960
  1515  000C3A                     u961:
  1516  000C3A  EF36  F006         	goto	l1517
  1517  000C3E                     u960:
  1518  000C3E                     
  1519                           ; BSR set to: 0
  1520                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  1521  000C3E  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1522  000C42  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1523  000C46  2ADE               	incf	postinc2,f,c
  1524  000C48  0E00               	movlw	0
  1525  000C4A  22DD               	addwfc	postdec2,f,c
  1526  000C4C                     
  1527                           ; BSR set to: 0
  1528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  1529  000C4C  0E00               	movlw	0
  1530  000C4E  6E05               	movwf	(fputc@c+1)^0,c
  1531  000C50  0E25               	movlw	37
  1532  000C52  6E04               	movwf	fputc@c^0,c
  1533  000C54  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1534  000C58  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1535  000C5C  EC89  F008         	call	_fputc	;wreg free
  1536  000C60                     l1513:
  1537                           
  1538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  1539  000C60  0E00               	movlw	0
  1540  000C62  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1541  000C64  0E01               	movlw	1
  1542  000C66  6E43               	movwf	?_vfpfcnvrt^0,c
  1543  000C68  EF5E  F006         	goto	l853
  1544  000C6C                     l1517:
  1545                           
  1546                           ; BSR set to: 0
  1547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  1548  000C6C  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1549  000C70  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1550  000C74  2ADE               	incf	postinc2,f,c
  1551  000C76  0E00               	movlw	0
  1552  000C78  22DD               	addwfc	postdec2,f,c
  1553  000C7A                     
  1554                           ; BSR set to: 0
  1555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  1556  000C7A  0E00               	movlw	0
  1557  000C7C  6E44               	movwf	(?_vfpfcnvrt+1)^0,c
  1558  000C7E  0E00               	movlw	0
  1559  000C80  6E43               	movwf	?_vfpfcnvrt^0,c
  1560  000C82  EF5E  F006         	goto	l853
  1561  000C86                     l1523:
  1562                           
  1563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  1564  000C86  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1565  000C8A  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1566  000C8E  CFDE FFF6          	movff	postinc2,tblptrl
  1567  000C92  CFDD FFF7          	movff	postdec2,tblptrh
  1568  000C96                     	if	0	;tblptru may be non-zero
  1569  000C96                     	endif
  1570  000C96                     	if	0	;tblptru may be non-zero
  1571  000C96                     	endif
  1572  000C96  0008               	tblrd		*
  1573  000C98  50F5               	movf	tablat,w,c
  1574  000C9A  6E04               	movwf	fputc@c^0,c
  1575  000C9C  6A05               	clrf	(fputc@c+1)^0,c
  1576  000C9E  C043  F006         	movff	vfpfcnvrt@fp,fputc@fp
  1577  000CA2  C044  F007         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  1578  000CA6  EC89  F008         	call	_fputc	;wreg free
  1579  000CAA                     
  1580                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  1581  000CAA  C045  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1582  000CAE  C046  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1583  000CB2  2ADE               	incf	postinc2,f,c
  1584  000CB4  0E00               	movlw	0
  1585  000CB6  22DD               	addwfc	postdec2,f,c
  1586  000CB8  EF30  F006         	goto	l1513
  1587  000CBC                     l853:
  1588  000CBC  0012               	return		;funcret
  1589  000CBE                     __end_of_vfpfcnvrt:
  1590                           	callstack 0
  1591                           
  1592 ;; *************** function _dtoa *****************
  1593 ;; Defined at:
  1594 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  1597 ;;		 -> NULL(0), 
  1598 ;;  d               8   32[COMRAM] long long 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  n               8   56[COMRAM] long long 
  1601 ;;  i               2   64[COMRAM] int 
  1602 ;;  s               2   54[COMRAM] int 
  1603 ;;  w               2   52[COMRAM] int 
  1604 ;;  p               2   50[COMRAM] int 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2   30[COMRAM] int 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1614 ;;      Params:        10       0       0       0       0       0       0       0       0
  1615 ;;      Locals:        18       0       0       0       0       0       0       0       0
  1616 ;;      Temps:          8       0       0       0       0       0       0       0       0
  1617 ;;      Totals:        36       0       0       0       0       0       0       0       0
  1618 ;;Total ram usage:       36 bytes
  1619 ;; Hardware stack levels used: 1
  1620 ;; Hardware stack levels required when called: 5
  1621 ;; This function calls:
  1622 ;;		___aodiv
  1623 ;;		___aomod
  1624 ;;		_abs
  1625 ;;		_pad
  1626 ;; This function is called by:
  1627 ;;		_vfpfcnvrt
  1628 ;; This function uses a non-reentrant model
  1629 ;;
  1630                           
  1631                           	psect	text10
  1632  000828                     __ptext10:
  1633                           	callstack 0
  1634  000828                     _dtoa:
  1635                           	callstack 22
  1636  000828                     
  1637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  1638  000828  C021  F039         	movff	dtoa@d,dtoa@n
  1639  00082C  C022  F03A         	movff	dtoa@d+1,dtoa@n+1
  1640  000830  C023  F03B         	movff	dtoa@d+2,dtoa@n+2
  1641  000834  C024  F03C         	movff	dtoa@d+3,dtoa@n+3
  1642  000838  C025  F03D         	movff	dtoa@d+4,dtoa@n+4
  1643  00083C  C026  F03E         	movff	dtoa@d+5,dtoa@n+5
  1644  000840  C027  F03F         	movff	dtoa@d+6,dtoa@n+6
  1645  000844  C028  F040         	movff	dtoa@d+7,dtoa@n+7
  1646  000848                     
  1647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  1648  000848  BE40               	btfsc	(dtoa@n+7)^0,7,c
  1649  00084A  EF29  F004         	goto	u781
  1650  00084E  EF2C  F004         	goto	u780
  1651  000852                     u781:
  1652  000852  0E01               	movlw	1
  1653  000854  EF2D  F004         	goto	u790
  1654  000858                     u780:
  1655  000858  0E00               	movlw	0
  1656  00085A                     u790:
  1657  00085A  6E37               	movwf	dtoa@s^0,c
  1658  00085C  6A38               	clrf	(dtoa@s+1)^0,c
  1659                           
  1660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  1661  00085E  5037               	movf	dtoa@s^0,w,c
  1662  000860  1038               	iorwf	(dtoa@s+1)^0,w,c
  1663  000862  B4D8               	btfsc	status,2,c
  1664  000864  EF36  F004         	goto	u801
  1665  000868  EF38  F004         	goto	u800
  1666  00086C                     u801:
  1667  00086C  EF48  F004         	goto	l1433
  1668  000870                     u800:
  1669  000870                     
  1670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  1671  000870  1E40               	comf	(dtoa@n+7)^0,f,c
  1672  000872  1E3F               	comf	(dtoa@n+6)^0,f,c
  1673  000874  1E3E               	comf	(dtoa@n+5)^0,f,c
  1674  000876  1E3D               	comf	(dtoa@n+4)^0,f,c
  1675  000878  1E3C               	comf	(dtoa@n+3)^0,f,c
  1676  00087A  1E3B               	comf	(dtoa@n+2)^0,f,c
  1677  00087C  1E3A               	comf	(dtoa@n+1)^0,f,c
  1678  00087E  6C39               	negf	dtoa@n^0,c
  1679  000880  0E00               	movlw	0
  1680  000882  223A               	addwfc	(dtoa@n+1)^0,f,c
  1681  000884  223B               	addwfc	(dtoa@n+2)^0,f,c
  1682  000886  223C               	addwfc	(dtoa@n+3)^0,f,c
  1683  000888  223D               	addwfc	(dtoa@n+4)^0,f,c
  1684  00088A  223E               	addwfc	(dtoa@n+5)^0,f,c
  1685  00088C  223F               	addwfc	(dtoa@n+6)^0,f,c
  1686  00088E  2240               	addwfc	(dtoa@n+7)^0,f,c
  1687  000890                     l1433:
  1688                           
  1689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  1690  000890  0100               	movlb	0	; () banked
  1691  000892  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1692  000894  EF4E  F004         	goto	u811
  1693  000898  EF50  F004         	goto	u810
  1694  00089C                     u811:
  1695  00089C  EF51  F004         	goto	l1437
  1696  0008A0                     u810:
  1697  0008A0                     
  1698                           ; BSR set to: 0
  1699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  1700  0008A0  9366               	bcf	_flags& (0+255),1,b
  1701  0008A2                     l1437:
  1702                           
  1703                           ; BSR set to: 0
  1704                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  1705  0008A2  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1706  0008A4  EF5E  F004         	goto	u820
  1707  0008A8  5165               	movf	(_prec+1)& (0+255),w,b
  1708  0008AA  E106               	bnz	u821
  1709  0008AC  0564               	decf	_prec& (0+255),w,b
  1710  0008AE  B0D8               	btfsc	status,0,c
  1711  0008B0  EF5C  F004         	goto	u821
  1712  0008B4  EF5E  F004         	goto	u820
  1713  0008B8                     u821:
  1714  0008B8  EF64  F004         	goto	l826
  1715  0008BC                     u820:
  1716  0008BC                     
  1717                           ; BSR set to: 0
  1718  0008BC  0E00               	movlw	0
  1719  0008BE  6E34               	movwf	(dtoa@p+1)^0,c
  1720  0008C0  0E01               	movlw	1
  1721  0008C2  6E33               	movwf	dtoa@p^0,c
  1722  0008C4  EF68  F004         	goto	l828
  1723  0008C8                     l826:
  1724                           
  1725                           ; BSR set to: 0
  1726  0008C8  C064  F033         	movff	_prec,dtoa@p
  1727  0008CC  C065  F034         	movff	_prec+1,dtoa@p+1
  1728  0008D0                     l828:
  1729                           
  1730                           ; BSR set to: 0
  1731                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  1732  0008D0  C062  F035         	movff	_width,dtoa@w
  1733  0008D4  C063  F036         	movff	_width+1,dtoa@w+1
  1734  0008D8                     
  1735                           ; BSR set to: 0
  1736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  1737  0008D8  5037               	movf	dtoa@s^0,w,c
  1738  0008DA  1038               	iorwf	(dtoa@s+1)^0,w,c
  1739  0008DC  A4D8               	btfss	status,2,c
  1740  0008DE  EF73  F004         	goto	u831
  1741  0008E2  EF75  F004         	goto	u830
  1742  0008E6                     u831:
  1743  0008E6  EF7C  F004         	goto	l1445
  1744  0008EA                     u830:
  1745  0008EA                     
  1746                           ; BSR set to: 0
  1747  0008EA  A566               	btfss	_flags& (0+255),2,b
  1748  0008EC  EF7A  F004         	goto	u841
  1749  0008F0  EF7C  F004         	goto	u840
  1750  0008F4                     u841:
  1751  0008F4  EF7F  F004         	goto	l1447
  1752  0008F8                     u840:
  1753  0008F8                     l1445:
  1754                           
  1755                           ; BSR set to: 0
  1756                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  1757  0008F8  0635               	decf	dtoa@w^0,f,c
  1758  0008FA  A0D8               	btfss	status,0,c
  1759  0008FC  0636               	decf	(dtoa@w+1)^0,f,c
  1760  0008FE                     l1447:
  1761                           
  1762                           ; BSR set to: 0
  1763                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  1764  0008FE  0E00               	movlw	0
  1765  000900  6E42               	movwf	(dtoa@i+1)^0,c
  1766  000902  0E1F               	movlw	31
  1767  000904  6E41               	movwf	dtoa@i^0,c
  1768  000906                     
  1769                           ; BSR set to: 0
  1770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  1771  000906  0E00               	movlw	0
  1772  000908  6F8A               	movwf	(_dbuf+31)& (0+255),b
  1773                           
  1774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1775  00090A  EF03  F005         	goto	l1461
  1776  00090E                     l1451:
  1777                           
  1778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  1779  00090E  0641               	decf	dtoa@i^0,f,c
  1780  000910  A0D8               	btfss	status,0,c
  1781  000912  0642               	decf	(dtoa@i+1)^0,f,c
  1782  000914                     
  1783                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  1784  000914  0E6B               	movlw	low _dbuf
  1785  000916  2441               	addwf	dtoa@i^0,w,c
  1786  000918  6ED9               	movwf	fsr2l,c
  1787  00091A  0E00               	movlw	high _dbuf
  1788  00091C  2042               	addwfc	(dtoa@i+1)^0,w,c
  1789  00091E  6EDA               	movwf	fsr2h,c
  1790  000920  C039  F002         	movff	dtoa@n,___aomod@dividend
  1791  000924  C03A  F003         	movff	dtoa@n+1,___aomod@dividend+1
  1792  000928  C03B  F004         	movff	dtoa@n+2,___aomod@dividend+2
  1793  00092C  C03C  F005         	movff	dtoa@n+3,___aomod@dividend+3
  1794  000930  C03D  F006         	movff	dtoa@n+4,___aomod@dividend+4
  1795  000934  C03E  F007         	movff	dtoa@n+5,___aomod@dividend+5
  1796  000938  C03F  F008         	movff	dtoa@n+6,___aomod@dividend+6
  1797  00093C  C040  F009         	movff	dtoa@n+7,___aomod@dividend+7
  1798  000940  0E0A               	movlw	10
  1799  000942  6E0A               	movwf	___aomod@divisor^0,c
  1800  000944  0E00               	movlw	0
  1801  000946  6E0B               	movwf	(___aomod@divisor+1)^0,c
  1802  000948  0E00               	movlw	0
  1803  00094A  6E0C               	movwf	(___aomod@divisor+2)^0,c
  1804  00094C  0E00               	movlw	0
  1805  00094E  6E0D               	movwf	(___aomod@divisor+3)^0,c
  1806  000950  0E00               	movlw	0
  1807  000952  6E0E               	movwf	(___aomod@divisor+4)^0,c
  1808  000954  0E00               	movlw	0
  1809  000956  6E0F               	movwf	(___aomod@divisor+5)^0,c
  1810  000958  0E00               	movlw	0
  1811  00095A  6E10               	movwf	(___aomod@divisor+6)^0,c
  1812  00095C  0E00               	movlw	0
  1813  00095E  6E11               	movwf	(___aomod@divisor+7)^0,c
  1814  000960  EC23  F007         	call	___aomod	;wreg free
  1815  000964  C002  F029         	movff	?___aomod,??_dtoa
  1816  000968  C003  F02A         	movff	?___aomod+1,??_dtoa+1
  1817  00096C  C004  F02B         	movff	?___aomod+2,??_dtoa+2
  1818  000970  C005  F02C         	movff	?___aomod+3,??_dtoa+3
  1819  000974  C006  F02D         	movff	?___aomod+4,??_dtoa+4
  1820  000978  C007  F02E         	movff	?___aomod+5,??_dtoa+5
  1821  00097C  C008  F02F         	movff	?___aomod+6,??_dtoa+6
  1822  000980  C009  F030         	movff	?___aomod+7,??_dtoa+7
  1823  000984  C029  F014         	movff	??_dtoa,abs@a
  1824  000988  C02B  F015         	movff	??_dtoa+2,abs@a+1
  1825  00098C  ECB1  F009         	call	_abs	;wreg free
  1826  000990  5014               	movf	?_abs^0,w,c
  1827  000992  0F30               	addlw	48
  1828  000994  6EDF               	movwf	indf2,c
  1829  000996                     
  1830                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  1831  000996  0633               	decf	dtoa@p^0,f,c
  1832  000998  A0D8               	btfss	status,0,c
  1833  00099A  0634               	decf	(dtoa@p+1)^0,f,c
  1834  00099C                     
  1835                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  1836  00099C  0635               	decf	dtoa@w^0,f,c
  1837  00099E  A0D8               	btfss	status,0,c
  1838  0009A0  0636               	decf	(dtoa@w+1)^0,f,c
  1839  0009A2                     
  1840                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  1841  0009A2  C039  F002         	movff	dtoa@n,___aodiv@dividend
  1842  0009A6  C03A  F003         	movff	dtoa@n+1,___aodiv@dividend+1
  1843  0009AA  C03B  F004         	movff	dtoa@n+2,___aodiv@dividend+2
  1844  0009AE  C03C  F005         	movff	dtoa@n+3,___aodiv@dividend+3
  1845  0009B2  C03D  F006         	movff	dtoa@n+4,___aodiv@dividend+4
  1846  0009B6  C03E  F007         	movff	dtoa@n+5,___aodiv@dividend+5
  1847  0009BA  C03F  F008         	movff	dtoa@n+6,___aodiv@dividend+6
  1848  0009BE  C040  F009         	movff	dtoa@n+7,___aodiv@dividend+7
  1849  0009C2  0E0A               	movlw	10
  1850  0009C4  6E0A               	movwf	___aodiv@divisor^0,c
  1851  0009C6  0E00               	movlw	0
  1852  0009C8  6E0B               	movwf	(___aodiv@divisor+1)^0,c
  1853  0009CA  0E00               	movlw	0
  1854  0009CC  6E0C               	movwf	(___aodiv@divisor+2)^0,c
  1855  0009CE  0E00               	movlw	0
  1856  0009D0  6E0D               	movwf	(___aodiv@divisor+3)^0,c
  1857  0009D2  0E00               	movlw	0
  1858  0009D4  6E0E               	movwf	(___aodiv@divisor+4)^0,c
  1859  0009D6  0E00               	movlw	0
  1860  0009D8  6E0F               	movwf	(___aodiv@divisor+5)^0,c
  1861  0009DA  0E00               	movlw	0
  1862  0009DC  6E10               	movwf	(___aodiv@divisor+6)^0,c
  1863  0009DE  0E00               	movlw	0
  1864  0009E0  6E11               	movwf	(___aodiv@divisor+7)^0,c
  1865  0009E2  EC5F  F006         	call	___aodiv	;wreg free
  1866  0009E6  C002  F039         	movff	?___aodiv,dtoa@n
  1867  0009EA  C003  F03A         	movff	?___aodiv+1,dtoa@n+1
  1868  0009EE  C004  F03B         	movff	?___aodiv+2,dtoa@n+2
  1869  0009F2  C005  F03C         	movff	?___aodiv+3,dtoa@n+3
  1870  0009F6  C006  F03D         	movff	?___aodiv+4,dtoa@n+4
  1871  0009FA  C007  F03E         	movff	?___aodiv+5,dtoa@n+5
  1872  0009FE  C008  F03F         	movff	?___aodiv+6,dtoa@n+6
  1873  000A02  C009  F040         	movff	?___aodiv+7,dtoa@n+7
  1874  000A06                     l1461:
  1875                           
  1876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1877  000A06  BE42               	btfsc	(dtoa@i+1)^0,7,c
  1878  000A08  EF0E  F005         	goto	u851
  1879  000A0C  5042               	movf	(dtoa@i+1)^0,w,c
  1880  000A0E  E108               	bnz	u850
  1881  000A10  0441               	decf	dtoa@i^0,w,c
  1882  000A12  A0D8               	btfss	status,0,c
  1883  000A14  EF0E  F005         	goto	u851
  1884  000A18  EF10  F005         	goto	u850
  1885  000A1C                     u851:
  1886  000A1C  EF41  F005         	goto	l1471
  1887  000A20                     u850:
  1888  000A20  5039               	movf	dtoa@n^0,w,c
  1889  000A22  103A               	iorwf	(dtoa@n+1)^0,w,c
  1890  000A24  103B               	iorwf	(dtoa@n+2)^0,w,c
  1891  000A26  103C               	iorwf	(dtoa@n+3)^0,w,c
  1892  000A28  103D               	iorwf	(dtoa@n+4)^0,w,c
  1893  000A2A  103E               	iorwf	(dtoa@n+5)^0,w,c
  1894  000A2C  103F               	iorwf	(dtoa@n+6)^0,w,c
  1895  000A2E  1040               	iorwf	(dtoa@n+7)^0,w,c
  1896  000A30  A4D8               	btfss	status,2,c
  1897  000A32  EF1D  F005         	goto	u861
  1898  000A36  EF1F  F005         	goto	u860
  1899  000A3A                     u861:
  1900  000A3A  EF87  F004         	goto	l1451
  1901  000A3E                     u860:
  1902  000A3E  BE34               	btfsc	(dtoa@p+1)^0,7,c
  1903  000A40  EF2C  F005         	goto	u870
  1904  000A44  5034               	movf	(dtoa@p+1)^0,w,c
  1905  000A46  E106               	bnz	u871
  1906  000A48  0433               	decf	dtoa@p^0,w,c
  1907  000A4A  B0D8               	btfsc	status,0,c
  1908  000A4C  EF2A  F005         	goto	u871
  1909  000A50  EF2C  F005         	goto	u870
  1910  000A54                     u871:
  1911  000A54  EF87  F004         	goto	l1451
  1912  000A58                     u870:
  1913  000A58  BE36               	btfsc	(dtoa@w+1)^0,7,c
  1914  000A5A  EF37  F005         	goto	u881
  1915  000A5E  5036               	movf	(dtoa@w+1)^0,w,c
  1916  000A60  E108               	bnz	u880
  1917  000A62  0435               	decf	dtoa@w^0,w,c
  1918  000A64  A0D8               	btfss	status,0,c
  1919  000A66  EF37  F005         	goto	u881
  1920  000A6A  EF39  F005         	goto	u880
  1921  000A6E                     u881:
  1922  000A6E  EF41  F005         	goto	l1471
  1923  000A72                     u880:
  1924  000A72  0100               	movlb	0	; () banked
  1925  000A74  B366               	btfsc	_flags& (0+255),1,b
  1926  000A76  EF3F  F005         	goto	u891
  1927  000A7A  EF41  F005         	goto	u890
  1928  000A7E                     u891:
  1929  000A7E  EF87  F004         	goto	l1451
  1930  000A82                     u890:
  1931  000A82                     l1471:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  1934  000A82  5037               	movf	dtoa@s^0,w,c
  1935  000A84  1038               	iorwf	(dtoa@s+1)^0,w,c
  1936  000A86  A4D8               	btfss	status,2,c
  1937  000A88  EF48  F005         	goto	u901
  1938  000A8C  EF4A  F005         	goto	u900
  1939  000A90                     u901:
  1940  000A90  EF52  F005         	goto	l1475
  1941  000A94                     u900:
  1942  000A94  0100               	movlb	0	; () banked
  1943  000A96  A566               	btfss	_flags& (0+255),2,b
  1944  000A98  EF50  F005         	goto	u911
  1945  000A9C  EF52  F005         	goto	u910
  1946  000AA0                     u911:
  1947  000AA0  EF70  F005         	goto	l1485
  1948  000AA4                     u910:
  1949  000AA4                     l1475:
  1950                           
  1951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  1952  000AA4  0641               	decf	dtoa@i^0,f,c
  1953  000AA6  A0D8               	btfss	status,0,c
  1954  000AA8  0642               	decf	(dtoa@i+1)^0,f,c
  1955  000AAA                     
  1956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  1957  000AAA  5037               	movf	dtoa@s^0,w,c
  1958  000AAC  1038               	iorwf	(dtoa@s+1)^0,w,c
  1959  000AAE  A4D8               	btfss	status,2,c
  1960  000AB0  EF5C  F005         	goto	u921
  1961  000AB4  EF5E  F005         	goto	u920
  1962  000AB8                     u921:
  1963  000AB8  EF64  F005         	goto	l1481
  1964  000ABC                     u920:
  1965  000ABC  0E00               	movlw	0
  1966  000ABE  6E32               	movwf	(_dtoa$803+1)^0,c
  1967  000AC0  0E2B               	movlw	43
  1968  000AC2  6E31               	movwf	_dtoa$803^0,c
  1969  000AC4  EF68  F005         	goto	l1483
  1970  000AC8                     l1481:
  1971  000AC8  0E00               	movlw	0
  1972  000ACA  6E32               	movwf	(_dtoa$803+1)^0,c
  1973  000ACC  0E2D               	movlw	45
  1974  000ACE  6E31               	movwf	_dtoa$803^0,c
  1975  000AD0                     l1483:
  1976  000AD0  0E6B               	movlw	low _dbuf
  1977  000AD2  2441               	addwf	dtoa@i^0,w,c
  1978  000AD4  6ED9               	movwf	fsr2l,c
  1979  000AD6  0E00               	movlw	high _dbuf
  1980  000AD8  2042               	addwfc	(dtoa@i+1)^0,w,c
  1981  000ADA  6EDA               	movwf	fsr2h,c
  1982  000ADC  C031  FFDF         	movff	_dtoa$803,indf2
  1983  000AE0                     l1485:
  1984                           
  1985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  1986  000AE0  C01F  F014         	movff	dtoa@fp,pad@fp
  1987  000AE4  C020  F015         	movff	dtoa@fp+1,pad@fp+1
  1988  000AE8  0E6B               	movlw	low _dbuf
  1989  000AEA  2441               	addwf	dtoa@i^0,w,c
  1990  000AEC  6E16               	movwf	pad@buf^0,c
  1991  000AEE  0E00               	movlw	high _dbuf
  1992  000AF0  2042               	addwfc	(dtoa@i+1)^0,w,c
  1993  000AF2  6E17               	movwf	(pad@buf+1)^0,c
  1994  000AF4  C035  F018         	movff	dtoa@w,pad@p
  1995  000AF8  C036  F019         	movff	dtoa@w+1,pad@p+1
  1996  000AFC  ECD5  F007         	call	_pad	;wreg free
  1997  000B00  C014  F01F         	movff	?_pad,?_dtoa
  1998  000B04  C015  F020         	movff	?_pad+1,?_dtoa+1
  1999  000B08  0012               	return		;funcret
  2000  000B0A                     __end_of_dtoa:
  2001                           	callstack 0
  2002                           
  2003 ;; *************** function _pad *****************
  2004 ;; Defined at:
  2005 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2006 ;; Parameters:    Size  Location     Type
  2007 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  2008 ;;		 -> NULL(0), 
  2009 ;;  buf             2   21[COMRAM] PTR unsigned char 
  2010 ;;		 -> dbuf(32), 
  2011 ;;  p               2   23[COMRAM] int 
  2012 ;; Auto vars:     Size  Location     Type
  2013 ;;  w               2   28[COMRAM] int 
  2014 ;;  i               2   26[COMRAM] int 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  2   19[COMRAM] int 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2024 ;;      Params:         6       0       0       0       0       0       0       0       0
  2025 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2027 ;;      Totals:        11       0       0       0       0       0       0       0       0
  2028 ;;Total ram usage:       11 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 4
  2031 ;; This function calls:
  2032 ;;		_fputc
  2033 ;;		_fputs
  2034 ;;		_strlen
  2035 ;; This function is called by:
  2036 ;;		_dtoa
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text11
  2041  000FAA                     __ptext11:
  2042                           	callstack 0
  2043  000FAA                     _pad:
  2044                           	callstack 22
  2045  000FAA                     
  2046                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  2047  000FAA  0100               	movlb	0	; () banked
  2048  000FAC  A166               	btfss	_flags& (0+255),0,b
  2049  000FAE  EFDB  F007         	goto	u731
  2050  000FB2  EFDD  F007         	goto	u730
  2051  000FB6                     u731:
  2052  000FB6  EFE7  F007         	goto	l1405
  2053  000FBA                     u730:
  2054  000FBA                     
  2055                           ; BSR set to: 0
  2056                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  2057  000FBA  C016  F00D         	movff	pad@buf,fputs@s
  2058  000FBE  C017  F00E         	movff	pad@buf+1,fputs@s+1
  2059  000FC2  C014  F00F         	movff	pad@fp,fputs@fp
  2060  000FC6  C015  F010         	movff	pad@fp+1,fputs@fp+1
  2061  000FCA  EC8F  F009         	call	_fputs	;wreg free
  2062  000FCE                     l1405:
  2063                           
  2064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  2065  000FCE  BE19               	btfsc	(pad@p+1)^0,7,c
  2066  000FD0  EFEC  F007         	goto	u741
  2067  000FD4  EFEE  F007         	goto	u740
  2068  000FD8                     u741:
  2069  000FD8  EFF4  F007         	goto	l1409
  2070  000FDC                     u740:
  2071  000FDC  C018  F01D         	movff	pad@p,pad@w
  2072  000FE0  C019  F01E         	movff	pad@p+1,pad@w+1
  2073  000FE4  EFF8  F007         	goto	l815
  2074  000FE8                     l1409:
  2075  000FE8  0E00               	movlw	0
  2076  000FEA  6E1E               	movwf	(pad@w+1)^0,c
  2077  000FEC  0E00               	movlw	0
  2078  000FEE  6E1D               	movwf	pad@w^0,c
  2079  000FF0                     l815:
  2080                           
  2081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  2082  000FF0  0E00               	movlw	0
  2083  000FF2  6E1C               	movwf	(pad@i+1)^0,c
  2084  000FF4  0E00               	movlw	0
  2085  000FF6  6E1B               	movwf	pad@i^0,c
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2088  000FF8  EF0A  F008         	goto	l1415
  2089  000FFC                     l1411:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  2092  000FFC  0E00               	movlw	0
  2093  000FFE  6E05               	movwf	(fputc@c+1)^0,c
  2094  001000  0E20               	movlw	32
  2095  001002  6E04               	movwf	fputc@c^0,c
  2096  001004  C014  F006         	movff	pad@fp,fputc@fp
  2097  001008  C015  F007         	movff	pad@fp+1,fputc@fp+1
  2098  00100C  EC89  F008         	call	_fputc	;wreg free
  2099  001010                     
  2100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  2101  001010  4A1B               	infsnz	pad@i^0,f,c
  2102  001012  2A1C               	incf	(pad@i+1)^0,f,c
  2103  001014                     l1415:
  2104                           
  2105                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  2106  001014  501D               	movf	pad@w^0,w,c
  2107  001016  5C1B               	subwf	pad@i^0,w,c
  2108  001018  501C               	movf	(pad@i+1)^0,w,c
  2109  00101A  0A80               	xorlw	128
  2110  00101C  6E1A               	movwf	??_pad^0,c
  2111  00101E  501E               	movf	(pad@w+1)^0,w,c
  2112  001020  0A80               	xorlw	128
  2113  001022  581A               	subwfb	??_pad^0,w,c
  2114  001024  A0D8               	btfss	status,0,c
  2115  001026  EF17  F008         	goto	u751
  2116  00102A  EF19  F008         	goto	u750
  2117  00102E                     u751:
  2118  00102E  EFFE  F007         	goto	l1411
  2119  001032                     u750:
  2120  001032                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  2122  001032  0100               	movlb	0	; () banked
  2123  001034  B166               	btfsc	_flags& (0+255),0,b
  2124  001036  EF1F  F008         	goto	u761
  2125  00103A  EF21  F008         	goto	u760
  2126  00103E                     u761:
  2127  00103E  EF2B  F008         	goto	l1419
  2128  001042                     u760:
  2129  001042                     
  2130                           ; BSR set to: 0
  2131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  2132  001042  C016  F00D         	movff	pad@buf,fputs@s
  2133  001046  C017  F00E         	movff	pad@buf+1,fputs@s+1
  2134  00104A  C014  F00F         	movff	pad@fp,fputs@fp
  2135  00104E  C015  F010         	movff	pad@fp+1,fputs@fp+1
  2136  001052  EC8F  F009         	call	_fputs	;wreg free
  2137  001056                     l1419:
  2138                           
  2139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  2140  001056  C016  F002         	movff	pad@buf,strlen@s
  2141  00105A  C017  F003         	movff	pad@buf+1,strlen@s+1
  2142  00105E  ECD1  F009         	call	_strlen	;wreg free
  2143  001062  501D               	movf	pad@w^0,w,c
  2144  001064  2402               	addwf	?_strlen^0,w,c
  2145  001066  6E14               	movwf	?_pad^0,c
  2146  001068  501E               	movf	(pad@w+1)^0,w,c
  2147  00106A  2003               	addwfc	(?_strlen+1)^0,w,c
  2148  00106C  6E15               	movwf	(?_pad+1)^0,c
  2149  00106E  0012               	return		;funcret
  2150  001070                     __end_of_pad:
  2151                           	callstack 0
  2152                           
  2153 ;; *************** function _strlen *****************
  2154 ;; Defined at:
  2155 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  s               2    1[COMRAM] PTR const unsigned char 
  2158 ;;		 -> dbuf(32), 
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;  a               2    3[COMRAM] PTR const unsigned char 
  2161 ;;		 -> dbuf(32), 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  2    1[COMRAM] unsigned int 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2171 ;;      Params:         2       0       0       0       0       0       0       0       0
  2172 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2173 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2174 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2175 ;;Total ram usage:        4 bytes
  2176 ;; Hardware stack levels used: 1
  2177 ;; Hardware stack levels required when called: 1
  2178 ;; This function calls:
  2179 ;;		Nothing
  2180 ;; This function is called by:
  2181 ;;		_pad
  2182 ;; This function uses a non-reentrant model
  2183 ;;
  2184                           
  2185                           	psect	text12
  2186  0013A2                     __ptext12:
  2187                           	callstack 0
  2188  0013A2                     _strlen:
  2189                           	callstack 24
  2190  0013A2  C002  F004         	movff	strlen@s,strlen@a
  2191  0013A6  C003  F005         	movff	strlen@s+1,strlen@a+1
  2192  0013AA  EFD9  F009         	goto	l1315
  2193  0013AE                     l1313:
  2194  0013AE  4A02               	infsnz	strlen@s^0,f,c
  2195  0013B0  2A03               	incf	(strlen@s+1)^0,f,c
  2196  0013B2                     l1315:
  2197  0013B2  C002  FFD9         	movff	strlen@s,fsr2l
  2198  0013B6  C003  FFDA         	movff	strlen@s+1,fsr2h
  2199  0013BA  50DF               	movf	indf2,w,c
  2200  0013BC  A4D8               	btfss	status,2,c
  2201  0013BE  EFE3  F009         	goto	u591
  2202  0013C2  EFE5  F009         	goto	u590
  2203  0013C6                     u591:
  2204  0013C6  EFD7  F009         	goto	l1313
  2205  0013CA                     u590:
  2206  0013CA  5004               	movf	strlen@a^0,w,c
  2207  0013CC  5C02               	subwf	strlen@s^0,w,c
  2208  0013CE  6E02               	movwf	?_strlen^0,c
  2209  0013D0  5005               	movf	(strlen@a+1)^0,w,c
  2210  0013D2  5803               	subwfb	(strlen@s+1)^0,w,c
  2211  0013D4  6E03               	movwf	(?_strlen+1)^0,c
  2212  0013D6  0012               	return		;funcret
  2213  0013D8                     __end_of_strlen:
  2214                           	callstack 0
  2215                           
  2216 ;; *************** function _fputs *****************
  2217 ;; Defined at:
  2218 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;  s               2   12[COMRAM] PTR const unsigned char 
  2221 ;;		 -> dbuf(32), 
  2222 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  2223 ;;		 -> NULL(0), 
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;  i               2   17[COMRAM] int 
  2226 ;;  c               1   16[COMRAM] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  2   12[COMRAM] int 
  2229 ;; Registers used:
  2230 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2236 ;;      Params:         4       0       0       0       0       0       0       0       0
  2237 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2239 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2240 ;;Total ram usage:        7 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; Hardware stack levels required when called: 3
  2243 ;; This function calls:
  2244 ;;		_fputc
  2245 ;; This function is called by:
  2246 ;;		_pad
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text13
  2251  00131E                     __ptext13:
  2252                           	callstack 0
  2253  00131E                     _fputs:
  2254                           	callstack 22
  2255  00131E  0E00               	movlw	0
  2256  001320  6E13               	movwf	(fputs@i+1)^0,c
  2257  001322  0E00               	movlw	0
  2258  001324  6E12               	movwf	fputs@i^0,c
  2259  001326  EFA0  F009         	goto	l1309
  2260  00132A                     l1305:
  2261  00132A  C011  F004         	movff	fputs@c,fputc@c
  2262  00132E  6A05               	clrf	(fputc@c+1)^0,c
  2263  001330  C00F  F006         	movff	fputs@fp,fputc@fp
  2264  001334  C010  F007         	movff	fputs@fp+1,fputc@fp+1
  2265  001338  EC89  F008         	call	_fputc	;wreg free
  2266  00133C  4A12               	infsnz	fputs@i^0,f,c
  2267  00133E  2A13               	incf	(fputs@i+1)^0,f,c
  2268  001340                     l1309:
  2269  001340  5012               	movf	fputs@i^0,w,c
  2270  001342  240D               	addwf	fputs@s^0,w,c
  2271  001344  6ED9               	movwf	fsr2l,c
  2272  001346  5013               	movf	(fputs@i+1)^0,w,c
  2273  001348  200E               	addwfc	(fputs@s+1)^0,w,c
  2274  00134A  6EDA               	movwf	fsr2h,c
  2275  00134C  50DF               	movf	indf2,w,c
  2276  00134E  6E11               	movwf	fputs@c^0,c
  2277  001350  5011               	movf	fputs@c^0,w,c
  2278  001352  A4D8               	btfss	status,2,c
  2279  001354  EFAE  F009         	goto	u581
  2280  001358  EFB0  F009         	goto	u580
  2281  00135C                     u581:
  2282  00135C  EF95  F009         	goto	l1305
  2283  001360                     u580:
  2284  001360  0012               	return		;funcret
  2285  001362                     __end_of_fputs:
  2286                           	callstack 0
  2287                           
  2288 ;; *************** function _fputc *****************
  2289 ;; Defined at:
  2290 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  c               2    3[COMRAM] int 
  2293 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  2294 ;;		 -> NULL(0), 
  2295 ;; Auto vars:     Size  Location     Type
  2296 ;;		None
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  2    3[COMRAM] int 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2306 ;;      Params:         4       0       0       0       0       0       0       0       0
  2307 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2308 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2309 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2310 ;;Total ram usage:        9 bytes
  2311 ;; Hardware stack levels used: 1
  2312 ;; Hardware stack levels required when called: 2
  2313 ;; This function calls:
  2314 ;;		_putch
  2315 ;; This function is called by:
  2316 ;;		_pad
  2317 ;;		_vfpfcnvrt
  2318 ;;		_fputs
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           
  2322                           	psect	text14
  2323  001112                     __ptext14:
  2324                           	callstack 0
  2325  001112                     _fputc:
  2326                           	callstack 25
  2327  001112  5006               	movf	fputc@fp^0,w,c
  2328  001114  1007               	iorwf	(fputc@fp+1)^0,w,c
  2329  001116  B4D8               	btfsc	status,2,c
  2330  001118  EF90  F008         	goto	u541
  2331  00111C  EF92  F008         	goto	u540
  2332  001120                     u541:
  2333  001120  EF9B  F008         	goto	l1293
  2334  001124                     u540:
  2335  001124  5006               	movf	fputc@fp^0,w,c
  2336  001126  1007               	iorwf	(fputc@fp+1)^0,w,c
  2337  001128  A4D8               	btfss	status,2,c
  2338  00112A  EF99  F008         	goto	u551
  2339  00112E  EF9B  F008         	goto	u550
  2340  001132                     u551:
  2341  001132  EFA0  F008         	goto	l1295
  2342  001136                     u550:
  2343  001136                     l1293:
  2344  001136  5004               	movf	fputc@c^0,w,c
  2345  001138  ECEC  F009         	call	_putch
  2346  00113C  EFD3  F008         	goto	l879
  2347  001140                     l1295:
  2348  001140  EE20 F004          	lfsr	2,4
  2349  001144  5006               	movf	fputc@fp^0,w,c
  2350  001146  26D9               	addwf	fsr2l,f,c
  2351  001148  5007               	movf	(fputc@fp+1)^0,w,c
  2352  00114A  22DA               	addwfc	fsr2h,f,c
  2353  00114C  50DE               	movf	postinc2,w,c
  2354  00114E  10DE               	iorwf	postinc2,w,c
  2355  001150  B4D8               	btfsc	status,2,c
  2356  001152  EFAD  F008         	goto	u561
  2357  001156  EFAF  F008         	goto	u560
  2358  00115A                     u561:
  2359  00115A  EFCA  F008         	goto	l1299
  2360  00115E                     u560:
  2361  00115E  EE20 F004          	lfsr	2,4
  2362  001162  5006               	movf	fputc@fp^0,w,c
  2363  001164  26D9               	addwf	fsr2l,f,c
  2364  001166  5007               	movf	(fputc@fp+1)^0,w,c
  2365  001168  22DA               	addwfc	fsr2h,f,c
  2366  00116A  EE10 F002          	lfsr	1,2
  2367  00116E  5006               	movf	fputc@fp^0,w,c
  2368  001170  26E1               	addwf	fsr1l,f,c
  2369  001172  5007               	movf	(fputc@fp+1)^0,w,c
  2370  001174  22E2               	addwfc	fsr1h,f,c
  2371  001176  50DE               	movf	postinc2,w,c
  2372  001178  5CE6               	subwf	postinc1,w,c
  2373  00117A  50E6               	movf	postinc1,w,c
  2374  00117C  0A80               	xorlw	128
  2375  00117E  6E0C               	movwf	(??_fputc+4)^0,c
  2376  001180  50DE               	movf	postinc2,w,c
  2377  001182  0A80               	xorlw	128
  2378  001184  580C               	subwfb	(??_fputc+4)^0,w,c
  2379  001186  B0D8               	btfsc	status,0,c
  2380  001188  EFC8  F008         	goto	u571
  2381  00118C  EFCA  F008         	goto	u570
  2382  001190                     u571:
  2383  001190  EFD3  F008         	goto	l879
  2384  001194                     u570:
  2385  001194                     l1299:
  2386  001194  EE20 F002          	lfsr	2,2
  2387  001198  5006               	movf	fputc@fp^0,w,c
  2388  00119A  26D9               	addwf	fsr2l,f,c
  2389  00119C  5007               	movf	(fputc@fp+1)^0,w,c
  2390  00119E  22DA               	addwfc	fsr2h,f,c
  2391  0011A0  2ADE               	incf	postinc2,f,c
  2392  0011A2  0E00               	movlw	0
  2393  0011A4  22DD               	addwfc	postdec2,f,c
  2394  0011A6                     l879:
  2395  0011A6  0012               	return		;funcret
  2396  0011A8                     __end_of_fputc:
  2397                           	callstack 0
  2398                           
  2399 ;; *************** function _putch *****************
  2400 ;; Defined at:
  2401 ;;		line 111 in file "main.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;  data            1    wreg     unsigned char 
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  data            1    1[COMRAM] unsigned char 
  2406 ;;  Activa          1    2[COMRAM] unsigned char 
  2407 ;; Return value:  Size  Location     Type
  2408 ;;                  1    wreg      void 
  2409 ;; Registers used:
  2410 ;;		wreg, status,2, status,0
  2411 ;; Tracked objects:
  2412 ;;		On entry : 0/0
  2413 ;;		On exit  : 0/0
  2414 ;;		Unchanged: 0/0
  2415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2416 ;;      Params:         0       0       0       0       0       0       0       0       0
  2417 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2419 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2420 ;;Total ram usage:        2 bytes
  2421 ;; Hardware stack levels used: 1
  2422 ;; Hardware stack levels required when called: 1
  2423 ;; This function calls:
  2424 ;;		Nothing
  2425 ;; This function is called by:
  2426 ;;		_fputc
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text15
  2431  0013D8                     __ptext15:
  2432                           	callstack 0
  2433  0013D8                     _putch:
  2434                           	callstack 25
  2435                           
  2436                           ;incstack = 0
  2437                           ;putch@data stored from wreg
  2438  0013D8  6E02               	movwf	putch@data^0,c
  2439  0013DA                     
  2440                           ;main.c: 112:     char Activa;;main.c: 113:     Activa = data & 0xF0;
  2441  0013DA  5002               	movf	putch@data^0,w,c
  2442  0013DC  0BF0               	andlw	240
  2443  0013DE  6E03               	movwf	putch@Activa^0,c
  2444                           
  2445                           ;main.c: 114:     LATD = Activa | 0x05;
  2446  0013E0  5003               	movf	putch@Activa^0,w,c
  2447  0013E2  0905               	iorlw	5
  2448  0013E4  6E8C               	movwf	140,c	;volatile
  2449  0013E6                     
  2450                           ;main.c: 115:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2451  0013E6  D000               	nop2		;2 cycle nop
  2452                           
  2453                           ;main.c: 116:     LATD = Activa | 0x01;
  2454  0013E8  5003               	movf	putch@Activa^0,w,c
  2455  0013EA  0901               	iorlw	1
  2456  0013EC  6E8C               	movwf	140,c	;volatile
  2457  0013EE                     
  2458                           ;main.c: 117:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2459  0013EE  0E53               	movlw	83
  2460  0013F0                     u1177:
  2461  0013F0  2EE8               	decfsz	wreg,f,c
  2462  0013F2  D7FE               	bra	u1177
  2463  0013F4  F000               	nop	
  2464  0013F6                     
  2465                           ;main.c: 118:     Activa = data << 4;
  2466  0013F6  3802               	swapf	putch@data^0,w,c
  2467  0013F8  0BF0               	andlw	240
  2468  0013FA  6E03               	movwf	putch@Activa^0,c
  2469  0013FC                     
  2470                           ;main.c: 119:     LATD = Activa | 0x05;
  2471  0013FC  5003               	movf	putch@Activa^0,w,c
  2472  0013FE  0905               	iorlw	5
  2473  001400  6E8C               	movwf	140,c	;volatile
  2474  001402                     
  2475                           ;main.c: 120:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2476  001402  D000               	nop2		;2 cycle nop
  2477  001404                     
  2478                           ;main.c: 121:     LATD = Activa | 0x01;
  2479  001404  5003               	movf	putch@Activa^0,w,c
  2480  001406  0901               	iorlw	1
  2481  001408  6E8C               	movwf	140,c	;volatile
  2482  00140A  0012               	return		;funcret
  2483  00140C                     __end_of_putch:
  2484                           	callstack 0
  2485                           
  2486 ;; *************** function _abs *****************
  2487 ;; Defined at:
  2488 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  a               2   19[COMRAM] int 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;		None
  2493 ;; Return value:  Size  Location     Type
  2494 ;;                  2   19[COMRAM] int 
  2495 ;; Registers used:
  2496 ;;		wreg, status,2, status,0
  2497 ;; Tracked objects:
  2498 ;;		On entry : 0/0
  2499 ;;		On exit  : 0/0
  2500 ;;		Unchanged: 0/0
  2501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2502 ;;      Params:         2       0       0       0       0       0       0       0       0
  2503 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2504 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2505 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2506 ;;Total ram usage:        4 bytes
  2507 ;; Hardware stack levels used: 1
  2508 ;; Hardware stack levels required when called: 1
  2509 ;; This function calls:
  2510 ;;		Nothing
  2511 ;; This function is called by:
  2512 ;;		_dtoa
  2513 ;; This function uses a non-reentrant model
  2514 ;;
  2515                           
  2516                           	psect	text16
  2517  001362                     __ptext16:
  2518                           	callstack 0
  2519  001362                     _abs:
  2520                           	callstack 25
  2521  001362  BE15               	btfsc	(abs@a+1)^0,7,c
  2522  001364  EFBE  F009         	goto	u770
  2523  001368  5015               	movf	(abs@a+1)^0,w,c
  2524  00136A  E106               	bnz	u771
  2525  00136C  0414               	decf	abs@a^0,w,c
  2526  00136E  B0D8               	btfsc	status,0,c
  2527  001370  EFBC  F009         	goto	u771
  2528  001374  EFBE  F009         	goto	u770
  2529  001378                     u771:
  2530  001378  EFCC  F009         	goto	l864
  2531  00137C                     u770:
  2532  00137C  C014  F016         	movff	abs@a,??_abs
  2533  001380  C015  F017         	movff	abs@a+1,??_abs+1
  2534  001384  1E16               	comf	??_abs^0,f,c
  2535  001386  1E17               	comf	(??_abs+1)^0,f,c
  2536  001388  4A16               	infsnz	??_abs^0,f,c
  2537  00138A  2A17               	incf	(??_abs+1)^0,f,c
  2538  00138C  C016  F014         	movff	??_abs,?_abs
  2539  001390  C017  F015         	movff	??_abs+1,?_abs+1
  2540  001394  EFD0  F009         	goto	l867
  2541  001398                     l864:
  2542  001398  C014  F014         	movff	abs@a,?_abs
  2543  00139C  C015  F015         	movff	abs@a+1,?_abs+1
  2544  0013A0                     l867:
  2545  0013A0  0012               	return		;funcret
  2546  0013A2                     __end_of_abs:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function ___aomod *****************
  2550 ;; Defined at:
  2551 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  dividend        8    1[COMRAM] long long 
  2554 ;;  divisor         8    9[COMRAM] long long 
  2555 ;; Auto vars:     Size  Location     Type
  2556 ;;  sign            1   18[COMRAM] unsigned char 
  2557 ;;  counter         1   17[COMRAM] unsigned char 
  2558 ;; Return value:  Size  Location     Type
  2559 ;;                  8    1[COMRAM] long long 
  2560 ;; Registers used:
  2561 ;;		wreg, status,2, status,0
  2562 ;; Tracked objects:
  2563 ;;		On entry : 0/0
  2564 ;;		On exit  : 0/0
  2565 ;;		Unchanged: 0/0
  2566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2567 ;;      Params:        16       0       0       0       0       0       0       0       0
  2568 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2570 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2571 ;;Total ram usage:       18 bytes
  2572 ;; Hardware stack levels used: 1
  2573 ;; Hardware stack levels required when called: 1
  2574 ;; This function calls:
  2575 ;;		Nothing
  2576 ;; This function is called by:
  2577 ;;		_dtoa
  2578 ;; This function uses a non-reentrant model
  2579 ;;
  2580                           
  2581                           	psect	text17
  2582  000E46                     __ptext17:
  2583                           	callstack 0
  2584  000E46                     ___aomod:
  2585                           	callstack 25
  2586  000E46  0E00               	movlw	0
  2587  000E48  6E13               	movwf	___aomod@sign^0,c
  2588  000E4A  BE09               	btfsc	(___aomod@dividend+7)^0,7,c
  2589  000E4C  EF2C  F007         	goto	u670
  2590  000E50  EF2A  F007         	goto	u671
  2591  000E54                     u671:
  2592  000E54  EF3E  F007         	goto	l1373
  2593  000E58                     u670:
  2594  000E58  1E09               	comf	(___aomod@dividend+7)^0,f,c
  2595  000E5A  1E08               	comf	(___aomod@dividend+6)^0,f,c
  2596  000E5C  1E07               	comf	(___aomod@dividend+5)^0,f,c
  2597  000E5E  1E06               	comf	(___aomod@dividend+4)^0,f,c
  2598  000E60  1E05               	comf	(___aomod@dividend+3)^0,f,c
  2599  000E62  1E04               	comf	(___aomod@dividend+2)^0,f,c
  2600  000E64  1E03               	comf	(___aomod@dividend+1)^0,f,c
  2601  000E66  6C02               	negf	___aomod@dividend^0,c
  2602  000E68  0E00               	movlw	0
  2603  000E6A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  2604  000E6C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  2605  000E6E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  2606  000E70  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  2607  000E72  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  2608  000E74  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  2609  000E76  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  2610  000E78  0E01               	movlw	1
  2611  000E7A  6E13               	movwf	___aomod@sign^0,c
  2612  000E7C                     l1373:
  2613  000E7C  BE11               	btfsc	(___aomod@divisor+7)^0,7,c
  2614  000E7E  EF45  F007         	goto	u680
  2615  000E82  EF43  F007         	goto	u681
  2616  000E86                     u681:
  2617  000E86  EF55  F007         	goto	l1377
  2618  000E8A                     u680:
  2619  000E8A  1E11               	comf	(___aomod@divisor+7)^0,f,c
  2620  000E8C  1E10               	comf	(___aomod@divisor+6)^0,f,c
  2621  000E8E  1E0F               	comf	(___aomod@divisor+5)^0,f,c
  2622  000E90  1E0E               	comf	(___aomod@divisor+4)^0,f,c
  2623  000E92  1E0D               	comf	(___aomod@divisor+3)^0,f,c
  2624  000E94  1E0C               	comf	(___aomod@divisor+2)^0,f,c
  2625  000E96  1E0B               	comf	(___aomod@divisor+1)^0,f,c
  2626  000E98  6C0A               	negf	___aomod@divisor^0,c
  2627  000E9A  0E00               	movlw	0
  2628  000E9C  220B               	addwfc	(___aomod@divisor+1)^0,f,c
  2629  000E9E  220C               	addwfc	(___aomod@divisor+2)^0,f,c
  2630  000EA0  220D               	addwfc	(___aomod@divisor+3)^0,f,c
  2631  000EA2  220E               	addwfc	(___aomod@divisor+4)^0,f,c
  2632  000EA4  220F               	addwfc	(___aomod@divisor+5)^0,f,c
  2633  000EA6  2210               	addwfc	(___aomod@divisor+6)^0,f,c
  2634  000EA8  2211               	addwfc	(___aomod@divisor+7)^0,f,c
  2635  000EAA                     l1377:
  2636  000EAA  500A               	movf	___aomod@divisor^0,w,c
  2637  000EAC  100B               	iorwf	(___aomod@divisor+1)^0,w,c
  2638  000EAE  100C               	iorwf	(___aomod@divisor+2)^0,w,c
  2639  000EB0  100D               	iorwf	(___aomod@divisor+3)^0,w,c
  2640  000EB2  100E               	iorwf	(___aomod@divisor+4)^0,w,c
  2641  000EB4  100F               	iorwf	(___aomod@divisor+5)^0,w,c
  2642  000EB6  1010               	iorwf	(___aomod@divisor+6)^0,w,c
  2643  000EB8  1011               	iorwf	(___aomod@divisor+7)^0,w,c
  2644  000EBA  B4D8               	btfsc	status,2,c
  2645  000EBC  EF62  F007         	goto	u691
  2646  000EC0  EF64  F007         	goto	u690
  2647  000EC4                     u691:
  2648  000EC4  EFAC  F007         	goto	l1393
  2649  000EC8                     u690:
  2650  000EC8  0E01               	movlw	1
  2651  000ECA  6E12               	movwf	___aomod@counter^0,c
  2652  000ECC  EF72  F007         	goto	l1383
  2653  000ED0                     l1381:
  2654  000ED0  90D8               	bcf	status,0,c
  2655  000ED2  360A               	rlcf	___aomod@divisor^0,f,c
  2656  000ED4  360B               	rlcf	(___aomod@divisor+1)^0,f,c
  2657  000ED6  360C               	rlcf	(___aomod@divisor+2)^0,f,c
  2658  000ED8  360D               	rlcf	(___aomod@divisor+3)^0,f,c
  2659  000EDA  360E               	rlcf	(___aomod@divisor+4)^0,f,c
  2660  000EDC  360F               	rlcf	(___aomod@divisor+5)^0,f,c
  2661  000EDE  3610               	rlcf	(___aomod@divisor+6)^0,f,c
  2662  000EE0  3611               	rlcf	(___aomod@divisor+7)^0,f,c
  2663  000EE2  2A12               	incf	___aomod@counter^0,f,c
  2664  000EE4                     l1383:
  2665  000EE4  AE11               	btfss	(___aomod@divisor+7)^0,7,c
  2666  000EE6  EF77  F007         	goto	u701
  2667  000EEA  EF79  F007         	goto	u700
  2668  000EEE                     u701:
  2669  000EEE  EF68  F007         	goto	l1381
  2670  000EF2                     u700:
  2671  000EF2                     l1385:
  2672  000EF2  500A               	movf	___aomod@divisor^0,w,c
  2673  000EF4  5C02               	subwf	___aomod@dividend^0,w,c
  2674  000EF6  500B               	movf	(___aomod@divisor+1)^0,w,c
  2675  000EF8  5803               	subwfb	(___aomod@dividend+1)^0,w,c
  2676  000EFA  500C               	movf	(___aomod@divisor+2)^0,w,c
  2677  000EFC  5804               	subwfb	(___aomod@dividend+2)^0,w,c
  2678  000EFE  500D               	movf	(___aomod@divisor+3)^0,w,c
  2679  000F00  5805               	subwfb	(___aomod@dividend+3)^0,w,c
  2680  000F02  500E               	movf	(___aomod@divisor+4)^0,w,c
  2681  000F04  5806               	subwfb	(___aomod@dividend+4)^0,w,c
  2682  000F06  500F               	movf	(___aomod@divisor+5)^0,w,c
  2683  000F08  5807               	subwfb	(___aomod@dividend+5)^0,w,c
  2684  000F0A  5010               	movf	(___aomod@divisor+6)^0,w,c
  2685  000F0C  5808               	subwfb	(___aomod@dividend+6)^0,w,c
  2686  000F0E  5011               	movf	(___aomod@divisor+7)^0,w,c
  2687  000F10  5809               	subwfb	(___aomod@dividend+7)^0,w,c
  2688  000F12  A0D8               	btfss	status,0,c
  2689  000F14  EF8E  F007         	goto	u711
  2690  000F18  EF90  F007         	goto	u710
  2691  000F1C                     u711:
  2692  000F1C  EFA0  F007         	goto	l1389
  2693  000F20                     u710:
  2694  000F20  500A               	movf	___aomod@divisor^0,w,c
  2695  000F22  5E02               	subwf	___aomod@dividend^0,f,c
  2696  000F24  500B               	movf	(___aomod@divisor+1)^0,w,c
  2697  000F26  5A03               	subwfb	(___aomod@dividend+1)^0,f,c
  2698  000F28  500C               	movf	(___aomod@divisor+2)^0,w,c
  2699  000F2A  5A04               	subwfb	(___aomod@dividend+2)^0,f,c
  2700  000F2C  500D               	movf	(___aomod@divisor+3)^0,w,c
  2701  000F2E  5A05               	subwfb	(___aomod@dividend+3)^0,f,c
  2702  000F30  500E               	movf	(___aomod@divisor+4)^0,w,c
  2703  000F32  5A06               	subwfb	(___aomod@dividend+4)^0,f,c
  2704  000F34  500F               	movf	(___aomod@divisor+5)^0,w,c
  2705  000F36  5A07               	subwfb	(___aomod@dividend+5)^0,f,c
  2706  000F38  5010               	movf	(___aomod@divisor+6)^0,w,c
  2707  000F3A  5A08               	subwfb	(___aomod@dividend+6)^0,f,c
  2708  000F3C  5011               	movf	(___aomod@divisor+7)^0,w,c
  2709  000F3E  5A09               	subwfb	(___aomod@dividend+7)^0,f,c
  2710  000F40                     l1389:
  2711  000F40  90D8               	bcf	status,0,c
  2712  000F42  3211               	rrcf	(___aomod@divisor+7)^0,f,c
  2713  000F44  3210               	rrcf	(___aomod@divisor+6)^0,f,c
  2714  000F46  320F               	rrcf	(___aomod@divisor+5)^0,f,c
  2715  000F48  320E               	rrcf	(___aomod@divisor+4)^0,f,c
  2716  000F4A  320D               	rrcf	(___aomod@divisor+3)^0,f,c
  2717  000F4C  320C               	rrcf	(___aomod@divisor+2)^0,f,c
  2718  000F4E  320B               	rrcf	(___aomod@divisor+1)^0,f,c
  2719  000F50  320A               	rrcf	___aomod@divisor^0,f,c
  2720  000F52  2E12               	decfsz	___aomod@counter^0,f,c
  2721  000F54  EF79  F007         	goto	l1385
  2722  000F58                     l1393:
  2723  000F58  5013               	movf	___aomod@sign^0,w,c
  2724  000F5A  B4D8               	btfsc	status,2,c
  2725  000F5C  EFB2  F007         	goto	u721
  2726  000F60  EFB4  F007         	goto	u720
  2727  000F64                     u721:
  2728  000F64  EFC4  F007         	goto	l1397
  2729  000F68                     u720:
  2730  000F68  1E09               	comf	(___aomod@dividend+7)^0,f,c
  2731  000F6A  1E08               	comf	(___aomod@dividend+6)^0,f,c
  2732  000F6C  1E07               	comf	(___aomod@dividend+5)^0,f,c
  2733  000F6E  1E06               	comf	(___aomod@dividend+4)^0,f,c
  2734  000F70  1E05               	comf	(___aomod@dividend+3)^0,f,c
  2735  000F72  1E04               	comf	(___aomod@dividend+2)^0,f,c
  2736  000F74  1E03               	comf	(___aomod@dividend+1)^0,f,c
  2737  000F76  6C02               	negf	___aomod@dividend^0,c
  2738  000F78  0E00               	movlw	0
  2739  000F7A  2203               	addwfc	(___aomod@dividend+1)^0,f,c
  2740  000F7C  2204               	addwfc	(___aomod@dividend+2)^0,f,c
  2741  000F7E  2205               	addwfc	(___aomod@dividend+3)^0,f,c
  2742  000F80  2206               	addwfc	(___aomod@dividend+4)^0,f,c
  2743  000F82  2207               	addwfc	(___aomod@dividend+5)^0,f,c
  2744  000F84  2208               	addwfc	(___aomod@dividend+6)^0,f,c
  2745  000F86  2209               	addwfc	(___aomod@dividend+7)^0,f,c
  2746  000F88                     l1397:
  2747  000F88  C002  F002         	movff	___aomod@dividend,?___aomod
  2748  000F8C  C003  F003         	movff	___aomod@dividend+1,?___aomod+1
  2749  000F90  C004  F004         	movff	___aomod@dividend+2,?___aomod+2
  2750  000F94  C005  F005         	movff	___aomod@dividend+3,?___aomod+3
  2751  000F98  C006  F006         	movff	___aomod@dividend+4,?___aomod+4
  2752  000F9C  C007  F007         	movff	___aomod@dividend+5,?___aomod+5
  2753  000FA0  C008  F008         	movff	___aomod@dividend+6,?___aomod+6
  2754  000FA4  C009  F009         	movff	___aomod@dividend+7,?___aomod+7
  2755  000FA8  0012               	return		;funcret
  2756  000FAA                     __end_of___aomod:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function ___aodiv *****************
  2760 ;; Defined at:
  2761 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;  dividend        8    1[COMRAM] long long 
  2764 ;;  divisor         8    9[COMRAM] long long 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  quotient        8   19[COMRAM] long long 
  2767 ;;  sign            1   18[COMRAM] unsigned char 
  2768 ;;  counter         1   17[COMRAM] unsigned char 
  2769 ;; Return value:  Size  Location     Type
  2770 ;;                  8    1[COMRAM] long long 
  2771 ;; Registers used:
  2772 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2773 ;; Tracked objects:
  2774 ;;		On entry : 0/0
  2775 ;;		On exit  : 0/0
  2776 ;;		Unchanged: 0/0
  2777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2778 ;;      Params:        16       0       0       0       0       0       0       0       0
  2779 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2780 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2781 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2782 ;;Total ram usage:       26 bytes
  2783 ;; Hardware stack levels used: 1
  2784 ;; Hardware stack levels required when called: 1
  2785 ;; This function calls:
  2786 ;;		Nothing
  2787 ;; This function is called by:
  2788 ;;		_dtoa
  2789 ;; This function uses a non-reentrant model
  2790 ;;
  2791                           
  2792                           	psect	text18
  2793  000CBE                     __ptext18:
  2794                           	callstack 0
  2795  000CBE                     ___aodiv:
  2796                           	callstack 25
  2797  000CBE  0E00               	movlw	0
  2798  000CC0  6E13               	movwf	___aodiv@sign^0,c
  2799  000CC2  BE11               	btfsc	(___aodiv@divisor+7)^0,7,c
  2800  000CC4  EF68  F006         	goto	u600
  2801  000CC8  EF66  F006         	goto	u601
  2802  000CCC                     u601:
  2803  000CCC  EF7A  F006         	goto	l1329
  2804  000CD0                     u600:
  2805  000CD0  1E11               	comf	(___aodiv@divisor+7)^0,f,c
  2806  000CD2  1E10               	comf	(___aodiv@divisor+6)^0,f,c
  2807  000CD4  1E0F               	comf	(___aodiv@divisor+5)^0,f,c
  2808  000CD6  1E0E               	comf	(___aodiv@divisor+4)^0,f,c
  2809  000CD8  1E0D               	comf	(___aodiv@divisor+3)^0,f,c
  2810  000CDA  1E0C               	comf	(___aodiv@divisor+2)^0,f,c
  2811  000CDC  1E0B               	comf	(___aodiv@divisor+1)^0,f,c
  2812  000CDE  6C0A               	negf	___aodiv@divisor^0,c
  2813  000CE0  0E00               	movlw	0
  2814  000CE2  220B               	addwfc	(___aodiv@divisor+1)^0,f,c
  2815  000CE4  220C               	addwfc	(___aodiv@divisor+2)^0,f,c
  2816  000CE6  220D               	addwfc	(___aodiv@divisor+3)^0,f,c
  2817  000CE8  220E               	addwfc	(___aodiv@divisor+4)^0,f,c
  2818  000CEA  220F               	addwfc	(___aodiv@divisor+5)^0,f,c
  2819  000CEC  2210               	addwfc	(___aodiv@divisor+6)^0,f,c
  2820  000CEE  2211               	addwfc	(___aodiv@divisor+7)^0,f,c
  2821  000CF0  0E01               	movlw	1
  2822  000CF2  6E13               	movwf	___aodiv@sign^0,c
  2823  000CF4                     l1329:
  2824  000CF4  BE09               	btfsc	(___aodiv@dividend+7)^0,7,c
  2825  000CF6  EF81  F006         	goto	u610
  2826  000CFA  EF7F  F006         	goto	u611
  2827  000CFE                     u611:
  2828  000CFE  EF93  F006         	goto	l1335
  2829  000D02                     u610:
  2830  000D02  1E09               	comf	(___aodiv@dividend+7)^0,f,c
  2831  000D04  1E08               	comf	(___aodiv@dividend+6)^0,f,c
  2832  000D06  1E07               	comf	(___aodiv@dividend+5)^0,f,c
  2833  000D08  1E06               	comf	(___aodiv@dividend+4)^0,f,c
  2834  000D0A  1E05               	comf	(___aodiv@dividend+3)^0,f,c
  2835  000D0C  1E04               	comf	(___aodiv@dividend+2)^0,f,c
  2836  000D0E  1E03               	comf	(___aodiv@dividend+1)^0,f,c
  2837  000D10  6C02               	negf	___aodiv@dividend^0,c
  2838  000D12  0E00               	movlw	0
  2839  000D14  2203               	addwfc	(___aodiv@dividend+1)^0,f,c
  2840  000D16  2204               	addwfc	(___aodiv@dividend+2)^0,f,c
  2841  000D18  2205               	addwfc	(___aodiv@dividend+3)^0,f,c
  2842  000D1A  2206               	addwfc	(___aodiv@dividend+4)^0,f,c
  2843  000D1C  2207               	addwfc	(___aodiv@dividend+5)^0,f,c
  2844  000D1E  2208               	addwfc	(___aodiv@dividend+6)^0,f,c
  2845  000D20  2209               	addwfc	(___aodiv@dividend+7)^0,f,c
  2846  000D22  0E01               	movlw	1
  2847  000D24  1A13               	xorwf	___aodiv@sign^0,f,c
  2848  000D26                     l1335:
  2849  000D26  EE20  F014         	lfsr	2,___aodiv@quotient
  2850  000D2A  0E07               	movlw	7
  2851  000D2C                     u621:
  2852  000D2C  6ADE               	clrf	postinc2,c
  2853  000D2E  06E8               	decf	wreg,f,c
  2854  000D30  E2FD               	bc	u621
  2855  000D32  500A               	movf	___aodiv@divisor^0,w,c
  2856  000D34  100B               	iorwf	(___aodiv@divisor+1)^0,w,c
  2857  000D36  100C               	iorwf	(___aodiv@divisor+2)^0,w,c
  2858  000D38  100D               	iorwf	(___aodiv@divisor+3)^0,w,c
  2859  000D3A  100E               	iorwf	(___aodiv@divisor+4)^0,w,c
  2860  000D3C  100F               	iorwf	(___aodiv@divisor+5)^0,w,c
  2861  000D3E  1010               	iorwf	(___aodiv@divisor+6)^0,w,c
  2862  000D40  1011               	iorwf	(___aodiv@divisor+7)^0,w,c
  2863  000D42  B4D8               	btfsc	status,2,c
  2864  000D44  EFA6  F006         	goto	u631
  2865  000D48  EFA8  F006         	goto	u630
  2866  000D4C                     u631:
  2867  000D4C  EFFA  F006         	goto	l1357
  2868  000D50                     u630:
  2869  000D50  0E01               	movlw	1
  2870  000D52  6E12               	movwf	___aodiv@counter^0,c
  2871  000D54  EFB6  F006         	goto	l1343
  2872  000D58                     l1341:
  2873  000D58  90D8               	bcf	status,0,c
  2874  000D5A  360A               	rlcf	___aodiv@divisor^0,f,c
  2875  000D5C  360B               	rlcf	(___aodiv@divisor+1)^0,f,c
  2876  000D5E  360C               	rlcf	(___aodiv@divisor+2)^0,f,c
  2877  000D60  360D               	rlcf	(___aodiv@divisor+3)^0,f,c
  2878  000D62  360E               	rlcf	(___aodiv@divisor+4)^0,f,c
  2879  000D64  360F               	rlcf	(___aodiv@divisor+5)^0,f,c
  2880  000D66  3610               	rlcf	(___aodiv@divisor+6)^0,f,c
  2881  000D68  3611               	rlcf	(___aodiv@divisor+7)^0,f,c
  2882  000D6A  2A12               	incf	___aodiv@counter^0,f,c
  2883  000D6C                     l1343:
  2884  000D6C  AE11               	btfss	(___aodiv@divisor+7)^0,7,c
  2885  000D6E  EFBB  F006         	goto	u641
  2886  000D72  EFBD  F006         	goto	u640
  2887  000D76                     u641:
  2888  000D76  EFAC  F006         	goto	l1341
  2889  000D7A                     u640:
  2890  000D7A                     l1345:
  2891  000D7A  90D8               	bcf	status,0,c
  2892  000D7C  3614               	rlcf	___aodiv@quotient^0,f,c
  2893  000D7E  3615               	rlcf	(___aodiv@quotient+1)^0,f,c
  2894  000D80  3616               	rlcf	(___aodiv@quotient+2)^0,f,c
  2895  000D82  3617               	rlcf	(___aodiv@quotient+3)^0,f,c
  2896  000D84  3618               	rlcf	(___aodiv@quotient+4)^0,f,c
  2897  000D86  3619               	rlcf	(___aodiv@quotient+5)^0,f,c
  2898  000D88  361A               	rlcf	(___aodiv@quotient+6)^0,f,c
  2899  000D8A  361B               	rlcf	(___aodiv@quotient+7)^0,f,c
  2900  000D8C  500A               	movf	___aodiv@divisor^0,w,c
  2901  000D8E  5C02               	subwf	___aodiv@dividend^0,w,c
  2902  000D90  500B               	movf	(___aodiv@divisor+1)^0,w,c
  2903  000D92  5803               	subwfb	(___aodiv@dividend+1)^0,w,c
  2904  000D94  500C               	movf	(___aodiv@divisor+2)^0,w,c
  2905  000D96  5804               	subwfb	(___aodiv@dividend+2)^0,w,c
  2906  000D98  500D               	movf	(___aodiv@divisor+3)^0,w,c
  2907  000D9A  5805               	subwfb	(___aodiv@dividend+3)^0,w,c
  2908  000D9C  500E               	movf	(___aodiv@divisor+4)^0,w,c
  2909  000D9E  5806               	subwfb	(___aodiv@dividend+4)^0,w,c
  2910  000DA0  500F               	movf	(___aodiv@divisor+5)^0,w,c
  2911  000DA2  5807               	subwfb	(___aodiv@dividend+5)^0,w,c
  2912  000DA4  5010               	movf	(___aodiv@divisor+6)^0,w,c
  2913  000DA6  5808               	subwfb	(___aodiv@dividend+6)^0,w,c
  2914  000DA8  5011               	movf	(___aodiv@divisor+7)^0,w,c
  2915  000DAA  5809               	subwfb	(___aodiv@dividend+7)^0,w,c
  2916  000DAC  A0D8               	btfss	status,0,c
  2917  000DAE  EFDB  F006         	goto	u651
  2918  000DB2  EFDD  F006         	goto	u650
  2919  000DB6                     u651:
  2920  000DB6  EFEE  F006         	goto	l1353
  2921  000DBA                     u650:
  2922  000DBA  500A               	movf	___aodiv@divisor^0,w,c
  2923  000DBC  5E02               	subwf	___aodiv@dividend^0,f,c
  2924  000DBE  500B               	movf	(___aodiv@divisor+1)^0,w,c
  2925  000DC0  5A03               	subwfb	(___aodiv@dividend+1)^0,f,c
  2926  000DC2  500C               	movf	(___aodiv@divisor+2)^0,w,c
  2927  000DC4  5A04               	subwfb	(___aodiv@dividend+2)^0,f,c
  2928  000DC6  500D               	movf	(___aodiv@divisor+3)^0,w,c
  2929  000DC8  5A05               	subwfb	(___aodiv@dividend+3)^0,f,c
  2930  000DCA  500E               	movf	(___aodiv@divisor+4)^0,w,c
  2931  000DCC  5A06               	subwfb	(___aodiv@dividend+4)^0,f,c
  2932  000DCE  500F               	movf	(___aodiv@divisor+5)^0,w,c
  2933  000DD0  5A07               	subwfb	(___aodiv@dividend+5)^0,f,c
  2934  000DD2  5010               	movf	(___aodiv@divisor+6)^0,w,c
  2935  000DD4  5A08               	subwfb	(___aodiv@dividend+6)^0,f,c
  2936  000DD6  5011               	movf	(___aodiv@divisor+7)^0,w,c
  2937  000DD8  5A09               	subwfb	(___aodiv@dividend+7)^0,f,c
  2938  000DDA  8014               	bsf	___aodiv@quotient^0,0,c
  2939  000DDC                     l1353:
  2940  000DDC  90D8               	bcf	status,0,c
  2941  000DDE  3211               	rrcf	(___aodiv@divisor+7)^0,f,c
  2942  000DE0  3210               	rrcf	(___aodiv@divisor+6)^0,f,c
  2943  000DE2  320F               	rrcf	(___aodiv@divisor+5)^0,f,c
  2944  000DE4  320E               	rrcf	(___aodiv@divisor+4)^0,f,c
  2945  000DE6  320D               	rrcf	(___aodiv@divisor+3)^0,f,c
  2946  000DE8  320C               	rrcf	(___aodiv@divisor+2)^0,f,c
  2947  000DEA  320B               	rrcf	(___aodiv@divisor+1)^0,f,c
  2948  000DEC  320A               	rrcf	___aodiv@divisor^0,f,c
  2949  000DEE  2E12               	decfsz	___aodiv@counter^0,f,c
  2950  000DF0  EFBD  F006         	goto	l1345
  2951  000DF4                     l1357:
  2952  000DF4  5013               	movf	___aodiv@sign^0,w,c
  2953  000DF6  B4D8               	btfsc	status,2,c
  2954  000DF8  EF00  F007         	goto	u661
  2955  000DFC  EF02  F007         	goto	u660
  2956  000E00                     u661:
  2957  000E00  EF12  F007         	goto	l1361
  2958  000E04                     u660:
  2959  000E04  1E1B               	comf	(___aodiv@quotient+7)^0,f,c
  2960  000E06  1E1A               	comf	(___aodiv@quotient+6)^0,f,c
  2961  000E08  1E19               	comf	(___aodiv@quotient+5)^0,f,c
  2962  000E0A  1E18               	comf	(___aodiv@quotient+4)^0,f,c
  2963  000E0C  1E17               	comf	(___aodiv@quotient+3)^0,f,c
  2964  000E0E  1E16               	comf	(___aodiv@quotient+2)^0,f,c
  2965  000E10  1E15               	comf	(___aodiv@quotient+1)^0,f,c
  2966  000E12  6C14               	negf	___aodiv@quotient^0,c
  2967  000E14  0E00               	movlw	0
  2968  000E16  2215               	addwfc	(___aodiv@quotient+1)^0,f,c
  2969  000E18  2216               	addwfc	(___aodiv@quotient+2)^0,f,c
  2970  000E1A  2217               	addwfc	(___aodiv@quotient+3)^0,f,c
  2971  000E1C  2218               	addwfc	(___aodiv@quotient+4)^0,f,c
  2972  000E1E  2219               	addwfc	(___aodiv@quotient+5)^0,f,c
  2973  000E20  221A               	addwfc	(___aodiv@quotient+6)^0,f,c
  2974  000E22  221B               	addwfc	(___aodiv@quotient+7)^0,f,c
  2975  000E24                     l1361:
  2976  000E24  C014  F002         	movff	___aodiv@quotient,?___aodiv
  2977  000E28  C015  F003         	movff	___aodiv@quotient+1,?___aodiv+1
  2978  000E2C  C016  F004         	movff	___aodiv@quotient+2,?___aodiv+2
  2979  000E30  C017  F005         	movff	___aodiv@quotient+3,?___aodiv+3
  2980  000E34  C018  F006         	movff	___aodiv@quotient+4,?___aodiv+4
  2981  000E38  C019  F007         	movff	___aodiv@quotient+5,?___aodiv+5
  2982  000E3C  C01A  F008         	movff	___aodiv@quotient+6,?___aodiv+6
  2983  000E40  C01B  F009         	movff	___aodiv@quotient+7,?___aodiv+7
  2984  000E44  0012               	return		;funcret
  2985  000E46                     __end_of___aodiv:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _presionaBoton *****************
  2989 ;; Defined at:
  2990 ;;		line 50 in file "main.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3006 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3007 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3008 ;;Total ram usage:        1 bytes
  3009 ;; Hardware stack levels used: 1
  3010 ;; This function calls:
  3011 ;;		Nothing
  3012 ;; This function is called by:
  3013 ;;		Interrupt level 2
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	intcode
  3018  000008                     __pintcode:
  3019                           	callstack 0
  3020  000008                     _presionaBoton:
  3021                           	callstack 20
  3022                           
  3023                           ;incstack = 0
  3024  000008  825E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3025  00000A                     
  3026                           ;main.c: 51:     if (corriente < 800) {
  3027  00000A  0100               	movlb	0	; () banked
  3028  00000C  BF69               	btfsc	(_corriente+1)& (0+255),7,b
  3029  00000E  EF14  F000         	goto	i2u103_40
  3030  000012  0E20               	movlw	32
  3031  000014  5D68               	subwf	_corriente& (0+255),w,b
  3032  000016  0E03               	movlw	3
  3033  000018  5969               	subwfb	(_corriente+1)& (0+255),w,b
  3034  00001A  B0D8               	btfsc	status,0,c
  3035  00001C  EF12  F000         	goto	i2u103_41
  3036  000020  EF14  F000         	goto	i2u103_40
  3037  000024                     i2u103_41:
  3038  000024  EF41  F000         	goto	i2l1653
  3039  000028                     i2u103_40:
  3040  000028                     
  3041                           ; BSR set to: 0
  3042                           ;main.c: 52:         if (direccion == 2 && enProceso) {
  3043  000028  0E02               	movlw	2
  3044  00002A  185D               	xorwf	_direccion^0,w,c
  3045  00002C  A4D8               	btfss	status,2,c
  3046  00002E  EF1B  F000         	goto	i2u104_41
  3047  000032  EF1D  F000         	goto	i2u104_40
  3048  000036                     i2u104_41:
  3049  000036  EF34  F000         	goto	i2l1647
  3050  00003A                     i2u104_40:
  3051  00003A                     
  3052                           ; BSR set to: 0
  3053  00003A  516A               	movf	_enProceso& (0+255),w,b
  3054  00003C  B4D8               	btfsc	status,2,c
  3055  00003E  EF23  F000         	goto	i2u105_41
  3056  000042  EF25  F000         	goto	i2u105_40
  3057  000046                     i2u105_41:
  3058  000046  EF34  F000         	goto	i2l1647
  3059  00004A                     i2u105_40:
  3060  00004A                     
  3061                           ; BSR set to: 0
  3062                           ;main.c: 53:             direccion = 1;
  3063  00004A  0E01               	movlw	1
  3064  00004C  6E5D               	movwf	_direccion^0,c
  3065                           
  3066                           ;main.c: 54:             LATE = 0;
  3067  00004E  0E00               	movlw	0
  3068  000050  6E8D               	movwf	141,c	;volatile
  3069  000052                     
  3070                           ; BSR set to: 0
  3071                           ;main.c: 55:             _delay((unsigned long)((10)*(1000000/4000.0)));
  3072  000052  0E04               	movlw	4
  3073  000054  6E01               	movwf	??_presionaBoton^0,c
  3074  000056  0E3E               	movlw	62
  3075  000058                     i2u118_47:
  3076  000058  2EE8               	decfsz	wreg,f,c
  3077  00005A  D7FE               	bra	i2u118_47
  3078  00005C  2E01               	decfsz	??_presionaBoton^0,f,c
  3079  00005E  D7FC               	bra	i2u118_47
  3080  000060                     i2l1645:
  3081                           
  3082                           ;main.c: 56:             LATE = direccion;
  3083  000060  C05D  FF8D         	movff	_direccion,3981	;volatile
  3084                           
  3085                           ;main.c: 57:         } else if (PORTE) {
  3086  000064  EF3E  F000         	goto	i2l1651
  3087  000068                     i2l1647:
  3088                           
  3089                           ; BSR set to: 0
  3090  000068  5084               	movf	132,w,c	;volatile
  3091  00006A  B4D8               	btfsc	status,2,c
  3092  00006C  EF3A  F000         	goto	i2u106_41
  3093  000070  EF3C  F000         	goto	i2u106_40
  3094  000074                     i2u106_41:
  3095  000074  EF30  F000         	goto	i2l1645
  3096  000078                     i2u106_40:
  3097  000078                     
  3098                           ; BSR set to: 0
  3099                           ;main.c: 58:             LATE = 0;
  3100  000078  0E00               	movlw	0
  3101  00007A  6E8D               	movwf	141,c	;volatile
  3102  00007C                     i2l1651:
  3103                           
  3104                           ;main.c: 62:         enProceso = 1;
  3105  00007C  0E01               	movlw	1
  3106  00007E  0100               	movlb	0	; () banked
  3107  000080  6F6A               	movwf	_enProceso& (0+255),b
  3108  000082                     i2l1653:
  3109                           
  3110                           ; BSR set to: 0
  3111                           ;main.c: 64:     INTCONbits.INT0IF = 0;
  3112  000082  92F2               	bcf	242,1,c	;volatile
  3113  000084                     
  3114                           ; BSR set to: 0
  3115  000084  925E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3116  000086  0011               	retfie		f
  3117  000088                     __end_of_presionaBoton:
  3118                           	callstack 0
  3119                           
  3120                           	psect	rparam
  3121  0000                     
  3122                           	psect	temp
  3123  00005E                     btemp:
  3124                           	callstack 0
  3125  00005E                     	ds	1
  3126  0000                     int$flags	set	btemp
  3127  0000                     wtemp8	set	btemp+1
  3128  0000                     ttemp5	set	btemp+1
  3129  0000                     ttemp6	set	btemp+4
  3130  0000                     ttemp7	set	btemp+8
  3131                           
  3132                           	psect	idloc
  3133                           
  3134                           ;Config register IDLOC0 @ 0x200000
  3135                           ;	unspecified, using default values
  3136  200000                     	org	2097152
  3137  200000  FF                 	db	255
  3138                           
  3139                           ;Config register IDLOC1 @ 0x200001
  3140                           ;	unspecified, using default values
  3141  200001                     	org	2097153
  3142  200001  FF                 	db	255
  3143                           
  3144                           ;Config register IDLOC2 @ 0x200002
  3145                           ;	unspecified, using default values
  3146  200002                     	org	2097154
  3147  200002  FF                 	db	255
  3148                           
  3149                           ;Config register IDLOC3 @ 0x200003
  3150                           ;	unspecified, using default values
  3151  200003                     	org	2097155
  3152  200003  FF                 	db	255
  3153                           
  3154                           ;Config register IDLOC4 @ 0x200004
  3155                           ;	unspecified, using default values
  3156  200004                     	org	2097156
  3157  200004  FF                 	db	255
  3158                           
  3159                           ;Config register IDLOC5 @ 0x200005
  3160                           ;	unspecified, using default values
  3161  200005                     	org	2097157
  3162  200005  FF                 	db	255
  3163                           
  3164                           ;Config register IDLOC6 @ 0x200006
  3165                           ;	unspecified, using default values
  3166  200006                     	org	2097158
  3167  200006  FF                 	db	255
  3168                           
  3169                           ;Config register IDLOC7 @ 0x200007
  3170                           ;	unspecified, using default values
  3171  200007                     	org	2097159
  3172  200007  FF                 	db	255
  3173                           
  3174                           	psect	config
  3175                           
  3176                           ;Config register CONFIG1L @ 0x300000
  3177                           ;	unspecified, using default values
  3178                           ;	PLL Selection
  3179                           ;	PLLSEL = 0x0, unprogrammed default
  3180                           ;	PLL Enable Configuration bit
  3181                           ;	CFGPLLEN = 0x0, unprogrammed default
  3182                           ;	CPU System Clock Postscaler
  3183                           ;	CPUDIV = 0x0, unprogrammed default
  3184                           ;	Low Speed USB mode with 48 MHz system clock
  3185                           ;	LS48MHZ = 0x0, unprogrammed default
  3186  300000                     	org	3145728
  3187  300000  00                 	db	0
  3188                           
  3189                           ;Config register CONFIG1H @ 0x300001
  3190                           ;	Oscillator Selection
  3191                           ;	FOSC = INTOSCIO, Internal oscillator
  3192                           ;	Primary Oscillator Shutdown
  3193                           ;	PCLKEN = 0x1, unprogrammed default
  3194                           ;	Fail-Safe Clock Monitor
  3195                           ;	FCMEN = 0x0, unprogrammed default
  3196                           ;	Internal/External Oscillator Switchover
  3197                           ;	IESO = 0x0, unprogrammed default
  3198  300001                     	org	3145729
  3199  300001  28                 	db	40
  3200                           
  3201                           ;Config register CONFIG2L @ 0x300002
  3202                           ;	unspecified, using default values
  3203                           ;	Power-up Timer Enable
  3204                           ;	nPWRTEN = 0x1, unprogrammed default
  3205                           ;	Brown-out Reset Enable
  3206                           ;	BOREN = 0x3, unprogrammed default
  3207                           ;	Brown-out Reset Voltage
  3208                           ;	BORV = 0x3, unprogrammed default
  3209                           ;	Low-Power Brown-out Reset
  3210                           ;	nLPBOR = 0x1, unprogrammed default
  3211  300002                     	org	3145730
  3212  300002  5F                 	db	95
  3213                           
  3214                           ;Config register CONFIG2H @ 0x300003
  3215                           ;	Watchdog Timer Enable bits
  3216                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  3217                           ;	Watchdog Timer Postscaler
  3218                           ;	WDTPS = 0xF, unprogrammed default
  3219  300003                     	org	3145731
  3220  300003  3C                 	db	60
  3221                           
  3222                           ; Padding undefined space
  3223  300004                     	org	3145732
  3224  300004  FF                 	db	255
  3225                           
  3226                           ;Config register CONFIG3H @ 0x300005
  3227                           ;	CCP2 MUX bit
  3228                           ;	CCP2MX = 0x1, unprogrammed default
  3229                           ;	PORTB A/D Enable bit
  3230                           ;	PBADEN = 0x1, unprogrammed default
  3231                           ;	Timer3 Clock Input MUX bit
  3232                           ;	T3CMX = 0x1, unprogrammed default
  3233                           ;	SDO Output MUX bit
  3234                           ;	SDOMX = 0x1, unprogrammed default
  3235                           ;	Master Clear Reset Pin Enable
  3236                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  3237  300005                     	org	3145733
  3238  300005  D3                 	db	211
  3239                           
  3240                           ;Config register CONFIG4L @ 0x300006
  3241                           ;	Stack Full/Underflow Reset
  3242                           ;	STVREN = 0x1, unprogrammed default
  3243                           ;	Single-Supply ICSP Enable bit
  3244                           ;	LVP = OFF, Single-Supply ICSP disabled
  3245                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  3246                           ;	ICPRT = OFF, ICPORT disabled
  3247                           ;	Extended Instruction Set Enable bit
  3248                           ;	XINST = 0x0, unprogrammed default
  3249                           ;	Background Debugger Enable bit
  3250                           ;	DEBUG = 0x1, unprogrammed default
  3251  300006                     	org	3145734
  3252  300006  81                 	db	129
  3253                           
  3254                           ; Padding undefined space
  3255  300007                     	org	3145735
  3256  300007  FF                 	db	255
  3257                           
  3258                           ;Config register CONFIG5L @ 0x300008
  3259                           ;	unspecified, using default values
  3260                           ;	Block 0 Code Protect
  3261                           ;	CP0 = 0x1, unprogrammed default
  3262                           ;	Block 1 Code Protect
  3263                           ;	CP1 = 0x1, unprogrammed default
  3264                           ;	Block 2 Code Protect
  3265                           ;	CP2 = 0x1, unprogrammed default
  3266                           ;	Block 3 Code Protect
  3267                           ;	CP3 = 0x1, unprogrammed default
  3268  300008                     	org	3145736
  3269  300008  0F                 	db	15
  3270                           
  3271                           ;Config register CONFIG5H @ 0x300009
  3272                           ;	unspecified, using default values
  3273                           ;	Boot Block Code Protect
  3274                           ;	CPB = 0x1, unprogrammed default
  3275                           ;	Data EEPROM Code Protect
  3276                           ;	CPD = 0x1, unprogrammed default
  3277  300009                     	org	3145737
  3278  300009  C0                 	db	192
  3279                           
  3280                           ;Config register CONFIG6L @ 0x30000A
  3281                           ;	unspecified, using default values
  3282                           ;	Block 0 Write Protect
  3283                           ;	WRT0 = 0x1, unprogrammed default
  3284                           ;	Block 1 Write Protect
  3285                           ;	WRT1 = 0x1, unprogrammed default
  3286                           ;	Block 2 Write Protect
  3287                           ;	WRT2 = 0x1, unprogrammed default
  3288                           ;	Block 3 Write Protect
  3289                           ;	WRT3 = 0x1, unprogrammed default
  3290  30000A                     	org	3145738
  3291  30000A  0F                 	db	15
  3292                           
  3293                           ;Config register CONFIG6H @ 0x30000B
  3294                           ;	unspecified, using default values
  3295                           ;	Configuration Registers Write Protect
  3296                           ;	WRTC = 0x1, unprogrammed default
  3297                           ;	Boot Block Write Protect
  3298                           ;	WRTB = 0x1, unprogrammed default
  3299                           ;	Data EEPROM Write Protect
  3300                           ;	WRTD = 0x1, unprogrammed default
  3301  30000B                     	org	3145739
  3302  30000B  E0                 	db	224
  3303                           
  3304                           ;Config register CONFIG7L @ 0x30000C
  3305                           ;	unspecified, using default values
  3306                           ;	Block 0 Table Read Protect
  3307                           ;	EBTR0 = 0x1, unprogrammed default
  3308                           ;	Block 1 Table Read Protect
  3309                           ;	EBTR1 = 0x1, unprogrammed default
  3310                           ;	Block 2 Table Read Protect
  3311                           ;	EBTR2 = 0x1, unprogrammed default
  3312                           ;	Block 3 Table Read Protect
  3313                           ;	EBTR3 = 0x1, unprogrammed default
  3314  30000C                     	org	3145740
  3315  30000C  0F                 	db	15
  3316                           
  3317                           ;Config register CONFIG7H @ 0x30000D
  3318                           ;	unspecified, using default values
  3319                           ;	Boot Block Table Read Protect
  3320                           ;	EBTRB = 0x1, unprogrammed default
  3321  30000D                     	org	3145741
  3322  30000D  40                 	db	64
  3323                           tosu	equ	0xFFF
  3324                           tosh	equ	0xFFE
  3325                           tosl	equ	0xFFD
  3326                           stkptr	equ	0xFFC
  3327                           pclatu	equ	0xFFB
  3328                           pclath	equ	0xFFA
  3329                           pcl	equ	0xFF9
  3330                           tblptru	equ	0xFF8
  3331                           tblptrh	equ	0xFF7
  3332                           tblptrl	equ	0xFF6
  3333                           tablat	equ	0xFF5
  3334                           prodh	equ	0xFF4
  3335                           prodl	equ	0xFF3
  3336                           indf0	equ	0xFEF
  3337                           postinc0	equ	0xFEE
  3338                           postdec0	equ	0xFED
  3339                           preinc0	equ	0xFEC
  3340                           plusw0	equ	0xFEB
  3341                           fsr0h	equ	0xFEA
  3342                           fsr0l	equ	0xFE9
  3343                           wreg	equ	0xFE8
  3344                           indf1	equ	0xFE7
  3345                           postinc1	equ	0xFE6
  3346                           postdec1	equ	0xFE5
  3347                           preinc1	equ	0xFE4
  3348                           plusw1	equ	0xFE3
  3349                           fsr1h	equ	0xFE2
  3350                           fsr1l	equ	0xFE1
  3351                           bsr	equ	0xFE0
  3352                           indf2	equ	0xFDF
  3353                           postinc2	equ	0xFDE
  3354                           postdec2	equ	0xFDD
  3355                           preinc2	equ	0xFDC
  3356                           plusw2	equ	0xFDB
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8

Data Sizes:
    Strings     38
    Constant    0
    Data        3
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     92      93
    BANK0           160      5      50
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S739_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[8]), STR_2(CODE[13]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[8]), STR_2(CODE[13]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[8]), STR_2(CODE[13]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _inicializaLCD->_putcm
    _cerrar->_printf
    _limpiaLCD->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod

Critical Paths under _presionaBoton in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _cerrar->_printf
    _limpiaLCD->_printf

Critical Paths under _presionaBoton in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _presionaBoton in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _presionaBoton in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _presionaBoton in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _presionaBoton in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _presionaBoton in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _presionaBoton in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _presionaBoton in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   20537
                                              4 BANK0      1     1      0
                             _cerrar
                      _configuracion
                         _conversion
                      _inicializaLCD
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _inicializaLCD                                        1     1      0     134
                                              3 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _conversion                                           2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _cerrar                                               0     0      0   13602
                          _limpiaLCD
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (2) _limpiaLCD                                            0     0      0    6801
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _putcm                                                2     2      0     134
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6667
                                             90 COMRAM     2     2      0
                                              0 BANK0      4     0      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6309
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5955
                                             66 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4494
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2845
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1303
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     902
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                2     2      0     134
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _presionaBoton                                       1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cerrar
     _limpiaLCD
       _printf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                 _strlen
             _fputc
       _putcm
     _printf
     _putcm
   _configuracion
   _conversion
   _inicializaLCD
     _putcm
   _printf
   _putcm

 _presionaBoton (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      32       5       31.2%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5C      5D       1       98.9%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8F       6        0.0%
DATA                 0      0      8F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Oct 05 14:38:15 2021

                     l81 1466                       l84 146A                       l94 110C  
                     l95 1110                       l87 148C                       l98 140A  
         ?_configuracion 0001                      l101 143A                      l104 1272  
                    l107 14CE                      l224 0E44                      l237 0FA8  
                    l820 106E                      l815 0FF0                      l818 1032  
                    l826 08C8                      l828 08D0                      l860 12D4  
                    l853 0CBC                      l846 0B08                      l864 1398  
                    l867 13A0                      l859 12CC                      l788 14B2  
                    l893 13D6                      l879 11A6                      l887 1360  
                    u600 0CD0                      u601 0CCC                      u610 0D02  
                    u611 0CFE                      u700 0EF2                      u540 1124  
                    u621 0D2C                      u701 0EEE                      u541 1120  
                    u630 0D50                      u710 0F20                      u550 1136  
                    u631 0D4C                      u711 0F1C                      u551 1132  
                    u640 0D7A                      u720 0F68                      u560 115E  
                    u800 0870                      u641 0D76                      u721 0F64  
                    u561 115A                      u801 086C                      u650 0DBA  
                    u570 1194                      u730 0FBA                      u810 08A0  
                    u651 0DB6                      u571 1190                      u731 0FB6  
                    u811 089C                      u660 0E04                      u580 1360  
                    u740 0FDC                      u900 0A94                      u820 08BC  
                    u661 0E00                      u581 135C                      u741 0FD8  
                    u901 0A90                      u821 08B8                      u670 0E58  
                    u590 13CA                      u750 1032                      u910 0AA4  
                    u830 08EA                      u671 0E54                      u591 13C6  
                    u751 102E                      u911 0AA0                      u831 08E6  
                    u680 0E8A                      u760 1042                      u920 0ABC  
                    u840 08F8                      u681 0E86                      u761 103E  
                    u921 0AB8                      u841 08F4                      u690 0EC8  
                    u770 137C                      u850 0A20                      u930 0B2E  
                    u691 0EC4                      u771 1378                      u851 0A1C  
                    u931 0B2A                      u860 0A3E                      u780 0858  
                    u940 0B76                      u861 0A3A                      u781 0852  
                    u941 0B72                      u870 0A58                      u790 085A  
                    u950 0B9A                      u871 0A54                      u951 0B96  
                    u880 0A72                      u960 0C3E                      u881 0A6E  
                    u961 0C3A                      u890 0A82                      u970 12CC  
                    u891 0A7E                      u971 12C8                      u980 1478  
                    u981 1474                      u990 108E                      u991 108A  
                    _abs 1362                      _pad 0FAA                      wreg 000FE8  
                   ?_abs 0014                     l1303 131E                     l1311 13A2  
                   l1321 0CBE                     l1305 132A                     l1313 13AE  
                   l1401 0FAA                     l1331 0D02                     l1323 0CC2  
                   l1307 133C                     l1315 13B2                     l1411 0FFC  
                   l1403 0FBA                     l1341 0D58                     l1333 0D22  
                   l1325 0CD0                     l1309 1340                     l1317 13CA  
                   l1413 1010                     l1405 0FCE                     l1501 0B9A  
                   l1351 0DDA                     l1343 0D6C                     l1335 0D26  
                   l1327 0CF0                     l1423 1362                     l1415 1014  
                   l1407 0FDC                     l1431 0870                     l1511 0C4C  
                   l1503 0BE2                     l1361 0E24                     l1353 0DDC  
                   l1345 0D7A                     l1337 0D32                     l1329 0CF4  
                   l1425 137C                     l1281 13F6                     l1417 1042  
                   l1409 0FE8                     l1441 08D8                     l1433 0890  
                   l1513 0C60                     l1601 10B4                     l1355 0DEE  
                   l1347 0D8C                     l1339 0D50                     l1371 0E78  
                   l1283 13FC                     l1275 13DA                     l1291 1124  
                   l1419 1056                     l1451 090E                     l1443 08EA  
                   l1435 08A0                     l1427 0828                     l1507 0C1A  
                   l1523 0C86                     l1531 1274                     l1611 10EA  
                   l1603 10D0                     l1349 0DBA                     l1357 0DF4  
                   l1381 0ED0                     l1373 0E7C                     l1365 0E46  
                   l1285 1402                     l1277 13E6                     l1293 1136  
                   l1453 0914                     l1461 0A06                     l1445 08F8  
                   l1437 08A2                     l1429 0848                     l1525 0CAA  
                   l1509 0C3E                     l1517 0C6C                     l1533 127C  
                   l1541 1496                     l1613 1100                     l1605 10D8  
                   l1359 0E04                     l1391 0F52                     l1383 0EE4  
                   l1375 0E8A                     l1367 0E4A                     l1287 1404  
                   l1279 13EE                     l1295 1140                     l1463 0A20  
                   l1471 0A82                     l1455 0996                     l1447 08FE  
                   l1439 08BC                     l1519 0C7A                     l1535 128A  
                   l1551 1420                     l1607 10E0                     l1615 1108  
                   l1385 0EF2                     l1393 0F58                     l1377 0EAA  
                   l1369 0E58                     l1297 115E                     l1289 1112  
                   l1481 0AC8                     l1473 0A94                     l1465 0A3E  
                   l1457 099C                     l1449 0906                     l1537 12B0  
                   l1553 1428                     l1545 140E                     l1561 14B4  
                   l1609 10E4                     l1395 0F68                     l1387 0F20  
                   l1379 0EC8                     l1299 1194                     l1483 0AD0  
                   l1475 0AA4                     l1467 0A58                     l1459 09A2  
                   l1491 0B2E                     l1539 148E                     l1555 142E  
                   l1547 141A                     l1563 14C0                     l1571 120E  
                   l1397 0F88                     l1389 0F40                     l1477 0AAA  
                   l1485 0AE0                     l1469 0A72                     l1493 0B3C  
                   l1557 1434                     l1549 141C                     l1565 143C  
                   l1581 1248                     l1573 121E                     l1661 11C2  
                   l1479 0ABC                     l1495 0B4E                     l1559 1436  
                   l1567 143E                     l1591 1478                     l1583 124E  
                   l1575 1224                     l1671 11F4                     l1663 11D0  
                   l1655 11A8                     l1497 0B52                     l1489 0B0A  
                   l1593 1070                     l1569 1464                     l1585 125C  
                   l1577 1232                     l1665 11D6                     l1657 11AC  
                   l1499 0B76                     l1595 108E                     l1587 1264  
                   l1579 123A                     l1667 11EC                     l1659 11BE  
                   l1597 109E                     l1589 1468                     l1669 11F0  
                   l1599 10A2                     ?_pad 0014                     STR_1 0801  
                   STR_2 0812                     STR_3 081F                     STR_4 0801  
                   u1000 109E                     u1001 109A                     u1010 10B4  
                   u1011 10B0                     u1020 10D0                     u1021 10CC  
                   u1107 1226                     u1117 1234                     u1127 1242  
                   u1137 1250                     u1147 125E                     u1157 126C  
                   u1077 11B4                     u1167 1422                     u1087 11FC  
                   _LATD 000F8C                     u1177 13F0                     u1097 1214  
                   _LATE 000F8D                     i2l78 0084                     abs@a 0014  
                   _dbuf 006B                     _main 11A8                     _dtoa 0828  
                   _prec 0064                     _nout 0060                     pad@i 001B  
                   pad@p 0018                     fsr1h 000FE2                     fsr2h 000FDA  
                   indf2 000FDF                     fsr1l 000FE1                     pad@w 001D  
                   fsr2l 000FD9                     btemp 005E                     start 0088  
           ___param_bank 000000          ??_presionaBoton 0001                    ??_abs 0016  
                  ??_pad 001A          __end_of___aodiv 0E46                    ?_main 0001  
                  ?_dtoa 001F          __end_of___aomod 0FAA   __size_of_inicializaLCD 0066  
           vfpfcnvrt@fmt 0045                    _PORTE 000F84                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    _flags 0066  
                  _fputc 1112                    _fputs 131E                    pad@fp 0014  
                  _width 0062                    _putch 13D8                    _putcm 140C  
                  dtoa@d 0021                    dtoa@i 0041                    dtoa@n 0039  
                  dtoa@p 0033                    dtoa@s 0037                    dtoa@w 0035  
                  tablat 000FF5                    ttemp5 005F                    ttemp6 0062  
                  ttemp7 0066                    status 000FD8                    wtemp8 005F  
        __initialization 12D6             __end_of_main 120E             __end_of_dtoa 0B0A  
        ??_configuracion 0002                   ??_main 008F                   ??_dtoa 0029  
          __activetblptr 000001                   _ADCON0 000FC2                   _ADCON1 000FC1  
                 _ADCON2 000FC0                   ?_fputc 0004                   ?_fputs 000D  
                 _ADRESH 000FC4                   _ADRESL 000FC3                   ?_putch 0001  
                 _ANSELB 000F5C                   _ANSELD 000F5E                   _ANSELE 000F5F  
                 ?_putcm 0001                   i2l1641 004A                   i2l1651 007C  
                 i2l1643 0052                   i2l1635 000A                   i2l1645 0060  
                 i2l1637 0028                   i2l1653 0082                   i2l1639 003A  
                 i2l1647 0068                   i2l1649 0078                   _INTCON 000FF2  
          _inicializaLCD 120E             vfprintf@cfmt 0059                ??___aodiv 0012  
              ??___aomod 0012                   _cerrar 1070                   clear_0 1306  
                 isa$std 000001                   _printf 148E                   pad@buf 0016  
                 dtoa@fp 001F                   _strlen 13A2                   fputc@c 0004  
                 fputs@c 0011                   fputs@i 0012             __pdataCOMRAM 005D  
                 fputs@s 000D             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_vfprintf 12D6  
             __accesstop 0060  __end_of__initialization 130C           ?_inicializaLCD 0001  
          ___rparam_used 000001           __pcstackCOMRAM 0001             __pidataBANK0 14D0  
          __end_of_fputc 11A8            __end_of_fputs 1362            __end_of_putch 140C  
          __end_of_putcm 143C                  ??_fputc 0008                  ??_fputs 0011  
                ??_putch 0002                  ??_putcm 0002               __pbssBANK0 0060  
     __size_of_limpiaLCD 001C                  ?_cerrar 0001                  ?_printf 008B  
                ?_strlen 0002       __size_of_vfpfcnvrt 01B4          ??_inicializaLCD 0004  
             _conversion 1468                  __Hparam 0000                  __Lparam 0000  
                ___aodiv 0CBE                  ___aomod 0E46                ?_vfprintf 0053  
        __size_of_cerrar 00A2             __psmallconst 0800    __end_of_presionaBoton 0088  
                __pcinit 12D6                  __ramtop 0800                  __ptext0 11A8  
                __ptext1 120E                  __ptext2 1468                  __ptext3 143C  
                __ptext4 1070                  __ptext5 14B4                  __ptext6 140C  
                __ptext7 148E                  __ptext8 1274                  __ptext9 0B0A  
        __size_of_printf 0026          __size_of_strlen 0036             __size_of_abs 0040  
           __size_of_pad 00C6        __end_of_limpiaLCD 14D0     end_of_initialization 130C  
                fputc@fp 0006                  fputs@fp 000F        __end_of_vfpfcnvrt 0CBE  
                postdec2 000FDD                  postinc0 000FEE                  postinc1 000FE6  
                postinc2 000FDE               ??_vfprintf 0059    __end_of_configuracion 1468  
                strlen@a 0004                  strlen@s 0002              ?_conversion 0001  
            vfpfcnvrt@ap 0047              vfpfcnvrt@fp 0043              vfpfcnvrt@ll 004B  
          __pidataCOMRAM 14D2           __end_of_cerrar 1112              putch@Activa 0003  
         __end_of_printf 14B4           __end_of_strlen 13D8              putcm@Activa 0003  
    start_initialization 12D6              __end_of_abs 13A2              __end_of_pad 1070  
            vfprintf@fmt 0055                 ??_cerrar 005D              __pdataBANK0 0090  
               ??_printf 005B                 ??_strlen 0004      __size_of_conversion 0026  
          __pcstackBANK0 008B         ___aodiv@dividend 0002                _enProceso 006A  
              __pintcode 0008                 ?___aodiv 0002                 ?___aomod 0002  
       ___aodiv@quotient 0014                _direccion 005D        __size_of_vfprintf 0062  
            __smallconst 0800                _corriente 0068           __size_of_fputc 0096  
         __size_of_fputs 0044                _limpiaLCD 14B4           __size_of_putch 0034  
         __size_of_putcm 0030    __end_of_inicializaLCD 1274                 i2u103_40 0028  
               i2u103_41 0024                 i2u104_40 003A                 i2u104_41 0036  
               i2u105_40 004A                 i2u105_41 0046                 i2u106_40 0078  
               i2u106_41 0074                 i2u118_47 0058                 _RCONbits 000FD0  
              _vfpfcnvrt 0B0A               _ADCON0bits 000FC2               ?_limpiaLCD 0001  
           ??_conversion 0002   __size_of_presionaBoton 0080                 __Hrparam 0000  
             vfprintf@ap 0057                 __Lrparam 0000               vfprintf@fp 0053  
           __Lsmallconst 0800         __size_of___aodiv 0188         __size_of___aomod 0164  
             ?_vfpfcnvrt 0043          ___aodiv@divisor 000A          ___aodiv@counter 0012  
     __end_of_conversion 148E                 _dtoa$803 0031                 __ptext10 0828  
               __ptext11 0FAA                 __ptext12 13A2                 __ptext13 131E  
               __ptext14 1112                 __ptext15 13D8                 __ptext16 1362  
               __ptext17 0E46                 __ptext18 0CBE                 _contador 0090  
 __size_of_configuracion 002C            __size_of_main 0066            __size_of_dtoa 02E2  
               isa$xinst 000000                 int$flags 005E                 _vfprintf 1274  
              printf@fmt 008B            _presionaBoton 0008         ___aomod@dividend 0002  
              putch@data 0002               _INTCONbits 000FF2                putcm@data 0002  
            ??_limpiaLCD 005D                 intlevel2 0000                 printf@ap 005B  
        ___aomod@divisor 000A              ??_vfpfcnvrt 0049          ___aomod@counter 0012  
         ?_presionaBoton 0001            _configuracion 143C             ___aodiv@sign 0013  
           ___aomod@sign 0013  
