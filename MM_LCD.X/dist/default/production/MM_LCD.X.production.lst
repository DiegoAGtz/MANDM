

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 23 12:54:07 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    27                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    28                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    29                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 05/05/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F45K50 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     _ANSELA	set	3931
    66  0000                     _ANSELD	set	3934
    67  0000                     _LATD	set	3980
    68  0000                     _LATA	set	3977
    69  0000                     _TRISD	set	3989
    70  0000                     _TRISA	set	3986
    71  0000                     _LATAbits	set	3977
    72                           
    73                           	psect	smallconst
    74  000800                     __psmallconst:
    75                           	callstack 0
    76  000800  00                 	db	0
    77  000801                     STR_1:
    78                           
    79                           ; BSR set to: 15
    80  000801  20                 	db	32
    81  000802  43                 	db	67	;'C'
    82  000803  75                 	db	117	;'u'
    83  000804  72                 	db	114	;'r'
    84  000805  73                 	db	115	;'s'
    85  000806  6F                 	db	111	;'o'
    86  000807  20                 	db	32
    87  000808  64                 	db	100	;'d'
    88  000809  65                 	db	101	;'e'
    89  00080A  20                 	db	32
    90  00080B  4D                 	db	77	;'M'
    91  00080C  26                 	db	38
    92  00080D  4D                 	db	77	;'M'
    93  00080E  20                 	db	32
    94  00080F  00                 	db	0
    95  000810                     STR_2:
    96                           
    97                           ; BSR set to: 15
    98  000810  20                 	db	32
    99  000811  59                 	db	89	;'Y'
   100  000812  65                 	db	101	;'e'
   101  000813  61                 	db	97	;'a'
   102  000814  72                 	db	114	;'r'
   103  000815  3A                 	db	58	;':'
   104  000816  20                 	db	32
   105  000817  25                 	db	37
   106  000818  64                 	db	100	;'d'
   107  000819  20                 	db	32
   108  00081A  00                 	db	0
   109  00081B  00                 	db	0	; dummy byte at the end
   110  0000                     
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114  00134E                     __pcinit:
   115                           	callstack 0
   116  00134E                     start_initialization:
   117                           	callstack 0
   118  00134E                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Clear objects allocated to BANK0 (40 bytes)
   122  00134E  EE00  F060         	lfsr	0,__pbssBANK0
   123  001352  0E28               	movlw	40
   124  001354                     clear_0:
   125  001354  6AEE               	clrf	postinc0,c
   126  001356  06E8               	decf	wreg,f,c
   127  001358  E1FD               	bnz	clear_0
   128  00135A                     end_of_initialization:
   129                           	callstack 0
   130  00135A                     __end_of__initialization:
   131                           	callstack 0
   132  00135A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   133  00135C  6EF8               	movwf	tblptru,c
   134  00135E  0E08               	movlw	high __Lsmallconst
   135  001360  6EF7               	movwf	tblptrh,c
   136  001362  0100               	movlb	0
   137  001364  EFE1  F008         	goto	_main	;jump to C main() function
   138                           
   139                           	psect	bssBANK0
   140  000060                     __pbssBANK0:
   141                           	callstack 0
   142  000060                     _nout:
   143                           	callstack 0
   144  000060                     	ds	2
   145  000062                     _width:
   146                           	callstack 0
   147  000062                     	ds	2
   148  000064                     _prec:
   149                           	callstack 0
   150  000064                     	ds	2
   151  000066                     _flags:
   152                           	callstack 0
   153  000066                     	ds	2
   154  000068                     _dbuf:
   155                           	callstack 0
   156  000068                     	ds	32
   157                           
   158                           	psect	cstackBANK0
   159  000088                     __pcstackBANK0:
   160                           	callstack 0
   161  000088                     ??_main:
   162                           
   163                           ; 1 bytes @ 0x0
   164  000088                     	ds	1
   165                           
   166                           	psect	cstackCOMRAM
   167  000001                     __pcstackCOMRAM:
   168                           	callstack 0
   169  000001                     ?_strlen:
   170                           	callstack 0
   171  000001                     ?___aodiv:
   172                           	callstack 0
   173  000001                     ?___aomod:
   174                           	callstack 0
   175  000001                     putch@data:
   176                           	callstack 0
   177  000001                     putcm@data:
   178                           	callstack 0
   179  000001                     strlen@s:
   180                           	callstack 0
   181  000001                     ___aodiv@dividend:
   182                           	callstack 0
   183  000001                     ___aomod@dividend:
   184                           	callstack 0
   185                           
   186                           ; 8 bytes @ 0x0
   187  000001                     	ds	1
   188  000002                     putch@Activa:
   189                           	callstack 0
   190  000002                     putcm@Activa:
   191                           	callstack 0
   192                           
   193                           ; 1 bytes @ 0x1
   194  000002                     	ds	1
   195  000003                     ??_InicializaLCD:
   196  000003                     fputc@c:
   197                           	callstack 0
   198  000003                     strlen@a:
   199                           	callstack 0
   200                           
   201                           ; 2 bytes @ 0x2
   202  000003                     	ds	2
   203  000005                     fputc@fp:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x4
   207  000005                     	ds	2
   208  000007                     ??_fputc:
   209                           
   210                           ; 1 bytes @ 0x6
   211  000007                     	ds	2
   212  000009                     ___aodiv@divisor:
   213                           	callstack 0
   214  000009                     ___aomod@divisor:
   215                           	callstack 0
   216                           
   217                           ; 8 bytes @ 0x8
   218  000009                     	ds	3
   219  00000C                     fputs@s:
   220                           	callstack 0
   221                           
   222                           ; 2 bytes @ 0xB
   223  00000C                     	ds	2
   224  00000E                     fputs@fp:
   225                           	callstack 0
   226                           
   227                           ; 2 bytes @ 0xD
   228  00000E                     	ds	2
   229  000010                     fputs@c:
   230                           	callstack 0
   231                           
   232                           ; 1 bytes @ 0xF
   233  000010                     	ds	1
   234  000011                     ___aodiv@counter:
   235                           	callstack 0
   236  000011                     ___aomod@counter:
   237                           	callstack 0
   238  000011                     fputs@i:
   239                           	callstack 0
   240                           
   241                           ; 2 bytes @ 0x10
   242  000011                     	ds	1
   243  000012                     ___aodiv@sign:
   244                           	callstack 0
   245  000012                     ___aomod@sign:
   246                           	callstack 0
   247                           
   248                           ; 1 bytes @ 0x11
   249  000012                     	ds	1
   250  000013                     ?_abs:
   251                           	callstack 0
   252  000013                     ?_pad:
   253                           	callstack 0
   254  000013                     pad@fp:
   255                           	callstack 0
   256  000013                     abs@a:
   257                           	callstack 0
   258  000013                     ___aodiv@quotient:
   259                           	callstack 0
   260                           
   261                           ; 8 bytes @ 0x12
   262  000013                     	ds	2
   263  000015                     ??_abs:
   264  000015                     pad@buf:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0x14
   268  000015                     	ds	2
   269  000017                     pad@p:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0x16
   273  000017                     	ds	2
   274  000019                     ??_pad:
   275                           
   276                           ; 1 bytes @ 0x18
   277  000019                     	ds	1
   278  00001A                     pad@i:
   279                           	callstack 0
   280                           
   281                           ; 2 bytes @ 0x19
   282  00001A                     	ds	2
   283  00001C                     pad@w:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0x1B
   287  00001C                     	ds	2
   288  00001E                     ?_dtoa:
   289                           	callstack 0
   290  00001E                     dtoa@fp:
   291                           	callstack 0
   292                           
   293                           ; 2 bytes @ 0x1D
   294  00001E                     	ds	2
   295  000020                     dtoa@d:
   296                           	callstack 0
   297                           
   298                           ; 8 bytes @ 0x1F
   299  000020                     	ds	8
   300  000028                     ??_dtoa:
   301                           
   302                           ; 1 bytes @ 0x27
   303  000028                     	ds	8
   304  000030                     _dtoa$623:
   305                           	callstack 0
   306                           
   307                           ; 2 bytes @ 0x2F
   308  000030                     	ds	2
   309  000032                     dtoa@p:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x31
   313  000032                     	ds	2
   314  000034                     dtoa@w:
   315                           	callstack 0
   316                           
   317                           ; 2 bytes @ 0x33
   318  000034                     	ds	2
   319  000036                     dtoa@s:
   320                           	callstack 0
   321                           
   322                           ; 2 bytes @ 0x35
   323  000036                     	ds	2
   324  000038                     dtoa@n:
   325                           	callstack 0
   326                           
   327                           ; 8 bytes @ 0x37
   328  000038                     	ds	8
   329  000040                     dtoa@i:
   330                           	callstack 0
   331                           
   332                           ; 2 bytes @ 0x3F
   333  000040                     	ds	2
   334  000042                     ?_vfpfcnvrt:
   335                           	callstack 0
   336  000042                     vfpfcnvrt@fp:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x41
   340  000042                     	ds	2
   341  000044                     vfpfcnvrt@fmt:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x43
   345  000044                     	ds	2
   346  000046                     vfpfcnvrt@ap:
   347                           	callstack 0
   348                           
   349                           ; 2 bytes @ 0x45
   350  000046                     	ds	2
   351  000048                     ??_vfpfcnvrt:
   352                           
   353                           ; 1 bytes @ 0x47
   354  000048                     	ds	2
   355  00004A                     vfpfcnvrt@ll:
   356                           	callstack 0
   357                           
   358                           ; 8 bytes @ 0x49
   359  00004A                     	ds	8
   360  000052                     ?_vfprintf:
   361                           	callstack 0
   362  000052                     vfprintf@fp:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x51
   366  000052                     	ds	2
   367  000054                     vfprintf@fmt:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0x53
   371  000054                     	ds	2
   372  000056                     vfprintf@ap:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x55
   376  000056                     	ds	2
   377  000058                     vfprintf@cfmt:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x57
   381  000058                     	ds	2
   382  00005A                     ?_printf:
   383                           	callstack 0
   384  00005A                     printf@fmt:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0x59
   388  00005A                     	ds	4
   389  00005E                     printf@ap:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x5D
   393  00005E                     	ds	2
   394                           
   395 ;;
   396 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   397 ;;
   398 ;; *************** function _main *****************
   399 ;; Defined at:
   400 ;;		line 23 in file "main.c"
   401 ;; Parameters:    Size  Location     Type
   402 ;;		None
   403 ;; Auto vars:     Size  Location     Type
   404 ;;  Dato            2    0        int 
   405 ;; Return value:  Size  Location     Type
   406 ;;                  1    wreg      void 
   407 ;; Registers used:
   408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   409 ;; Tracked objects:
   410 ;;		On entry : 0/0
   411 ;;		On exit  : 0/0
   412 ;;		Unchanged: 0/0
   413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   414 ;;      Params:         0       0       0       0       0       0       0       0       0
   415 ;;      Locals:         0       0       0       0       0       0       0       0       0
   416 ;;      Temps:          0       1       0       0       0       0       0       0       0
   417 ;;      Totals:         0       1       0       0       0       0       0       0       0
   418 ;;Total ram usage:        1 bytes
   419 ;; Hardware stack levels required when called: 8
   420 ;; This function calls:
   421 ;;		_Configuracion
   422 ;;		_InicializaLCD
   423 ;;		_printf
   424 ;;		_putcm
   425 ;; This function is called by:
   426 ;;		Startup code after reset
   427 ;; This function uses a non-reentrant model
   428 ;;
   429                           
   430                           	psect	text0
   431  0011C2                     __ptext0:
   432                           	callstack 0
   433  0011C2                     _main:
   434                           	callstack 23
   435  0011C2                     
   436                           ;main.c: 25:     Configuracion();
   437  0011C2  ECB4  F009         	call	_Configuracion	;wreg free
   438  0011C6                     
   439                           ;main.c: 26:     InicializaLCD();
   440  0011C6  EC7D  F008         	call	_InicializaLCD	;wreg free
   441  0011CA                     
   442                           ;main.c: 28:     printf(" Curso de M&M ");
   443  0011CA  0E01               	movlw	low STR_1
   444  0011CC  6E5A               	movwf	printf@fmt^0,c
   445  0011CE  0E08               	movlw	high STR_1
   446  0011D0  6E5B               	movwf	(printf@fmt+1)^0,c
   447  0011D2  EC94  F009         	call	_printf	;wreg free
   448  0011D6                     
   449                           ;main.c: 29:     putcm(0xC2);
   450  0011D6  0EC2               	movlw	194
   451  0011D8  EC7C  F009         	call	_putcm
   452  0011DC                     
   453                           ;main.c: 30:     printf(" Year: %d ", Dato);
   454  0011DC  0E10               	movlw	low STR_2
   455  0011DE  6E5A               	movwf	printf@fmt^0,c
   456  0011E0  0E08               	movlw	high STR_2
   457  0011E2  6E5B               	movwf	(printf@fmt+1)^0,c
   458  0011E4  0E07               	movlw	7
   459  0011E6  6E5D               	movwf	(?_printf+3)^0,c
   460  0011E8  0EE5               	movlw	229
   461  0011EA  6E5C               	movwf	(?_printf+2)^0,c
   462  0011EC  EC94  F009         	call	_printf	;wreg free
   463  0011F0                     l1436:
   464                           
   465                           ;main.c: 32:         LATAbits.LA0 ^= 1;
   466  0011F0  7089               	btg	137,0,c	;volatile
   467  0011F2                     
   468                           ;main.c: 33:         _delay((unsigned long)((500)*(1000000/4000.0)));
   469  0011F2  0EA3               	movlw	163
   470  0011F4  0100               	movlb	0	; () banked
   471  0011F6  6F88               	movwf	??_main& (0+255),b
   472  0011F8  0E55               	movlw	85
   473  0011FA                     u897:
   474  0011FA  2EE8               	decfsz	wreg,f,c
   475  0011FC  D7FE               	bra	u897
   476  0011FE  2F88               	decfsz	??_main& (0+255),f,b
   477  001200  D7FC               	bra	u897
   478  001202  EFF8  F008         	goto	l1436
   479  001206  EF00  F000         	goto	start
   480  00120A                     __end_of_main:
   481                           	callstack 0
   482                           
   483 ;; *************** function _printf *****************
   484 ;; Defined at:
   485 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/printf.c"
   486 ;; Parameters:    Size  Location     Type
   487 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
   488 ;;		 -> STR_2(11), STR_1(15), 
   489 ;; Auto vars:     Size  Location     Type
   490 ;;  ap              2   93[COMRAM] PTR void [1]
   491 ;;		 -> ?_printf(2), 
   492 ;;  ret             2    0        int 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  2   89[COMRAM] int 
   495 ;; Registers used:
   496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   502 ;;      Params:         4       0       0       0       0       0       0       0       0
   503 ;;      Locals:         2       0       0       0       0       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0       0       0       0       0
   505 ;;      Totals:         6       0       0       0       0       0       0       0       0
   506 ;;Total ram usage:        6 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; Hardware stack levels required when called: 7
   509 ;; This function calls:
   510 ;;		_vfprintf
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text1
   517  001328                     __ptext1:
   518                           	callstack 0
   519  001328                     _printf:
   520                           	callstack 23
   521  001328  0E5C               	movlw	low (?_printf+2)
   522  00132A  6E5E               	movwf	printf@ap^0,c
   523  00132C  0E00               	movlw	high (?_printf+2)
   524  00132E  6E5F               	movwf	(printf@ap+1)^0,c
   525  001330  0E00               	movlw	0
   526  001332  6E52               	movwf	vfprintf@fp^0,c
   527  001334  0E00               	movlw	0
   528  001336  6E53               	movwf	(vfprintf@fp+1)^0,c
   529  001338  C05A  F054         	movff	printf@fmt,vfprintf@fmt
   530  00133C  C05B  F055         	movff	printf@fmt+1,vfprintf@fmt+1
   531  001340  0E5E               	movlw	low printf@ap
   532  001342  6E56               	movwf	vfprintf@ap^0,c
   533  001344  0E00               	movlw	high printf@ap
   534  001346  6E57               	movwf	(vfprintf@ap+1)^0,c
   535  001348  ECB0  F008         	call	_vfprintf	;wreg free
   536  00134C  0012               	return		;funcret
   537  00134E                     __end_of_printf:
   538                           	callstack 0
   539                           
   540 ;; *************** function _vfprintf *****************
   541 ;; Defined at:
   542 ;;		line 1390 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;  fp              2   81[COMRAM] PTR struct _IO_FILE
   545 ;;		 -> NULL(0), 
   546 ;;  fmt             2   83[COMRAM] PTR const unsigned char 
   547 ;;		 -> STR_2(11), STR_1(15), 
   548 ;;  ap              2   85[COMRAM] PTR PTR void 
   549 ;;		 -> printf@ap(2), 
   550 ;; Auto vars:     Size  Location     Type
   551 ;;  cfmt            2   87[COMRAM] PTR unsigned char 
   552 ;;		 -> STR_2(11), STR_1(15), 
   553 ;; Return value:  Size  Location     Type
   554 ;;                  2   81[COMRAM] int 
   555 ;; Registers used:
   556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   562 ;;      Params:         6       0       0       0       0       0       0       0       0
   563 ;;      Locals:         2       0       0       0       0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0       0       0       0       0
   565 ;;      Totals:         8       0       0       0       0       0       0       0       0
   566 ;;Total ram usage:        8 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 6
   569 ;; This function calls:
   570 ;;		_vfpfcnvrt
   571 ;; This function is called by:
   572 ;;		_printf
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576                           	psect	text2
   577  001160                     __ptext2:
   578                           	callstack 0
   579  001160                     _vfprintf:
   580                           	callstack 23
   581  001160                     
   582                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
   583  001160  C054  F058         	movff	vfprintf@fmt,vfprintf@cfmt
   584  001164  C055  F059         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
   585  001168                     
   586                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
   587  001168  0E00               	movlw	0
   588  00116A  0100               	movlb	0	; () banked
   589  00116C  6F61               	movwf	(_nout+1)& (0+255),b
   590  00116E  0E00               	movlw	0
   591  001170  6F60               	movwf	_nout& (0+255),b
   592                           
   593                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
   594  001172  EFCE  F008         	goto	l1416
   595  001176                     l1414:
   596                           
   597                           ; BSR set to: 0
   598                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
   599  001176  C052  F042         	movff	vfprintf@fp,vfpfcnvrt@fp
   600  00117A  C053  F043         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
   601  00117E  0E58               	movlw	low vfprintf@cfmt
   602  001180  6E44               	movwf	vfpfcnvrt@fmt^0,c
   603  001182  0E00               	movlw	high vfprintf@cfmt
   604  001184  6E45               	movwf	(vfpfcnvrt@fmt+1)^0,c
   605  001186  C056  F046         	movff	vfprintf@ap,vfpfcnvrt@ap
   606  00118A  C057  F047         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
   607  00118E  EC7F  F005         	call	_vfpfcnvrt	;wreg free
   608  001192  5042               	movf	?_vfpfcnvrt^0,w,c
   609  001194  0100               	movlb	0	; () banked
   610  001196  2760               	addwf	_nout& (0+255),f,b
   611  001198  5043               	movf	(?_vfpfcnvrt+1)^0,w,c
   612  00119A  2361               	addwfc	(_nout+1)& (0+255),f,b
   613  00119C                     l1416:
   614                           
   615                           ; BSR set to: 0
   616                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
   617  00119C  C058  FFF6         	movff	vfprintf@cfmt,tblptrl
   618  0011A0  C059  FFF7         	movff	vfprintf@cfmt+1,tblptrh
   619  0011A4                     	if	0	;tblptru may be non-zero
   620  0011A4                     	endif
   621  0011A4                     	if	0	;tblptru may be non-zero
   622  0011A4                     	endif
   623  0011A4  0008               	tblrd		*
   624  0011A6  50F5               	movf	tablat,w,c
   625  0011A8  0900               	iorlw	0
   626  0011AA  A4D8               	btfss	status,2,c
   627  0011AC  EFDA  F008         	goto	u881
   628  0011B0  EFDC  F008         	goto	u880
   629  0011B4                     u881:
   630  0011B4  EFBB  F008         	goto	l1414
   631  0011B8                     u880:
   632  0011B8                     
   633                           ; BSR set to: 0
   634                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nout;
   635  0011B8  C060  F052         	movff	_nout,?_vfprintf
   636  0011BC  C061  F053         	movff	_nout+1,?_vfprintf+1
   637  0011C0                     
   638                           ; BSR set to: 0
   639  0011C0  0012               	return		;funcret
   640  0011C2                     __end_of_vfprintf:
   641                           	callstack 0
   642                           
   643 ;; *************** function _vfpfcnvrt *****************
   644 ;; Defined at:
   645 ;;		line 692 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
   646 ;; Parameters:    Size  Location     Type
   647 ;;  fp              2   65[COMRAM] PTR struct _IO_FILE
   648 ;;		 -> NULL(0), 
   649 ;;  fmt             2   67[COMRAM] PTR PTR unsigned char 
   650 ;;		 -> vfprintf@cfmt(2), 
   651 ;;  ap              2   69[COMRAM] PTR PTR void 
   652 ;;		 -> printf@ap(2), 
   653 ;; Auto vars:     Size  Location     Type
   654 ;;  ll              8   73[COMRAM] long long 
   655 ;;  llu             8    0        unsigned long long 
   656 ;;  f               4    0        unsigned long long 
   657 ;;  vp              3    0        PTR void 
   658 ;;  ct              3    0        unsigned char [3]
   659 ;;  cp              3    0        PTR unsigned char 
   660 ;;  i               2    0        int 
   661 ;;  done            2    0        int 
   662 ;;  c               1    0        unsigned char 
   663 ;; Return value:  Size  Location     Type
   664 ;;                  2   65[COMRAM] int 
   665 ;; Registers used:
   666 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   672 ;;      Params:         6       0       0       0       0       0       0       0       0
   673 ;;      Locals:         8       0       0       0       0       0       0       0       0
   674 ;;      Temps:          2       0       0       0       0       0       0       0       0
   675 ;;      Totals:        16       0       0       0       0       0       0       0       0
   676 ;;Total ram usage:       16 bytes
   677 ;; Hardware stack levels used: 1
   678 ;; Hardware stack levels required when called: 5
   679 ;; This function calls:
   680 ;;		_dtoa
   681 ;;		_fputc
   682 ;; This function is called by:
   683 ;;		_vfprintf
   684 ;; This function uses a non-reentrant model
   685 ;;
   686                           
   687                           	psect	text3
   688  000AFE                     __ptext3:
   689                           	callstack 0
   690  000AFE                     _vfpfcnvrt:
   691                           	callstack 23
   692  000AFE                     
   693                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
   694  000AFE  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   695  000B02  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   696  000B06  CFDE FFF6          	movff	postinc2,tblptrl
   697  000B0A  CFDD FFF7          	movff	postdec2,tblptrh
   698  000B0E                     	if	0	;tblptru may be non-zero
   699  000B0E                     	endif
   700  000B0E                     	if	0	;tblptru may be non-zero
   701  000B0E                     	endif
   702  000B0E  0008               	tblrd		*
   703  000B10  50F5               	movf	tablat,w,c
   704  000B12  0A25               	xorlw	37
   705  000B14  A4D8               	btfss	status,2,c
   706  000B16  EF8F  F005         	goto	u841
   707  000B1A  EF91  F005         	goto	u840
   708  000B1E                     u841:
   709  000B1E  EF3D  F006         	goto	l1402
   710  000B22                     u840:
   711  000B22                     
   712                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
   713  000B22  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   714  000B26  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   715  000B2A  2ADE               	incf	postinc2,f,c
   716  000B2C  0E00               	movlw	0
   717  000B2E  22DD               	addwfc	postdec2,f,c
   718  000B30                     
   719                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
   720  000B30  0E00               	movlw	0
   721  000B32  0100               	movlb	0	; () banked
   722  000B34  6F63               	movwf	(_width+1)& (0+255),b
   723  000B36  0E00               	movlw	0
   724  000B38  6F62               	movwf	_width& (0+255),b
   725  000B3A  C062  F066         	movff	_width,_flags
   726  000B3E  C063  F067         	movff	_width+1,_flags+1
   727  000B42                     
   728                           ; BSR set to: 0
   729                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
   730  000B42  6964               	setf	_prec& (0+255),b
   731  000B44  6965               	setf	(_prec+1)& (0+255),b
   732  000B46                     
   733                           ; BSR set to: 0
   734                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
   735  000B46  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   736  000B4A  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   737  000B4E  CFDE FFF6          	movff	postinc2,tblptrl
   738  000B52  CFDD FFF7          	movff	postdec2,tblptrh
   739  000B56                     	if	0	;tblptru may be non-zero
   740  000B56                     	endif
   741  000B56                     	if	0	;tblptru may be non-zero
   742  000B56                     	endif
   743  000B56  0008               	tblrd		*
   744  000B58  50F5               	movf	tablat,w,c
   745  000B5A  0A64               	xorlw	100
   746  000B5C  B4D8               	btfsc	status,2,c
   747  000B5E  EFB3  F005         	goto	u851
   748  000B62  EFB5  F005         	goto	u850
   749  000B66                     u851:
   750  000B66  EFC7  F005         	goto	l1380
   751  000B6A                     u850:
   752  000B6A                     
   753                           ; BSR set to: 0
   754  000B6A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   755  000B6E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   756  000B72  CFDE FFF6          	movff	postinc2,tblptrl
   757  000B76  CFDD FFF7          	movff	postdec2,tblptrh
   758  000B7A                     	if	0	;tblptru may be non-zero
   759  000B7A                     	endif
   760  000B7A                     	if	0	;tblptru may be non-zero
   761  000B7A                     	endif
   762  000B7A  0008               	tblrd		*
   763  000B7C  50F5               	movf	tablat,w,c
   764  000B7E  0A69               	xorlw	105
   765  000B80  A4D8               	btfss	status,2,c
   766  000B82  EFC5  F005         	goto	u861
   767  000B86  EFC7  F005         	goto	u860
   768  000B8A                     u861:
   769  000B8A  EF07  F006         	goto	l1386
   770  000B8E                     u860:
   771  000B8E                     l1380:
   772                           
   773                           ; BSR set to: 0
   774                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
   775  000B8E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   776  000B92  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   777  000B96  2ADE               	incf	postinc2,f,c
   778  000B98  0E00               	movlw	0
   779  000B9A  22DD               	addwfc	postdec2,f,c
   780                           
   781                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
   782  000B9C  C046  FFD9         	movff	vfpfcnvrt@ap,fsr2l
   783  000BA0  C047  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
   784  000BA4  CFDF F048          	movff	indf2,??_vfpfcnvrt
   785  000BA8  0E02               	movlw	2
   786  000BAA  26DE               	addwf	postinc2,f,c
   787  000BAC  CFDF F049          	movff	indf2,??_vfpfcnvrt+1
   788  000BB0  0E00               	movlw	0
   789  000BB2  22DD               	addwfc	postdec2,f,c
   790  000BB4  C048  FFD9         	movff	??_vfpfcnvrt,fsr2l
   791  000BB8  C049  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
   792  000BBC  CFDE F04A          	movff	postinc2,vfpfcnvrt@ll
   793  000BC0  CFDD F04B          	movff	postdec2,vfpfcnvrt@ll+1
   794  000BC4  0E00               	movlw	0
   795  000BC6  BE4B               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
   796  000BC8  0EFF               	movlw	-1
   797  000BCA  6E4C               	movwf	(vfpfcnvrt@ll+2)^0,c
   798  000BCC  6E4D               	movwf	(vfpfcnvrt@ll+3)^0,c
   799  000BCE  6E4E               	movwf	(vfpfcnvrt@ll+4)^0,c
   800  000BD0  6E4F               	movwf	(vfpfcnvrt@ll+5)^0,c
   801  000BD2  6E50               	movwf	(vfpfcnvrt@ll+6)^0,c
   802  000BD4  6E51               	movwf	(vfpfcnvrt@ll+7)^0,c
   803  000BD6                     
   804                           ; BSR set to: 0
   805                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
   806  000BD6  C042  F01E         	movff	vfpfcnvrt@fp,dtoa@fp
   807  000BDA  C043  F01F         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
   808  000BDE  C04A  F020         	movff	vfpfcnvrt@ll,dtoa@d
   809  000BE2  C04B  F021         	movff	vfpfcnvrt@ll+1,dtoa@d+1
   810  000BE6  C04C  F022         	movff	vfpfcnvrt@ll+2,dtoa@d+2
   811  000BEA  C04D  F023         	movff	vfpfcnvrt@ll+3,dtoa@d+3
   812  000BEE  C04E  F024         	movff	vfpfcnvrt@ll+4,dtoa@d+4
   813  000BF2  C04F  F025         	movff	vfpfcnvrt@ll+5,dtoa@d+5
   814  000BF6  C050  F026         	movff	vfpfcnvrt@ll+6,dtoa@d+6
   815  000BFA  C051  F027         	movff	vfpfcnvrt@ll+7,dtoa@d+7
   816  000BFE  EC0E  F004         	call	_dtoa	;wreg free
   817  000C02  C01E  F042         	movff	?_dtoa,?_vfpfcnvrt
   818  000C06  C01F  F043         	movff	?_dtoa+1,?_vfpfcnvrt+1
   819  000C0A  EF58  F006         	goto	l790
   820  000C0E                     l1386:
   821                           
   822                           ; BSR set to: 0
   823                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
   824  000C0E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   825  000C12  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   826  000C16  CFDE FFF6          	movff	postinc2,tblptrl
   827  000C1A  CFDD FFF7          	movff	postdec2,tblptrh
   828  000C1E                     	if	0	;tblptru may be non-zero
   829  000C1E                     	endif
   830  000C1E                     	if	0	;tblptru may be non-zero
   831  000C1E                     	endif
   832  000C1E  0008               	tblrd		*
   833  000C20  50F5               	movf	tablat,w,c
   834  000C22  0A25               	xorlw	37
   835  000C24  A4D8               	btfss	status,2,c
   836  000C26  EF17  F006         	goto	u871
   837  000C2A  EF19  F006         	goto	u870
   838  000C2E                     u871:
   839  000C2E  EF30  F006         	goto	l1396
   840  000C32                     u870:
   841  000C32                     
   842                           ; BSR set to: 0
   843                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
   844  000C32  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   845  000C36  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   846  000C3A  2ADE               	incf	postinc2,f,c
   847  000C3C  0E00               	movlw	0
   848  000C3E  22DD               	addwfc	postdec2,f,c
   849  000C40                     
   850                           ; BSR set to: 0
   851                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
   852  000C40  0E00               	movlw	0
   853  000C42  6E04               	movwf	(fputc@c+1)^0,c
   854  000C44  0E25               	movlw	37
   855  000C46  6E03               	movwf	fputc@c^0,c
   856  000C48  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
   857  000C4C  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   858  000C50  EC32  F008         	call	_fputc	;wreg free
   859  000C54                     l1392:
   860                           
   861                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             return 1;
   862  000C54  0E00               	movlw	0
   863  000C56  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
   864  000C58  0E01               	movlw	1
   865  000C5A  6E42               	movwf	?_vfpfcnvrt^0,c
   866  000C5C  EF58  F006         	goto	l790
   867  000C60                     l1396:
   868                           
   869                           ; BSR set to: 0
   870                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
   871  000C60  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   872  000C64  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   873  000C68  2ADE               	incf	postinc2,f,c
   874  000C6A  0E00               	movlw	0
   875  000C6C  22DD               	addwfc	postdec2,f,c
   876  000C6E                     
   877                           ; BSR set to: 0
   878                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return 0;
   879  000C6E  0E00               	movlw	0
   880  000C70  6E43               	movwf	(?_vfpfcnvrt+1)^0,c
   881  000C72  0E00               	movlw	0
   882  000C74  6E42               	movwf	?_vfpfcnvrt^0,c
   883  000C76  EF58  F006         	goto	l790
   884  000C7A                     l1402:
   885                           
   886                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
   887  000C7A  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   888  000C7E  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   889  000C82  CFDE FFF6          	movff	postinc2,tblptrl
   890  000C86  CFDD FFF7          	movff	postdec2,tblptrh
   891  000C8A                     	if	0	;tblptru may be non-zero
   892  000C8A                     	endif
   893  000C8A                     	if	0	;tblptru may be non-zero
   894  000C8A                     	endif
   895  000C8A  0008               	tblrd		*
   896  000C8C  50F5               	movf	tablat,w,c
   897  000C8E  6E03               	movwf	fputc@c^0,c
   898  000C90  6A04               	clrf	(fputc@c+1)^0,c
   899  000C92  C042  F005         	movff	vfpfcnvrt@fp,fputc@fp
   900  000C96  C043  F006         	movff	vfpfcnvrt@fp+1,fputc@fp+1
   901  000C9A  EC32  F008         	call	_fputc	;wreg free
   902  000C9E                     
   903                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
   904  000C9E  C044  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
   905  000CA2  C045  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
   906  000CA6  2ADE               	incf	postinc2,f,c
   907  000CA8  0E00               	movlw	0
   908  000CAA  22DD               	addwfc	postdec2,f,c
   909  000CAC  EF2A  F006         	goto	l1392
   910  000CB0                     l790:
   911  000CB0  0012               	return		;funcret
   912  000CB2                     __end_of_vfpfcnvrt:
   913                           	callstack 0
   914                           
   915 ;; *************** function _dtoa *****************
   916 ;; Defined at:
   917 ;;		line 287 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  fp              2   29[COMRAM] PTR struct _IO_FILE
   920 ;;		 -> NULL(0), 
   921 ;;  d               8   31[COMRAM] long long 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  n               8   55[COMRAM] long long 
   924 ;;  i               2   63[COMRAM] int 
   925 ;;  s               2   53[COMRAM] int 
   926 ;;  w               2   51[COMRAM] int 
   927 ;;  p               2   49[COMRAM] int 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  2   29[COMRAM] int 
   930 ;; Registers used:
   931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : 0/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   937 ;;      Params:        10       0       0       0       0       0       0       0       0
   938 ;;      Locals:        18       0       0       0       0       0       0       0       0
   939 ;;      Temps:          8       0       0       0       0       0       0       0       0
   940 ;;      Totals:        36       0       0       0       0       0       0       0       0
   941 ;;Total ram usage:       36 bytes
   942 ;; Hardware stack levels used: 1
   943 ;; Hardware stack levels required when called: 4
   944 ;; This function calls:
   945 ;;		___aodiv
   946 ;;		___aomod
   947 ;;		_abs
   948 ;;		_pad
   949 ;; This function is called by:
   950 ;;		_vfpfcnvrt
   951 ;; This function uses a non-reentrant model
   952 ;;
   953                           
   954                           	psect	text4
   955  00081C                     __ptext4:
   956                           	callstack 0
   957  00081C                     _dtoa:
   958                           	callstack 23
   959  00081C                     
   960                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .32/pic/sources/c99/common/doprnt.c: 293:     n = d;
   961  00081C  C020  F038         	movff	dtoa@d,dtoa@n
   962  000820  C021  F039         	movff	dtoa@d+1,dtoa@n+1
   963  000824  C022  F03A         	movff	dtoa@d+2,dtoa@n+2
   964  000828  C023  F03B         	movff	dtoa@d+3,dtoa@n+3
   965  00082C  C024  F03C         	movff	dtoa@d+4,dtoa@n+4
   966  000830  C025  F03D         	movff	dtoa@d+5,dtoa@n+5
   967  000834  C026  F03E         	movff	dtoa@d+6,dtoa@n+6
   968  000838  C027  F03F         	movff	dtoa@d+7,dtoa@n+7
   969  00083C                     
   970                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
   971  00083C  BE3F               	btfsc	(dtoa@n+7)^0,7,c
   972  00083E  EF23  F004         	goto	u691
   973  000842  EF26  F004         	goto	u690
   974  000846                     u691:
   975  000846  0E01               	movlw	1
   976  000848  EF27  F004         	goto	u700
   977  00084C                     u690:
   978  00084C  0E00               	movlw	0
   979  00084E                     u700:
   980  00084E  6E36               	movwf	dtoa@s^0,c
   981  000850  6A37               	clrf	(dtoa@s+1)^0,c
   982                           
   983                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
   984  000852  5036               	movf	dtoa@s^0,w,c
   985  000854  1037               	iorwf	(dtoa@s+1)^0,w,c
   986  000856  B4D8               	btfsc	status,2,c
   987  000858  EF30  F004         	goto	u711
   988  00085C  EF32  F004         	goto	u710
   989  000860                     u711:
   990  000860  EF42  F004         	goto	l1312
   991  000864                     u710:
   992  000864                     
   993                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
   994  000864  1E3F               	comf	(dtoa@n+7)^0,f,c
   995  000866  1E3E               	comf	(dtoa@n+6)^0,f,c
   996  000868  1E3D               	comf	(dtoa@n+5)^0,f,c
   997  00086A  1E3C               	comf	(dtoa@n+4)^0,f,c
   998  00086C  1E3B               	comf	(dtoa@n+3)^0,f,c
   999  00086E  1E3A               	comf	(dtoa@n+2)^0,f,c
  1000  000870  1E39               	comf	(dtoa@n+1)^0,f,c
  1001  000872  6C38               	negf	dtoa@n^0,c
  1002  000874  0E00               	movlw	0
  1003  000876  2239               	addwfc	(dtoa@n+1)^0,f,c
  1004  000878  223A               	addwfc	(dtoa@n+2)^0,f,c
  1005  00087A  223B               	addwfc	(dtoa@n+3)^0,f,c
  1006  00087C  223C               	addwfc	(dtoa@n+4)^0,f,c
  1007  00087E  223D               	addwfc	(dtoa@n+5)^0,f,c
  1008  000880  223E               	addwfc	(dtoa@n+6)^0,f,c
  1009  000882  223F               	addwfc	(dtoa@n+7)^0,f,c
  1010  000884                     l1312:
  1011                           
  1012                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  1013  000884  0100               	movlb	0	; () banked
  1014  000886  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1015  000888  EF48  F004         	goto	u721
  1016  00088C  EF4A  F004         	goto	u720
  1017  000890                     u721:
  1018  000890  EF4B  F004         	goto	l1316
  1019  000894                     u720:
  1020  000894                     
  1021                           ; BSR set to: 0
  1022                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  1023  000894  9366               	bcf	_flags& (0+255),1,b
  1024  000896                     l1316:
  1025                           
  1026                           ; BSR set to: 0
  1027                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  1028  000896  BF65               	btfsc	(_prec+1)& (0+255),7,b
  1029  000898  EF58  F004         	goto	u730
  1030  00089C  5165               	movf	(_prec+1)& (0+255),w,b
  1031  00089E  E106               	bnz	u731
  1032  0008A0  0564               	decf	_prec& (0+255),w,b
  1033  0008A2  B0D8               	btfsc	status,0,c
  1034  0008A4  EF56  F004         	goto	u731
  1035  0008A8  EF58  F004         	goto	u730
  1036  0008AC                     u731:
  1037  0008AC  EF5E  F004         	goto	l763
  1038  0008B0                     u730:
  1039  0008B0                     
  1040                           ; BSR set to: 0
  1041  0008B0  0E00               	movlw	0
  1042  0008B2  6E33               	movwf	(dtoa@p+1)^0,c
  1043  0008B4  0E01               	movlw	1
  1044  0008B6  6E32               	movwf	dtoa@p^0,c
  1045  0008B8  EF62  F004         	goto	l765
  1046  0008BC                     l763:
  1047                           
  1048                           ; BSR set to: 0
  1049  0008BC  C064  F032         	movff	_prec,dtoa@p
  1050  0008C0  C065  F033         	movff	_prec+1,dtoa@p+1
  1051  0008C4                     l765:
  1052                           
  1053                           ; BSR set to: 0
  1054                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  1055  0008C4  C062  F034         	movff	_width,dtoa@w
  1056  0008C8  C063  F035         	movff	_width+1,dtoa@w+1
  1057  0008CC                     
  1058                           ; BSR set to: 0
  1059                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  1060  0008CC  5036               	movf	dtoa@s^0,w,c
  1061  0008CE  1037               	iorwf	(dtoa@s+1)^0,w,c
  1062  0008D0  A4D8               	btfss	status,2,c
  1063  0008D2  EF6D  F004         	goto	u741
  1064  0008D6  EF6F  F004         	goto	u740
  1065  0008DA                     u741:
  1066  0008DA  EF76  F004         	goto	l1324
  1067  0008DE                     u740:
  1068  0008DE                     
  1069                           ; BSR set to: 0
  1070  0008DE  A566               	btfss	_flags& (0+255),2,b
  1071  0008E0  EF74  F004         	goto	u751
  1072  0008E4  EF76  F004         	goto	u750
  1073  0008E8                     u751:
  1074  0008E8  EF79  F004         	goto	l1326
  1075  0008EC                     u750:
  1076  0008EC                     l1324:
  1077                           
  1078                           ; BSR set to: 0
  1079                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  1080  0008EC  0634               	decf	dtoa@w^0,f,c
  1081  0008EE  A0D8               	btfss	status,0,c
  1082  0008F0  0635               	decf	(dtoa@w+1)^0,f,c
  1083  0008F2                     l1326:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  1087  0008F2  0E00               	movlw	0
  1088  0008F4  6E41               	movwf	(dtoa@i+1)^0,c
  1089  0008F6  0E1F               	movlw	31
  1090  0008F8  6E40               	movwf	dtoa@i^0,c
  1091  0008FA                     
  1092                           ; BSR set to: 0
  1093                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  1094  0008FA  0E00               	movlw	0
  1095  0008FC  6F87               	movwf	(_dbuf+31)& (0+255),b
  1096                           
  1097                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1098  0008FE  EFFD  F004         	goto	l1340
  1099  000902                     l1330:
  1100                           
  1101                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  1102  000902  0640               	decf	dtoa@i^0,f,c
  1103  000904  A0D8               	btfss	status,0,c
  1104  000906  0641               	decf	(dtoa@i+1)^0,f,c
  1105  000908                     
  1106                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  1107  000908  0E68               	movlw	low _dbuf
  1108  00090A  2440               	addwf	dtoa@i^0,w,c
  1109  00090C  6ED9               	movwf	fsr2l,c
  1110  00090E  0E00               	movlw	high _dbuf
  1111  000910  2041               	addwfc	(dtoa@i+1)^0,w,c
  1112  000912  6EDA               	movwf	fsr2h,c
  1113  000914  C038  F001         	movff	dtoa@n,___aomod@dividend
  1114  000918  C039  F002         	movff	dtoa@n+1,___aomod@dividend+1
  1115  00091C  C03A  F003         	movff	dtoa@n+2,___aomod@dividend+2
  1116  000920  C03B  F004         	movff	dtoa@n+3,___aomod@dividend+3
  1117  000924  C03C  F005         	movff	dtoa@n+4,___aomod@dividend+4
  1118  000928  C03D  F006         	movff	dtoa@n+5,___aomod@dividend+5
  1119  00092C  C03E  F007         	movff	dtoa@n+6,___aomod@dividend+6
  1120  000930  C03F  F008         	movff	dtoa@n+7,___aomod@dividend+7
  1121  000934  0E0A               	movlw	10
  1122  000936  6E09               	movwf	___aomod@divisor^0,c
  1123  000938  0E00               	movlw	0
  1124  00093A  6E0A               	movwf	(___aomod@divisor+1)^0,c
  1125  00093C  0E00               	movlw	0
  1126  00093E  6E0B               	movwf	(___aomod@divisor+2)^0,c
  1127  000940  0E00               	movlw	0
  1128  000942  6E0C               	movwf	(___aomod@divisor+3)^0,c
  1129  000944  0E00               	movlw	0
  1130  000946  6E0D               	movwf	(___aomod@divisor+4)^0,c
  1131  000948  0E00               	movlw	0
  1132  00094A  6E0E               	movwf	(___aomod@divisor+5)^0,c
  1133  00094C  0E00               	movlw	0
  1134  00094E  6E0F               	movwf	(___aomod@divisor+6)^0,c
  1135  000950  0E00               	movlw	0
  1136  000952  6E10               	movwf	(___aomod@divisor+7)^0,c
  1137  000954  EC1D  F007         	call	___aomod	;wreg free
  1138  000958  C001  F028         	movff	?___aomod,??_dtoa
  1139  00095C  C002  F029         	movff	?___aomod+1,??_dtoa+1
  1140  000960  C003  F02A         	movff	?___aomod+2,??_dtoa+2
  1141  000964  C004  F02B         	movff	?___aomod+3,??_dtoa+3
  1142  000968  C005  F02C         	movff	?___aomod+4,??_dtoa+4
  1143  00096C  C006  F02D         	movff	?___aomod+5,??_dtoa+5
  1144  000970  C007  F02E         	movff	?___aomod+6,??_dtoa+6
  1145  000974  C008  F02F         	movff	?___aomod+7,??_dtoa+7
  1146  000978  C028  F013         	movff	??_dtoa,abs@a
  1147  00097C  C02A  F014         	movff	??_dtoa+2,abs@a+1
  1148  000980  EC27  F009         	call	_abs	;wreg free
  1149  000984  5013               	movf	?_abs^0,w,c
  1150  000986  0F30               	addlw	48
  1151  000988  6EDF               	movwf	indf2,c
  1152  00098A                     
  1153                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  1154  00098A  0632               	decf	dtoa@p^0,f,c
  1155  00098C  A0D8               	btfss	status,0,c
  1156  00098E  0633               	decf	(dtoa@p+1)^0,f,c
  1157  000990                     
  1158                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  1159  000990  0634               	decf	dtoa@w^0,f,c
  1160  000992  A0D8               	btfss	status,0,c
  1161  000994  0635               	decf	(dtoa@w+1)^0,f,c
  1162  000996                     
  1163                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  1164  000996  C038  F001         	movff	dtoa@n,___aodiv@dividend
  1165  00099A  C039  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  1166  00099E  C03A  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  1167  0009A2  C03B  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  1168  0009A6  C03C  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  1169  0009AA  C03D  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  1170  0009AE  C03E  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  1171  0009B2  C03F  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  1172  0009B6  0E0A               	movlw	10
  1173  0009B8  6E09               	movwf	___aodiv@divisor^0,c
  1174  0009BA  0E00               	movlw	0
  1175  0009BC  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  1176  0009BE  0E00               	movlw	0
  1177  0009C0  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  1178  0009C2  0E00               	movlw	0
  1179  0009C4  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  1180  0009C6  0E00               	movlw	0
  1181  0009C8  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  1182  0009CA  0E00               	movlw	0
  1183  0009CC  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  1184  0009CE  0E00               	movlw	0
  1185  0009D0  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  1186  0009D2  0E00               	movlw	0
  1187  0009D4  6E10               	movwf	(___aodiv@divisor+7)^0,c
  1188  0009D6  EC59  F006         	call	___aodiv	;wreg free
  1189  0009DA  C001  F038         	movff	?___aodiv,dtoa@n
  1190  0009DE  C002  F039         	movff	?___aodiv+1,dtoa@n+1
  1191  0009E2  C003  F03A         	movff	?___aodiv+2,dtoa@n+2
  1192  0009E6  C004  F03B         	movff	?___aodiv+3,dtoa@n+3
  1193  0009EA  C005  F03C         	movff	?___aodiv+4,dtoa@n+4
  1194  0009EE  C006  F03D         	movff	?___aodiv+5,dtoa@n+5
  1195  0009F2  C007  F03E         	movff	?___aodiv+6,dtoa@n+6
  1196  0009F6  C008  F03F         	movff	?___aodiv+7,dtoa@n+7
  1197  0009FA                     l1340:
  1198                           
  1199                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  1200  0009FA  BE41               	btfsc	(dtoa@i+1)^0,7,c
  1201  0009FC  EF08  F005         	goto	u761
  1202  000A00  5041               	movf	(dtoa@i+1)^0,w,c
  1203  000A02  E108               	bnz	u760
  1204  000A04  0440               	decf	dtoa@i^0,w,c
  1205  000A06  A0D8               	btfss	status,0,c
  1206  000A08  EF08  F005         	goto	u761
  1207  000A0C  EF0A  F005         	goto	u760
  1208  000A10                     u761:
  1209  000A10  EF3B  F005         	goto	l1350
  1210  000A14                     u760:
  1211  000A14  5038               	movf	dtoa@n^0,w,c
  1212  000A16  1039               	iorwf	(dtoa@n+1)^0,w,c
  1213  000A18  103A               	iorwf	(dtoa@n+2)^0,w,c
  1214  000A1A  103B               	iorwf	(dtoa@n+3)^0,w,c
  1215  000A1C  103C               	iorwf	(dtoa@n+4)^0,w,c
  1216  000A1E  103D               	iorwf	(dtoa@n+5)^0,w,c
  1217  000A20  103E               	iorwf	(dtoa@n+6)^0,w,c
  1218  000A22  103F               	iorwf	(dtoa@n+7)^0,w,c
  1219  000A24  A4D8               	btfss	status,2,c
  1220  000A26  EF17  F005         	goto	u771
  1221  000A2A  EF19  F005         	goto	u770
  1222  000A2E                     u771:
  1223  000A2E  EF81  F004         	goto	l1330
  1224  000A32                     u770:
  1225  000A32  BE33               	btfsc	(dtoa@p+1)^0,7,c
  1226  000A34  EF26  F005         	goto	u780
  1227  000A38  5033               	movf	(dtoa@p+1)^0,w,c
  1228  000A3A  E106               	bnz	u781
  1229  000A3C  0432               	decf	dtoa@p^0,w,c
  1230  000A3E  B0D8               	btfsc	status,0,c
  1231  000A40  EF24  F005         	goto	u781
  1232  000A44  EF26  F005         	goto	u780
  1233  000A48                     u781:
  1234  000A48  EF81  F004         	goto	l1330
  1235  000A4C                     u780:
  1236  000A4C  BE35               	btfsc	(dtoa@w+1)^0,7,c
  1237  000A4E  EF31  F005         	goto	u791
  1238  000A52  5035               	movf	(dtoa@w+1)^0,w,c
  1239  000A54  E108               	bnz	u790
  1240  000A56  0434               	decf	dtoa@w^0,w,c
  1241  000A58  A0D8               	btfss	status,0,c
  1242  000A5A  EF31  F005         	goto	u791
  1243  000A5E  EF33  F005         	goto	u790
  1244  000A62                     u791:
  1245  000A62  EF3B  F005         	goto	l1350
  1246  000A66                     u790:
  1247  000A66  0100               	movlb	0	; () banked
  1248  000A68  B366               	btfsc	_flags& (0+255),1,b
  1249  000A6A  EF39  F005         	goto	u801
  1250  000A6E  EF3B  F005         	goto	u800
  1251  000A72                     u801:
  1252  000A72  EF81  F004         	goto	l1330
  1253  000A76                     u800:
  1254  000A76                     l1350:
  1255                           
  1256                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  1257  000A76  5036               	movf	dtoa@s^0,w,c
  1258  000A78  1037               	iorwf	(dtoa@s+1)^0,w,c
  1259  000A7A  A4D8               	btfss	status,2,c
  1260  000A7C  EF42  F005         	goto	u811
  1261  000A80  EF44  F005         	goto	u810
  1262  000A84                     u811:
  1263  000A84  EF4C  F005         	goto	l1354
  1264  000A88                     u810:
  1265  000A88  0100               	movlb	0	; () banked
  1266  000A8A  A566               	btfss	_flags& (0+255),2,b
  1267  000A8C  EF4A  F005         	goto	u821
  1268  000A90  EF4C  F005         	goto	u820
  1269  000A94                     u821:
  1270  000A94  EF6A  F005         	goto	l1364
  1271  000A98                     u820:
  1272  000A98                     l1354:
  1273                           
  1274                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  1275  000A98  0640               	decf	dtoa@i^0,f,c
  1276  000A9A  A0D8               	btfss	status,0,c
  1277  000A9C  0641               	decf	(dtoa@i+1)^0,f,c
  1278  000A9E                     
  1279                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  1280  000A9E  5036               	movf	dtoa@s^0,w,c
  1281  000AA0  1037               	iorwf	(dtoa@s+1)^0,w,c
  1282  000AA2  A4D8               	btfss	status,2,c
  1283  000AA4  EF56  F005         	goto	u831
  1284  000AA8  EF58  F005         	goto	u830
  1285  000AAC                     u831:
  1286  000AAC  EF5E  F005         	goto	l1360
  1287  000AB0                     u830:
  1288  000AB0  0E00               	movlw	0
  1289  000AB2  6E31               	movwf	(_dtoa$623+1)^0,c
  1290  000AB4  0E2B               	movlw	43
  1291  000AB6  6E30               	movwf	_dtoa$623^0,c
  1292  000AB8  EF62  F005         	goto	l1362
  1293  000ABC                     l1360:
  1294  000ABC  0E00               	movlw	0
  1295  000ABE  6E31               	movwf	(_dtoa$623+1)^0,c
  1296  000AC0  0E2D               	movlw	45
  1297  000AC2  6E30               	movwf	_dtoa$623^0,c
  1298  000AC4                     l1362:
  1299  000AC4  0E68               	movlw	low _dbuf
  1300  000AC6  2440               	addwf	dtoa@i^0,w,c
  1301  000AC8  6ED9               	movwf	fsr2l,c
  1302  000ACA  0E00               	movlw	high _dbuf
  1303  000ACC  2041               	addwfc	(dtoa@i+1)^0,w,c
  1304  000ACE  6EDA               	movwf	fsr2h,c
  1305  000AD0  C030  FFDF         	movff	_dtoa$623,indf2
  1306  000AD4                     l1364:
  1307                           
  1308                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  1309  000AD4  C01E  F013         	movff	dtoa@fp,pad@fp
  1310  000AD8  C01F  F014         	movff	dtoa@fp+1,pad@fp+1
  1311  000ADC  0E68               	movlw	low _dbuf
  1312  000ADE  2440               	addwf	dtoa@i^0,w,c
  1313  000AE0  6E15               	movwf	pad@buf^0,c
  1314  000AE2  0E00               	movlw	high _dbuf
  1315  000AE4  2041               	addwfc	(dtoa@i+1)^0,w,c
  1316  000AE6  6E16               	movwf	(pad@buf+1)^0,c
  1317  000AE8  C034  F017         	movff	dtoa@w,pad@p
  1318  000AEC  C035  F018         	movff	dtoa@w+1,pad@p+1
  1319  000AF0  ECCF  F007         	call	_pad	;wreg free
  1320  000AF4  C013  F01E         	movff	?_pad,?_dtoa
  1321  000AF8  C014  F01F         	movff	?_pad+1,?_dtoa+1
  1322  000AFC  0012               	return		;funcret
  1323  000AFE                     __end_of_dtoa:
  1324                           	callstack 0
  1325                           
  1326 ;; *************** function _pad *****************
  1327 ;; Defined at:
  1328 ;;		line 72 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  1329 ;; Parameters:    Size  Location     Type
  1330 ;;  fp              2   18[COMRAM] PTR struct _IO_FILE
  1331 ;;		 -> NULL(0), 
  1332 ;;  buf             2   20[COMRAM] PTR unsigned char 
  1333 ;;		 -> dbuf(32), 
  1334 ;;  p               2   22[COMRAM] int 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;  w               2   27[COMRAM] int 
  1337 ;;  i               2   25[COMRAM] int 
  1338 ;; Return value:  Size  Location     Type
  1339 ;;                  2   18[COMRAM] int 
  1340 ;; Registers used:
  1341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1342 ;; Tracked objects:
  1343 ;;		On entry : 0/0
  1344 ;;		On exit  : 0/0
  1345 ;;		Unchanged: 0/0
  1346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1347 ;;      Params:         6       0       0       0       0       0       0       0       0
  1348 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1349 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1350 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1351 ;;Total ram usage:       11 bytes
  1352 ;; Hardware stack levels used: 1
  1353 ;; Hardware stack levels required when called: 3
  1354 ;; This function calls:
  1355 ;;		_fputc
  1356 ;;		_fputs
  1357 ;;		_strlen
  1358 ;; This function is called by:
  1359 ;;		_dtoa
  1360 ;; This function uses a non-reentrant model
  1361 ;;
  1362                           
  1363                           	psect	text5
  1364  000F9E                     __ptext5:
  1365                           	callstack 0
  1366  000F9E                     _pad:
  1367                           	callstack 23
  1368  000F9E                     
  1369                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.32/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  1370  000F9E  0100               	movlb	0	; () banked
  1371  000FA0  A166               	btfss	_flags& (0+255),0,b
  1372  000FA2  EFD5  F007         	goto	u641
  1373  000FA6  EFD7  F007         	goto	u640
  1374  000FAA                     u641:
  1375  000FAA  EFE1  F007         	goto	l1284
  1376  000FAE                     u640:
  1377  000FAE                     
  1378                           ; BSR set to: 0
  1379                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  1380  000FAE  C015  F00C         	movff	pad@buf,fputs@s
  1381  000FB2  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1382  000FB6  C013  F00E         	movff	pad@fp,fputs@fp
  1383  000FBA  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1384  000FBE  EC05  F009         	call	_fputs	;wreg free
  1385  000FC2                     l1284:
  1386                           
  1387                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  1388  000FC2  BE18               	btfsc	(pad@p+1)^0,7,c
  1389  000FC4  EFE6  F007         	goto	u651
  1390  000FC8  EFE8  F007         	goto	u650
  1391  000FCC                     u651:
  1392  000FCC  EFEE  F007         	goto	l1288
  1393  000FD0                     u650:
  1394  000FD0  C017  F01C         	movff	pad@p,pad@w
  1395  000FD4  C018  F01D         	movff	pad@p+1,pad@w+1
  1396  000FD8  EFF2  F007         	goto	l752
  1397  000FDC                     l1288:
  1398  000FDC  0E00               	movlw	0
  1399  000FDE  6E1D               	movwf	(pad@w+1)^0,c
  1400  000FE0  0E00               	movlw	0
  1401  000FE2  6E1C               	movwf	pad@w^0,c
  1402  000FE4                     l752:
  1403                           
  1404                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  1405  000FE4  0E00               	movlw	0
  1406  000FE6  6E1B               	movwf	(pad@i+1)^0,c
  1407  000FE8  0E00               	movlw	0
  1408  000FEA  6E1A               	movwf	pad@i^0,c
  1409                           
  1410                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1411  000FEC  EF04  F008         	goto	l1294
  1412  000FF0                     l1290:
  1413                           
  1414                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  1415  000FF0  0E00               	movlw	0
  1416  000FF2  6E04               	movwf	(fputc@c+1)^0,c
  1417  000FF4  0E20               	movlw	32
  1418  000FF6  6E03               	movwf	fputc@c^0,c
  1419  000FF8  C013  F005         	movff	pad@fp,fputc@fp
  1420  000FFC  C014  F006         	movff	pad@fp+1,fputc@fp+1
  1421  001000  EC32  F008         	call	_fputc	;wreg free
  1422  001004                     
  1423                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  1424  001004  4A1A               	infsnz	pad@i^0,f,c
  1425  001006  2A1B               	incf	(pad@i+1)^0,f,c
  1426  001008                     l1294:
  1427                           
  1428                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  1429  001008  501C               	movf	pad@w^0,w,c
  1430  00100A  5C1A               	subwf	pad@i^0,w,c
  1431  00100C  501B               	movf	(pad@i+1)^0,w,c
  1432  00100E  0A80               	xorlw	128
  1433  001010  6E19               	movwf	??_pad^0,c
  1434  001012  501D               	movf	(pad@w+1)^0,w,c
  1435  001014  0A80               	xorlw	128
  1436  001016  5819               	subwfb	??_pad^0,w,c
  1437  001018  A0D8               	btfss	status,0,c
  1438  00101A  EF11  F008         	goto	u661
  1439  00101E  EF13  F008         	goto	u660
  1440  001022                     u661:
  1441  001022  EFF8  F007         	goto	l1290
  1442  001026                     u660:
  1443  001026                     
  1444                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  1445  001026  0100               	movlb	0	; () banked
  1446  001028  B166               	btfsc	_flags& (0+255),0,b
  1447  00102A  EF19  F008         	goto	u671
  1448  00102E  EF1B  F008         	goto	u670
  1449  001032                     u671:
  1450  001032  EF25  F008         	goto	l1298
  1451  001036                     u670:
  1452  001036                     
  1453                           ; BSR set to: 0
  1454                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  1455  001036  C015  F00C         	movff	pad@buf,fputs@s
  1456  00103A  C016  F00D         	movff	pad@buf+1,fputs@s+1
  1457  00103E  C013  F00E         	movff	pad@fp,fputs@fp
  1458  001042  C014  F00F         	movff	pad@fp+1,fputs@fp+1
  1459  001046  EC05  F009         	call	_fputs	;wreg free
  1460  00104A                     l1298:
  1461                           
  1462                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  1463  00104A  C015  F001         	movff	pad@buf,strlen@s
  1464  00104E  C016  F002         	movff	pad@buf+1,strlen@s+1
  1465  001052  EC47  F009         	call	_strlen	;wreg free
  1466  001056  501C               	movf	pad@w^0,w,c
  1467  001058  2401               	addwf	?_strlen^0,w,c
  1468  00105A  6E13               	movwf	?_pad^0,c
  1469  00105C  501D               	movf	(pad@w+1)^0,w,c
  1470  00105E  2002               	addwfc	(?_strlen+1)^0,w,c
  1471  001060  6E14               	movwf	(?_pad+1)^0,c
  1472  001062  0012               	return		;funcret
  1473  001064                     __end_of_pad:
  1474                           	callstack 0
  1475                           
  1476 ;; *************** function _strlen *****************
  1477 ;; Defined at:
  1478 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  1479 ;; Parameters:    Size  Location     Type
  1480 ;;  s               2    0[COMRAM] PTR const unsigned char 
  1481 ;;		 -> dbuf(32), 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  a               2    2[COMRAM] PTR const unsigned char 
  1484 ;;		 -> dbuf(32), 
  1485 ;; Return value:  Size  Location     Type
  1486 ;;                  2    0[COMRAM] unsigned int 
  1487 ;; Registers used:
  1488 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1489 ;; Tracked objects:
  1490 ;;		On entry : 0/0
  1491 ;;		On exit  : 0/0
  1492 ;;		Unchanged: 0/0
  1493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1494 ;;      Params:         2       0       0       0       0       0       0       0       0
  1495 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1496 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1497 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1498 ;;Total ram usage:        4 bytes
  1499 ;; Hardware stack levels used: 1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_pad
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text6
  1508  00128E                     __ptext6:
  1509                           	callstack 0
  1510  00128E                     _strlen:
  1511                           	callstack 25
  1512  00128E  C001  F003         	movff	strlen@s,strlen@a
  1513  001292  C002  F004         	movff	strlen@s+1,strlen@a+1
  1514  001296  EF4F  F009         	goto	l1194
  1515  00129A                     l1192:
  1516  00129A  4A01               	infsnz	strlen@s^0,f,c
  1517  00129C  2A02               	incf	(strlen@s+1)^0,f,c
  1518  00129E                     l1194:
  1519  00129E  C001  FFD9         	movff	strlen@s,fsr2l
  1520  0012A2  C002  FFDA         	movff	strlen@s+1,fsr2h
  1521  0012A6  50DF               	movf	indf2,w,c
  1522  0012A8  A4D8               	btfss	status,2,c
  1523  0012AA  EF59  F009         	goto	u501
  1524  0012AE  EF5B  F009         	goto	u500
  1525  0012B2                     u501:
  1526  0012B2  EF4D  F009         	goto	l1192
  1527  0012B6                     u500:
  1528  0012B6  5003               	movf	strlen@a^0,w,c
  1529  0012B8  5C01               	subwf	strlen@s^0,w,c
  1530  0012BA  6E01               	movwf	?_strlen^0,c
  1531  0012BC  5004               	movf	(strlen@a+1)^0,w,c
  1532  0012BE  5802               	subwfb	(strlen@s+1)^0,w,c
  1533  0012C0  6E02               	movwf	(?_strlen+1)^0,c
  1534  0012C2  0012               	return		;funcret
  1535  0012C4                     __end_of_strlen:
  1536                           	callstack 0
  1537                           
  1538 ;; *************** function _fputs *****************
  1539 ;; Defined at:
  1540 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  1541 ;; Parameters:    Size  Location     Type
  1542 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1543 ;;		 -> dbuf(32), 
  1544 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  1545 ;;		 -> NULL(0), 
  1546 ;; Auto vars:     Size  Location     Type
  1547 ;;  i               2   16[COMRAM] int 
  1548 ;;  c               1   15[COMRAM] unsigned char 
  1549 ;; Return value:  Size  Location     Type
  1550 ;;                  2   11[COMRAM] int 
  1551 ;; Registers used:
  1552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1553 ;; Tracked objects:
  1554 ;;		On entry : 0/0
  1555 ;;		On exit  : 0/0
  1556 ;;		Unchanged: 0/0
  1557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1558 ;;      Params:         4       0       0       0       0       0       0       0       0
  1559 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1560 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1561 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1562 ;;Total ram usage:        7 bytes
  1563 ;; Hardware stack levels used: 1
  1564 ;; Hardware stack levels required when called: 2
  1565 ;; This function calls:
  1566 ;;		_fputc
  1567 ;; This function is called by:
  1568 ;;		_pad
  1569 ;; This function uses a non-reentrant model
  1570 ;;
  1571                           
  1572                           	psect	text7
  1573  00120A                     __ptext7:
  1574                           	callstack 0
  1575  00120A                     _fputs:
  1576                           	callstack 23
  1577  00120A  0E00               	movlw	0
  1578  00120C  6E12               	movwf	(fputs@i+1)^0,c
  1579  00120E  0E00               	movlw	0
  1580  001210  6E11               	movwf	fputs@i^0,c
  1581  001212  EF16  F009         	goto	l1188
  1582  001216                     l1184:
  1583  001216  C010  F003         	movff	fputs@c,fputc@c
  1584  00121A  6A04               	clrf	(fputc@c+1)^0,c
  1585  00121C  C00E  F005         	movff	fputs@fp,fputc@fp
  1586  001220  C00F  F006         	movff	fputs@fp+1,fputc@fp+1
  1587  001224  EC32  F008         	call	_fputc	;wreg free
  1588  001228  4A11               	infsnz	fputs@i^0,f,c
  1589  00122A  2A12               	incf	(fputs@i+1)^0,f,c
  1590  00122C                     l1188:
  1591  00122C  5011               	movf	fputs@i^0,w,c
  1592  00122E  240C               	addwf	fputs@s^0,w,c
  1593  001230  6ED9               	movwf	fsr2l,c
  1594  001232  5012               	movf	(fputs@i+1)^0,w,c
  1595  001234  200D               	addwfc	(fputs@s+1)^0,w,c
  1596  001236  6EDA               	movwf	fsr2h,c
  1597  001238  50DF               	movf	indf2,w,c
  1598  00123A  6E10               	movwf	fputs@c^0,c
  1599  00123C  5010               	movf	fputs@c^0,w,c
  1600  00123E  A4D8               	btfss	status,2,c
  1601  001240  EF24  F009         	goto	u491
  1602  001244  EF26  F009         	goto	u490
  1603  001248                     u491:
  1604  001248  EF0B  F009         	goto	l1184
  1605  00124C                     u490:
  1606  00124C  0012               	return		;funcret
  1607  00124E                     __end_of_fputs:
  1608                           	callstack 0
  1609                           
  1610 ;; *************** function _fputc *****************
  1611 ;; Defined at:
  1612 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;  c               2    2[COMRAM] int 
  1615 ;;  fp              2    4[COMRAM] PTR struct _IO_FILE
  1616 ;;		 -> NULL(0), 
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  2    2[COMRAM] int 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1628 ;;      Params:         4       0       0       0       0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1630 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1631 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1632 ;;Total ram usage:        9 bytes
  1633 ;; Hardware stack levels used: 1
  1634 ;; Hardware stack levels required when called: 1
  1635 ;; This function calls:
  1636 ;;		_putch
  1637 ;; This function is called by:
  1638 ;;		_pad
  1639 ;;		_vfpfcnvrt
  1640 ;;		_fputs
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           	psect	text8
  1645  001064                     __ptext8:
  1646                           	callstack 0
  1647  001064                     _fputc:
  1648                           	callstack 26
  1649  001064  5005               	movf	fputc@fp^0,w,c
  1650  001066  1006               	iorwf	(fputc@fp+1)^0,w,c
  1651  001068  B4D8               	btfsc	status,2,c
  1652  00106A  EF39  F008         	goto	u451
  1653  00106E  EF3B  F008         	goto	u450
  1654  001072                     u451:
  1655  001072  EF44  F008         	goto	l1172
  1656  001076                     u450:
  1657  001076  5005               	movf	fputc@fp^0,w,c
  1658  001078  1006               	iorwf	(fputc@fp+1)^0,w,c
  1659  00107A  A4D8               	btfss	status,2,c
  1660  00107C  EF42  F008         	goto	u461
  1661  001080  EF44  F008         	goto	u460
  1662  001084                     u461:
  1663  001084  EF49  F008         	goto	l1174
  1664  001088                     u460:
  1665  001088                     l1172:
  1666  001088  5003               	movf	fputc@c^0,w,c
  1667  00108A  EC62  F009         	call	_putch
  1668  00108E  EF7C  F008         	goto	l816
  1669  001092                     l1174:
  1670  001092  EE20 F004          	lfsr	2,4
  1671  001096  5005               	movf	fputc@fp^0,w,c
  1672  001098  26D9               	addwf	fsr2l,f,c
  1673  00109A  5006               	movf	(fputc@fp+1)^0,w,c
  1674  00109C  22DA               	addwfc	fsr2h,f,c
  1675  00109E  50DE               	movf	postinc2,w,c
  1676  0010A0  10DE               	iorwf	postinc2,w,c
  1677  0010A2  B4D8               	btfsc	status,2,c
  1678  0010A4  EF56  F008         	goto	u471
  1679  0010A8  EF58  F008         	goto	u470
  1680  0010AC                     u471:
  1681  0010AC  EF73  F008         	goto	l1178
  1682  0010B0                     u470:
  1683  0010B0  EE20 F004          	lfsr	2,4
  1684  0010B4  5005               	movf	fputc@fp^0,w,c
  1685  0010B6  26D9               	addwf	fsr2l,f,c
  1686  0010B8  5006               	movf	(fputc@fp+1)^0,w,c
  1687  0010BA  22DA               	addwfc	fsr2h,f,c
  1688  0010BC  EE10 F002          	lfsr	1,2
  1689  0010C0  5005               	movf	fputc@fp^0,w,c
  1690  0010C2  26E1               	addwf	fsr1l,f,c
  1691  0010C4  5006               	movf	(fputc@fp+1)^0,w,c
  1692  0010C6  22E2               	addwfc	fsr1h,f,c
  1693  0010C8  50DE               	movf	postinc2,w,c
  1694  0010CA  5CE6               	subwf	postinc1,w,c
  1695  0010CC  50E6               	movf	postinc1,w,c
  1696  0010CE  0A80               	xorlw	128
  1697  0010D0  6E0B               	movwf	(??_fputc+4)^0,c
  1698  0010D2  50DE               	movf	postinc2,w,c
  1699  0010D4  0A80               	xorlw	128
  1700  0010D6  580B               	subwfb	(??_fputc+4)^0,w,c
  1701  0010D8  B0D8               	btfsc	status,0,c
  1702  0010DA  EF71  F008         	goto	u481
  1703  0010DE  EF73  F008         	goto	u480
  1704  0010E2                     u481:
  1705  0010E2  EF7C  F008         	goto	l816
  1706  0010E6                     u480:
  1707  0010E6                     l1178:
  1708  0010E6  EE20 F002          	lfsr	2,2
  1709  0010EA  5005               	movf	fputc@fp^0,w,c
  1710  0010EC  26D9               	addwf	fsr2l,f,c
  1711  0010EE  5006               	movf	(fputc@fp+1)^0,w,c
  1712  0010F0  22DA               	addwfc	fsr2h,f,c
  1713  0010F2  2ADE               	incf	postinc2,f,c
  1714  0010F4  0E00               	movlw	0
  1715  0010F6  22DD               	addwfc	postdec2,f,c
  1716  0010F8                     l816:
  1717  0010F8  0012               	return		;funcret
  1718  0010FA                     __end_of_fputc:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _putch *****************
  1722 ;; Defined at:
  1723 ;;		line 67 in file "main.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  data            1    wreg     unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  data            1    0[COMRAM] unsigned char 
  1728 ;;  Activa          1    1[COMRAM] unsigned char 
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2, status,0
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0
  1739 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1741 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1742 ;;Total ram usage:        2 bytes
  1743 ;; Hardware stack levels used: 1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_fputc
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text9
  1752  0012C4                     __ptext9:
  1753                           	callstack 0
  1754  0012C4                     _putch:
  1755                           	callstack 26
  1756                           
  1757                           ;incstack = 0
  1758                           ;putch@data stored from wreg
  1759  0012C4  6E01               	movwf	putch@data^0,c
  1760  0012C6                     
  1761                           ;main.c: 68:     char Activa;;main.c: 69:     Activa = data & 0xF0;
  1762  0012C6  5001               	movf	putch@data^0,w,c
  1763  0012C8  0BF0               	andlw	240
  1764  0012CA  6E02               	movwf	putch@Activa^0,c
  1765                           
  1766                           ;main.c: 70:     LATD = Activa | 0x05;
  1767  0012CC  5002               	movf	putch@Activa^0,w,c
  1768  0012CE  0905               	iorlw	5
  1769  0012D0  6E8C               	movwf	140,c	;volatile
  1770  0012D2                     
  1771                           ;main.c: 71:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1772  0012D2  D000               	nop2		;2 cycle nop
  1773                           
  1774                           ;main.c: 73:     LATD = Activa | 0x01;
  1775  0012D4  5002               	movf	putch@Activa^0,w,c
  1776  0012D6  0901               	iorlw	1
  1777  0012D8  6E8C               	movwf	140,c	;volatile
  1778  0012DA                     
  1779                           ;main.c: 74:     _delay((unsigned long)((1)*(1000000/4000.0)));
  1780  0012DA  0E53               	movlw	83
  1781  0012DC                     u907:
  1782  0012DC  2EE8               	decfsz	wreg,f,c
  1783  0012DE  D7FE               	bra	u907
  1784  0012E0  F000               	nop	
  1785  0012E2                     
  1786                           ;main.c: 76:     Activa = data << 4;
  1787  0012E2  3801               	swapf	putch@data^0,w,c
  1788  0012E4  0BF0               	andlw	240
  1789  0012E6  6E02               	movwf	putch@Activa^0,c
  1790  0012E8                     
  1791                           ;main.c: 77:     LATD = Activa | 0x05;
  1792  0012E8  5002               	movf	putch@Activa^0,w,c
  1793  0012EA  0905               	iorlw	5
  1794  0012EC  6E8C               	movwf	140,c	;volatile
  1795  0012EE                     
  1796                           ;main.c: 78:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  1797  0012EE  D000               	nop2		;2 cycle nop
  1798  0012F0                     
  1799                           ;main.c: 79:     LATD = Activa | 0x01;
  1800  0012F0  5002               	movf	putch@Activa^0,w,c
  1801  0012F2  0901               	iorlw	1
  1802  0012F4  6E8C               	movwf	140,c	;volatile
  1803  0012F6  0012               	return		;funcret
  1804  0012F8                     __end_of_putch:
  1805                           	callstack 0
  1806                           
  1807 ;; *************** function _abs *****************
  1808 ;; Defined at:
  1809 ;;		line 1 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;  a               2   18[COMRAM] int 
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  2   18[COMRAM] int 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2, status,0
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1823 ;;      Params:         2       0       0       0       0       0       0       0       0
  1824 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1825 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1826 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1827 ;;Total ram usage:        4 bytes
  1828 ;; Hardware stack levels used: 1
  1829 ;; This function calls:
  1830 ;;		Nothing
  1831 ;; This function is called by:
  1832 ;;		_dtoa
  1833 ;; This function uses a non-reentrant model
  1834 ;;
  1835                           
  1836                           	psect	text10
  1837  00124E                     __ptext10:
  1838                           	callstack 0
  1839  00124E                     _abs:
  1840                           	callstack 26
  1841  00124E  BE14               	btfsc	(abs@a+1)^0,7,c
  1842  001250  EF34  F009         	goto	u680
  1843  001254  5014               	movf	(abs@a+1)^0,w,c
  1844  001256  E106               	bnz	u681
  1845  001258  0413               	decf	abs@a^0,w,c
  1846  00125A  B0D8               	btfsc	status,0,c
  1847  00125C  EF32  F009         	goto	u681
  1848  001260  EF34  F009         	goto	u680
  1849  001264                     u681:
  1850  001264  EF42  F009         	goto	l801
  1851  001268                     u680:
  1852  001268  C013  F015         	movff	abs@a,??_abs
  1853  00126C  C014  F016         	movff	abs@a+1,??_abs+1
  1854  001270  1E15               	comf	??_abs^0,f,c
  1855  001272  1E16               	comf	(??_abs+1)^0,f,c
  1856  001274  4A15               	infsnz	??_abs^0,f,c
  1857  001276  2A16               	incf	(??_abs+1)^0,f,c
  1858  001278  C015  F013         	movff	??_abs,?_abs
  1859  00127C  C016  F014         	movff	??_abs+1,?_abs+1
  1860  001280  EF46  F009         	goto	l804
  1861  001284                     l801:
  1862  001284  C013  F013         	movff	abs@a,?_abs
  1863  001288  C014  F014         	movff	abs@a+1,?_abs+1
  1864  00128C                     l804:
  1865  00128C  0012               	return		;funcret
  1866  00128E                     __end_of_abs:
  1867                           	callstack 0
  1868                           
  1869 ;; *************** function ___aomod *****************
  1870 ;; Defined at:
  1871 ;;		line 9 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  dividend        8    0[COMRAM] long long 
  1874 ;;  divisor         8    8[COMRAM] long long 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  sign            1   17[COMRAM] unsigned char 
  1877 ;;  counter         1   16[COMRAM] unsigned char 
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  8    0[COMRAM] long long 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2, status,0
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:        16       0       0       0       0       0       0       0       0
  1888 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1890 ;;      Totals:        18       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:       18 bytes
  1892 ;; Hardware stack levels used: 1
  1893 ;; This function calls:
  1894 ;;		Nothing
  1895 ;; This function is called by:
  1896 ;;		_dtoa
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           	psect	text11
  1901  000E3A                     __ptext11:
  1902                           	callstack 0
  1903  000E3A                     ___aomod:
  1904                           	callstack 26
  1905  000E3A  0E00               	movlw	0
  1906  000E3C  6E12               	movwf	___aomod@sign^0,c
  1907  000E3E  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  1908  000E40  EF26  F007         	goto	u580
  1909  000E44  EF24  F007         	goto	u581
  1910  000E48                     u581:
  1911  000E48  EF38  F007         	goto	l1252
  1912  000E4C                     u580:
  1913  000E4C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  1914  000E4E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  1915  000E50  1E06               	comf	(___aomod@dividend+5)^0,f,c
  1916  000E52  1E05               	comf	(___aomod@dividend+4)^0,f,c
  1917  000E54  1E04               	comf	(___aomod@dividend+3)^0,f,c
  1918  000E56  1E03               	comf	(___aomod@dividend+2)^0,f,c
  1919  000E58  1E02               	comf	(___aomod@dividend+1)^0,f,c
  1920  000E5A  6C01               	negf	___aomod@dividend^0,c
  1921  000E5C  0E00               	movlw	0
  1922  000E5E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  1923  000E60  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  1924  000E62  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  1925  000E64  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  1926  000E66  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  1927  000E68  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  1928  000E6A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  1929  000E6C  0E01               	movlw	1
  1930  000E6E  6E12               	movwf	___aomod@sign^0,c
  1931  000E70                     l1252:
  1932  000E70  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  1933  000E72  EF3F  F007         	goto	u590
  1934  000E76  EF3D  F007         	goto	u591
  1935  000E7A                     u591:
  1936  000E7A  EF4F  F007         	goto	l1256
  1937  000E7E                     u590:
  1938  000E7E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  1939  000E80  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  1940  000E82  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  1941  000E84  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  1942  000E86  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  1943  000E88  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  1944  000E8A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  1945  000E8C  6C09               	negf	___aomod@divisor^0,c
  1946  000E8E  0E00               	movlw	0
  1947  000E90  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  1948  000E92  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  1949  000E94  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  1950  000E96  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  1951  000E98  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  1952  000E9A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  1953  000E9C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  1954  000E9E                     l1256:
  1955  000E9E  5009               	movf	___aomod@divisor^0,w,c
  1956  000EA0  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  1957  000EA2  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  1958  000EA4  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  1959  000EA6  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  1960  000EA8  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  1961  000EAA  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  1962  000EAC  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  1963  000EAE  B4D8               	btfsc	status,2,c
  1964  000EB0  EF5C  F007         	goto	u601
  1965  000EB4  EF5E  F007         	goto	u600
  1966  000EB8                     u601:
  1967  000EB8  EFA6  F007         	goto	l1272
  1968  000EBC                     u600:
  1969  000EBC  0E01               	movlw	1
  1970  000EBE  6E11               	movwf	___aomod@counter^0,c
  1971  000EC0  EF6C  F007         	goto	l1262
  1972  000EC4                     l1260:
  1973  000EC4  90D8               	bcf	status,0,c
  1974  000EC6  3609               	rlcf	___aomod@divisor^0,f,c
  1975  000EC8  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  1976  000ECA  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  1977  000ECC  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  1978  000ECE  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  1979  000ED0  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  1980  000ED2  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  1981  000ED4  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  1982  000ED6  2A11               	incf	___aomod@counter^0,f,c
  1983  000ED8                     l1262:
  1984  000ED8  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  1985  000EDA  EF71  F007         	goto	u611
  1986  000EDE  EF73  F007         	goto	u610
  1987  000EE2                     u611:
  1988  000EE2  EF62  F007         	goto	l1260
  1989  000EE6                     u610:
  1990  000EE6                     l1264:
  1991  000EE6  5009               	movf	___aomod@divisor^0,w,c
  1992  000EE8  5C01               	subwf	___aomod@dividend^0,w,c
  1993  000EEA  500A               	movf	(___aomod@divisor+1)^0,w,c
  1994  000EEC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  1995  000EEE  500B               	movf	(___aomod@divisor+2)^0,w,c
  1996  000EF0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  1997  000EF2  500C               	movf	(___aomod@divisor+3)^0,w,c
  1998  000EF4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  1999  000EF6  500D               	movf	(___aomod@divisor+4)^0,w,c
  2000  000EF8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  2001  000EFA  500E               	movf	(___aomod@divisor+5)^0,w,c
  2002  000EFC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  2003  000EFE  500F               	movf	(___aomod@divisor+6)^0,w,c
  2004  000F00  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  2005  000F02  5010               	movf	(___aomod@divisor+7)^0,w,c
  2006  000F04  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  2007  000F06  A0D8               	btfss	status,0,c
  2008  000F08  EF88  F007         	goto	u621
  2009  000F0C  EF8A  F007         	goto	u620
  2010  000F10                     u621:
  2011  000F10  EF9A  F007         	goto	l1268
  2012  000F14                     u620:
  2013  000F14  5009               	movf	___aomod@divisor^0,w,c
  2014  000F16  5E01               	subwf	___aomod@dividend^0,f,c
  2015  000F18  500A               	movf	(___aomod@divisor+1)^0,w,c
  2016  000F1A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  2017  000F1C  500B               	movf	(___aomod@divisor+2)^0,w,c
  2018  000F1E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  2019  000F20  500C               	movf	(___aomod@divisor+3)^0,w,c
  2020  000F22  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  2021  000F24  500D               	movf	(___aomod@divisor+4)^0,w,c
  2022  000F26  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  2023  000F28  500E               	movf	(___aomod@divisor+5)^0,w,c
  2024  000F2A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  2025  000F2C  500F               	movf	(___aomod@divisor+6)^0,w,c
  2026  000F2E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  2027  000F30  5010               	movf	(___aomod@divisor+7)^0,w,c
  2028  000F32  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  2029  000F34                     l1268:
  2030  000F34  90D8               	bcf	status,0,c
  2031  000F36  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  2032  000F38  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  2033  000F3A  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  2034  000F3C  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  2035  000F3E  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  2036  000F40  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  2037  000F42  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  2038  000F44  3209               	rrcf	___aomod@divisor^0,f,c
  2039  000F46  2E11               	decfsz	___aomod@counter^0,f,c
  2040  000F48  EF73  F007         	goto	l1264
  2041  000F4C                     l1272:
  2042  000F4C  5012               	movf	___aomod@sign^0,w,c
  2043  000F4E  B4D8               	btfsc	status,2,c
  2044  000F50  EFAC  F007         	goto	u631
  2045  000F54  EFAE  F007         	goto	u630
  2046  000F58                     u631:
  2047  000F58  EFBE  F007         	goto	l1276
  2048  000F5C                     u630:
  2049  000F5C  1E08               	comf	(___aomod@dividend+7)^0,f,c
  2050  000F5E  1E07               	comf	(___aomod@dividend+6)^0,f,c
  2051  000F60  1E06               	comf	(___aomod@dividend+5)^0,f,c
  2052  000F62  1E05               	comf	(___aomod@dividend+4)^0,f,c
  2053  000F64  1E04               	comf	(___aomod@dividend+3)^0,f,c
  2054  000F66  1E03               	comf	(___aomod@dividend+2)^0,f,c
  2055  000F68  1E02               	comf	(___aomod@dividend+1)^0,f,c
  2056  000F6A  6C01               	negf	___aomod@dividend^0,c
  2057  000F6C  0E00               	movlw	0
  2058  000F6E  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  2059  000F70  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  2060  000F72  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  2061  000F74  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  2062  000F76  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  2063  000F78  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  2064  000F7A  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  2065  000F7C                     l1276:
  2066  000F7C  C001  F001         	movff	___aomod@dividend,?___aomod
  2067  000F80  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  2068  000F84  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  2069  000F88  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  2070  000F8C  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  2071  000F90  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  2072  000F94  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  2073  000F98  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  2074  000F9C  0012               	return		;funcret
  2075  000F9E                     __end_of___aomod:
  2076                           	callstack 0
  2077                           
  2078 ;; *************** function ___aodiv *****************
  2079 ;; Defined at:
  2080 ;;		line 9 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  2081 ;; Parameters:    Size  Location     Type
  2082 ;;  dividend        8    0[COMRAM] long long 
  2083 ;;  divisor         8    8[COMRAM] long long 
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;  quotient        8   18[COMRAM] long long 
  2086 ;;  sign            1   17[COMRAM] unsigned char 
  2087 ;;  counter         1   16[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  8    0[COMRAM] long long 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2097 ;;      Params:        16       0       0       0       0       0       0       0       0
  2098 ;;      Locals:        10       0       0       0       0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2100 ;;      Totals:        26       0       0       0       0       0       0       0       0
  2101 ;;Total ram usage:       26 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; This function calls:
  2104 ;;		Nothing
  2105 ;; This function is called by:
  2106 ;;		_dtoa
  2107 ;; This function uses a non-reentrant model
  2108 ;;
  2109                           
  2110                           	psect	text12
  2111  000CB2                     __ptext12:
  2112                           	callstack 0
  2113  000CB2                     ___aodiv:
  2114                           	callstack 26
  2115  000CB2  0E00               	movlw	0
  2116  000CB4  6E12               	movwf	___aodiv@sign^0,c
  2117  000CB6  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  2118  000CB8  EF62  F006         	goto	u510
  2119  000CBC  EF60  F006         	goto	u511
  2120  000CC0                     u511:
  2121  000CC0  EF74  F006         	goto	l1208
  2122  000CC4                     u510:
  2123  000CC4  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  2124  000CC6  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  2125  000CC8  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  2126  000CCA  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  2127  000CCC  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  2128  000CCE  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  2129  000CD0  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  2130  000CD2  6C09               	negf	___aodiv@divisor^0,c
  2131  000CD4  0E00               	movlw	0
  2132  000CD6  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  2133  000CD8  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  2134  000CDA  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  2135  000CDC  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  2136  000CDE  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  2137  000CE0  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  2138  000CE2  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  2139  000CE4  0E01               	movlw	1
  2140  000CE6  6E12               	movwf	___aodiv@sign^0,c
  2141  000CE8                     l1208:
  2142  000CE8  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  2143  000CEA  EF7B  F006         	goto	u520
  2144  000CEE  EF79  F006         	goto	u521
  2145  000CF2                     u521:
  2146  000CF2  EF8D  F006         	goto	l1214
  2147  000CF6                     u520:
  2148  000CF6  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  2149  000CF8  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  2150  000CFA  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  2151  000CFC  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  2152  000CFE  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  2153  000D00  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  2154  000D02  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  2155  000D04  6C01               	negf	___aodiv@dividend^0,c
  2156  000D06  0E00               	movlw	0
  2157  000D08  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  2158  000D0A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  2159  000D0C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  2160  000D0E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  2161  000D10  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  2162  000D12  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  2163  000D14  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  2164  000D16  0E01               	movlw	1
  2165  000D18  1A12               	xorwf	___aodiv@sign^0,f,c
  2166  000D1A                     l1214:
  2167  000D1A  EE20  F013         	lfsr	2,___aodiv@quotient
  2168  000D1E  0E07               	movlw	7
  2169  000D20                     u531:
  2170  000D20  6ADE               	clrf	postinc2,c
  2171  000D22  06E8               	decf	wreg,f,c
  2172  000D24  E2FD               	bc	u531
  2173  000D26  5009               	movf	___aodiv@divisor^0,w,c
  2174  000D28  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  2175  000D2A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  2176  000D2C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  2177  000D2E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  2178  000D30  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  2179  000D32  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  2180  000D34  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  2181  000D36  B4D8               	btfsc	status,2,c
  2182  000D38  EFA0  F006         	goto	u541
  2183  000D3C  EFA2  F006         	goto	u540
  2184  000D40                     u541:
  2185  000D40  EFF4  F006         	goto	l1236
  2186  000D44                     u540:
  2187  000D44  0E01               	movlw	1
  2188  000D46  6E11               	movwf	___aodiv@counter^0,c
  2189  000D48  EFB0  F006         	goto	l1222
  2190  000D4C                     l1220:
  2191  000D4C  90D8               	bcf	status,0,c
  2192  000D4E  3609               	rlcf	___aodiv@divisor^0,f,c
  2193  000D50  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  2194  000D52  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  2195  000D54  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  2196  000D56  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  2197  000D58  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  2198  000D5A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  2199  000D5C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  2200  000D5E  2A11               	incf	___aodiv@counter^0,f,c
  2201  000D60                     l1222:
  2202  000D60  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  2203  000D62  EFB5  F006         	goto	u551
  2204  000D66  EFB7  F006         	goto	u550
  2205  000D6A                     u551:
  2206  000D6A  EFA6  F006         	goto	l1220
  2207  000D6E                     u550:
  2208  000D6E                     l1224:
  2209  000D6E  90D8               	bcf	status,0,c
  2210  000D70  3613               	rlcf	___aodiv@quotient^0,f,c
  2211  000D72  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  2212  000D74  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  2213  000D76  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  2214  000D78  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  2215  000D7A  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  2216  000D7C  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  2217  000D7E  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  2218  000D80  5009               	movf	___aodiv@divisor^0,w,c
  2219  000D82  5C01               	subwf	___aodiv@dividend^0,w,c
  2220  000D84  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2221  000D86  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  2222  000D88  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2223  000D8A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  2224  000D8C  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2225  000D8E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  2226  000D90  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2227  000D92  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  2228  000D94  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2229  000D96  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  2230  000D98  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2231  000D9A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  2232  000D9C  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2233  000D9E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  2234  000DA0  A0D8               	btfss	status,0,c
  2235  000DA2  EFD5  F006         	goto	u561
  2236  000DA6  EFD7  F006         	goto	u560
  2237  000DAA                     u561:
  2238  000DAA  EFE8  F006         	goto	l1232
  2239  000DAE                     u560:
  2240  000DAE  5009               	movf	___aodiv@divisor^0,w,c
  2241  000DB0  5E01               	subwf	___aodiv@dividend^0,f,c
  2242  000DB2  500A               	movf	(___aodiv@divisor+1)^0,w,c
  2243  000DB4  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  2244  000DB6  500B               	movf	(___aodiv@divisor+2)^0,w,c
  2245  000DB8  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  2246  000DBA  500C               	movf	(___aodiv@divisor+3)^0,w,c
  2247  000DBC  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  2248  000DBE  500D               	movf	(___aodiv@divisor+4)^0,w,c
  2249  000DC0  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  2250  000DC2  500E               	movf	(___aodiv@divisor+5)^0,w,c
  2251  000DC4  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  2252  000DC6  500F               	movf	(___aodiv@divisor+6)^0,w,c
  2253  000DC8  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  2254  000DCA  5010               	movf	(___aodiv@divisor+7)^0,w,c
  2255  000DCC  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  2256  000DCE  8013               	bsf	___aodiv@quotient^0,0,c
  2257  000DD0                     l1232:
  2258  000DD0  90D8               	bcf	status,0,c
  2259  000DD2  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  2260  000DD4  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  2261  000DD6  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  2262  000DD8  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  2263  000DDA  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  2264  000DDC  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  2265  000DDE  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  2266  000DE0  3209               	rrcf	___aodiv@divisor^0,f,c
  2267  000DE2  2E11               	decfsz	___aodiv@counter^0,f,c
  2268  000DE4  EFB7  F006         	goto	l1224
  2269  000DE8                     l1236:
  2270  000DE8  5012               	movf	___aodiv@sign^0,w,c
  2271  000DEA  B4D8               	btfsc	status,2,c
  2272  000DEC  EFFA  F006         	goto	u571
  2273  000DF0  EFFC  F006         	goto	u570
  2274  000DF4                     u571:
  2275  000DF4  EF0C  F007         	goto	l1240
  2276  000DF8                     u570:
  2277  000DF8  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  2278  000DFA  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  2279  000DFC  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  2280  000DFE  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  2281  000E00  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  2282  000E02  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  2283  000E04  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  2284  000E06  6C13               	negf	___aodiv@quotient^0,c
  2285  000E08  0E00               	movlw	0
  2286  000E0A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  2287  000E0C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  2288  000E0E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  2289  000E10  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  2290  000E12  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  2291  000E14  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  2292  000E16  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  2293  000E18                     l1240:
  2294  000E18  C013  F001         	movff	___aodiv@quotient,?___aodiv
  2295  000E1C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  2296  000E20  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  2297  000E24  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  2298  000E28  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  2299  000E2C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  2300  000E30  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  2301  000E34  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  2302  000E38  0012               	return		;funcret
  2303  000E3A                     __end_of___aodiv:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _InicializaLCD *****************
  2307 ;; Defined at:
  2308 ;;		line 46 in file "main.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;		None
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2322 ;;      Params:         0       0       0       0       0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2324 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2325 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2326 ;;Total ram usage:        1 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 1
  2329 ;; This function calls:
  2330 ;;		_putcm
  2331 ;; This function is called by:
  2332 ;;		_main
  2333 ;; This function uses a non-reentrant model
  2334 ;;
  2335                           
  2336                           	psect	text13
  2337  0010FA                     __ptext13:
  2338                           	callstack 0
  2339  0010FA                     _InicializaLCD:
  2340                           	callstack 29
  2341  0010FA                     
  2342                           ;main.c: 47:     _delay((unsigned long)((30)*(1000000/4000.0)));
  2343  0010FA  0E0A               	movlw	10
  2344  0010FC  6E03               	movwf	??_InicializaLCD^0,c
  2345  0010FE  0EBC               	movlw	188
  2346  001100                     u917:
  2347  001100  2EE8               	decfsz	wreg,f,c
  2348  001102  D7FE               	bra	u917
  2349  001104  2E03               	decfsz	??_InicializaLCD^0,f,c
  2350  001106  D7FC               	bra	u917
  2351  001108  D000               	nop2	
  2352  00110A                     
  2353                           ;main.c: 48:     putcm(0x02);
  2354  00110A  0E02               	movlw	2
  2355  00110C  EC7C  F009         	call	_putcm
  2356  001110                     
  2357                           ;main.c: 49:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2358  001110  0E53               	movlw	83
  2359  001112                     u927:
  2360  001112  2EE8               	decfsz	wreg,f,c
  2361  001114  D7FE               	bra	u927
  2362  001116  F000               	nop	
  2363                           
  2364                           ;main.c: 51:     putcm(0x28);
  2365  001118  0E28               	movlw	40
  2366  00111A  EC7C  F009         	call	_putcm
  2367  00111E                     
  2368                           ;main.c: 52:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2369  00111E  0E53               	movlw	83
  2370  001120                     u937:
  2371  001120  2EE8               	decfsz	wreg,f,c
  2372  001122  D7FE               	bra	u937
  2373  001124  F000               	nop	
  2374  001126                     
  2375                           ;main.c: 54:     putcm(0x2C);
  2376  001126  0E2C               	movlw	44
  2377  001128  EC7C  F009         	call	_putcm
  2378                           
  2379                           ;main.c: 55:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2380  00112C  0E53               	movlw	83
  2381  00112E                     u947:
  2382  00112E  2EE8               	decfsz	wreg,f,c
  2383  001130  D7FE               	bra	u947
  2384  001132  F000               	nop	
  2385  001134                     
  2386                           ;main.c: 57:     putcm(0x0C);
  2387  001134  0E0C               	movlw	12
  2388  001136  EC7C  F009         	call	_putcm
  2389  00113A                     
  2390                           ;main.c: 58:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2391  00113A  0E53               	movlw	83
  2392  00113C                     u957:
  2393  00113C  2EE8               	decfsz	wreg,f,c
  2394  00113E  D7FE               	bra	u957
  2395  001140  F000               	nop	
  2396                           
  2397                           ;main.c: 60:     putcm(0x06);
  2398  001142  0E06               	movlw	6
  2399  001144  EC7C  F009         	call	_putcm
  2400  001148                     
  2401                           ;main.c: 61:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2402  001148  0E53               	movlw	83
  2403  00114A                     u967:
  2404  00114A  2EE8               	decfsz	wreg,f,c
  2405  00114C  D7FE               	bra	u967
  2406  00114E  F000               	nop	
  2407  001150                     
  2408                           ;main.c: 63:     putcm(0x80);
  2409  001150  0E80               	movlw	128
  2410  001152  EC7C  F009         	call	_putcm
  2411                           
  2412                           ;main.c: 64:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2413  001156  0E53               	movlw	83
  2414  001158                     u977:
  2415  001158  2EE8               	decfsz	wreg,f,c
  2416  00115A  D7FE               	bra	u977
  2417  00115C  F000               	nop	
  2418  00115E  0012               	return		;funcret
  2419  001160                     __end_of_InicializaLCD:
  2420                           	callstack 0
  2421                           
  2422 ;; *************** function _putcm *****************
  2423 ;; Defined at:
  2424 ;;		line 82 in file "main.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;  data            1    wreg     unsigned char 
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;  data            1    0[COMRAM] unsigned char 
  2429 ;;  Activa          1    1[COMRAM] unsigned char 
  2430 ;; Return value:  Size  Location     Type
  2431 ;;                  1    wreg      void 
  2432 ;; Registers used:
  2433 ;;		wreg, status,2, status,0
  2434 ;; Tracked objects:
  2435 ;;		On entry : 0/0
  2436 ;;		On exit  : 0/0
  2437 ;;		Unchanged: 0/0
  2438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2439 ;;      Params:         0       0       0       0       0       0       0       0       0
  2440 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2441 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2442 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2443 ;;Total ram usage:        2 bytes
  2444 ;; Hardware stack levels used: 1
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_main
  2449 ;;		_InicializaLCD
  2450 ;; This function uses a non-reentrant model
  2451 ;;
  2452                           
  2453                           	psect	text14
  2454  0012F8                     __ptext14:
  2455                           	callstack 0
  2456  0012F8                     _putcm:
  2457                           	callstack 30
  2458                           
  2459                           ;incstack = 0
  2460                           ;putcm@data stored from wreg
  2461  0012F8  6E01               	movwf	putcm@data^0,c
  2462  0012FA                     
  2463                           ;main.c: 83:     char Activa;;main.c: 84:     Activa = data & 0xF0;
  2464  0012FA  5001               	movf	putcm@data^0,w,c
  2465  0012FC  0BF0               	andlw	240
  2466  0012FE  6E02               	movwf	putcm@Activa^0,c
  2467                           
  2468                           ;main.c: 85:     LATD = Activa | 0x04;
  2469  001300  5002               	movf	putcm@Activa^0,w,c
  2470  001302  0904               	iorlw	4
  2471  001304  6E8C               	movwf	140,c	;volatile
  2472  001306                     
  2473                           ;main.c: 86:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2474  001306  D000               	nop2		;2 cycle nop
  2475  001308                     
  2476                           ;main.c: 88:     LATD = Activa;
  2477  001308  C002  FF8C         	movff	putcm@Activa,3980	;volatile
  2478  00130C                     
  2479                           ;main.c: 89:     _delay((unsigned long)((1)*(1000000/4000.0)));
  2480  00130C  0E53               	movlw	83
  2481  00130E                     u987:
  2482  00130E  2EE8               	decfsz	wreg,f,c
  2483  001310  D7FE               	bra	u987
  2484  001312  F000               	nop	
  2485  001314                     
  2486                           ;main.c: 90:     Activa = data << 4;
  2487  001314  3801               	swapf	putcm@data^0,w,c
  2488  001316  0BF0               	andlw	240
  2489  001318  6E02               	movwf	putcm@Activa^0,c
  2490  00131A                     
  2491                           ;main.c: 92:     LATD = Activa | 0x04;
  2492  00131A  5002               	movf	putcm@Activa^0,w,c
  2493  00131C  0904               	iorlw	4
  2494  00131E  6E8C               	movwf	140,c	;volatile
  2495  001320                     
  2496                           ;main.c: 93:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  2497  001320  D000               	nop2		;2 cycle nop
  2498  001322                     
  2499                           ;main.c: 94:     LATD = Activa;
  2500  001322  C002  FF8C         	movff	putcm@Activa,3980	;volatile
  2501  001326  0012               	return		;funcret
  2502  001328                     __end_of_putcm:
  2503                           	callstack 0
  2504                           
  2505 ;; *************** function _Configuracion *****************
  2506 ;; Defined at:
  2507 ;;		line 38 in file "main.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2524 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used: 1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_main
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text15
  2535  001368                     __ptext15:
  2536                           	callstack 0
  2537  001368                     _Configuracion:
  2538                           	callstack 30
  2539  001368                     
  2540                           ;main.c: 39:     TRISA = 0;
  2541  001368  0E00               	movlw	0
  2542  00136A  6E92               	movwf	146,c	;volatile
  2543                           
  2544                           ;main.c: 40:     TRISD = 0;
  2545  00136C  0E00               	movlw	0
  2546  00136E  6E95               	movwf	149,c	;volatile
  2547                           
  2548                           ;main.c: 41:     ANSELD = 0;
  2549  001370  0E00               	movlw	0
  2550  001372  010F               	movlb	15	; () banked
  2551  001374  6F5E               	movwf	94,b	;volatile
  2552                           
  2553                           ;main.c: 42:     ANSELA = 0;
  2554  001376  0E00               	movlw	0
  2555  001378  6F5B               	movwf	91,b	;volatile
  2556                           
  2557                           ;main.c: 43:     LATA = 0;
  2558  00137A  0E00               	movlw	0
  2559  00137C  6E89               	movwf	137,c	;volatile
  2560  00137E                     
  2561                           ; BSR set to: 15
  2562  00137E  0012               	return		;funcret
  2563  001380                     __end_of_Configuracion:
  2564                           	callstack 0
  2565                           
  2566                           	psect	rparam
  2567  0000                     
  2568                           	psect	idloc
  2569                           
  2570                           ;Config register IDLOC0 @ 0x200000
  2571                           ;	unspecified, using default values
  2572  200000                     	org	2097152
  2573  200000  FF                 	db	255
  2574                           
  2575                           ;Config register IDLOC1 @ 0x200001
  2576                           ;	unspecified, using default values
  2577  200001                     	org	2097153
  2578  200001  FF                 	db	255
  2579                           
  2580                           ;Config register IDLOC2 @ 0x200002
  2581                           ;	unspecified, using default values
  2582  200002                     	org	2097154
  2583  200002  FF                 	db	255
  2584                           
  2585                           ;Config register IDLOC3 @ 0x200003
  2586                           ;	unspecified, using default values
  2587  200003                     	org	2097155
  2588  200003  FF                 	db	255
  2589                           
  2590                           ;Config register IDLOC4 @ 0x200004
  2591                           ;	unspecified, using default values
  2592  200004                     	org	2097156
  2593  200004  FF                 	db	255
  2594                           
  2595                           ;Config register IDLOC5 @ 0x200005
  2596                           ;	unspecified, using default values
  2597  200005                     	org	2097157
  2598  200005  FF                 	db	255
  2599                           
  2600                           ;Config register IDLOC6 @ 0x200006
  2601                           ;	unspecified, using default values
  2602  200006                     	org	2097158
  2603  200006  FF                 	db	255
  2604                           
  2605                           ;Config register IDLOC7 @ 0x200007
  2606                           ;	unspecified, using default values
  2607  200007                     	org	2097159
  2608  200007  FF                 	db	255
  2609                           
  2610                           	psect	config
  2611                           
  2612                           ;Config register CONFIG1L @ 0x300000
  2613                           ;	unspecified, using default values
  2614                           ;	PLL Selection
  2615                           ;	PLLSEL = 0x0, unprogrammed default
  2616                           ;	PLL Enable Configuration bit
  2617                           ;	CFGPLLEN = 0x0, unprogrammed default
  2618                           ;	CPU System Clock Postscaler
  2619                           ;	CPUDIV = 0x0, unprogrammed default
  2620                           ;	Low Speed USB mode with 48 MHz system clock
  2621                           ;	LS48MHZ = 0x0, unprogrammed default
  2622  300000                     	org	3145728
  2623  300000  00                 	db	0
  2624                           
  2625                           ;Config register CONFIG1H @ 0x300001
  2626                           ;	Oscillator Selection
  2627                           ;	FOSC = INTOSCIO, Internal oscillator
  2628                           ;	Primary Oscillator Shutdown
  2629                           ;	PCLKEN = 0x1, unprogrammed default
  2630                           ;	Fail-Safe Clock Monitor
  2631                           ;	FCMEN = 0x0, unprogrammed default
  2632                           ;	Internal/External Oscillator Switchover
  2633                           ;	IESO = 0x0, unprogrammed default
  2634  300001                     	org	3145729
  2635  300001  28                 	db	40
  2636                           
  2637                           ;Config register CONFIG2L @ 0x300002
  2638                           ;	unspecified, using default values
  2639                           ;	Power-up Timer Enable
  2640                           ;	nPWRTEN = 0x1, unprogrammed default
  2641                           ;	Brown-out Reset Enable
  2642                           ;	BOREN = 0x3, unprogrammed default
  2643                           ;	Brown-out Reset Voltage
  2644                           ;	BORV = 0x3, unprogrammed default
  2645                           ;	Low-Power Brown-out Reset
  2646                           ;	nLPBOR = 0x1, unprogrammed default
  2647  300002                     	org	3145730
  2648  300002  5F                 	db	95
  2649                           
  2650                           ;Config register CONFIG2H @ 0x300003
  2651                           ;	Watchdog Timer Enable bits
  2652                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  2653                           ;	Watchdog Timer Postscaler
  2654                           ;	WDTPS = 0xF, unprogrammed default
  2655  300003                     	org	3145731
  2656  300003  3C                 	db	60
  2657                           
  2658                           ; Padding undefined space
  2659  300004                     	org	3145732
  2660  300004  FF                 	db	255
  2661                           
  2662                           ;Config register CONFIG3H @ 0x300005
  2663                           ;	CCP2 MUX bit
  2664                           ;	CCP2MX = 0x1, unprogrammed default
  2665                           ;	PORTB A/D Enable bit
  2666                           ;	PBADEN = 0x1, unprogrammed default
  2667                           ;	Timer3 Clock Input MUX bit
  2668                           ;	T3CMX = 0x1, unprogrammed default
  2669                           ;	SDO Output MUX bit
  2670                           ;	SDOMX = 0x1, unprogrammed default
  2671                           ;	Master Clear Reset Pin Enable
  2672                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  2673  300005                     	org	3145733
  2674  300005  D3                 	db	211
  2675                           
  2676                           ;Config register CONFIG4L @ 0x300006
  2677                           ;	Stack Full/Underflow Reset
  2678                           ;	STVREN = 0x1, unprogrammed default
  2679                           ;	Single-Supply ICSP Enable bit
  2680                           ;	LVP = OFF, Single-Supply ICSP disabled
  2681                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  2682                           ;	ICPRT = OFF, ICPORT disabled
  2683                           ;	Extended Instruction Set Enable bit
  2684                           ;	XINST = 0x0, unprogrammed default
  2685                           ;	Background Debugger Enable bit
  2686                           ;	DEBUG = 0x1, unprogrammed default
  2687  300006                     	org	3145734
  2688  300006  81                 	db	129
  2689                           
  2690                           ; Padding undefined space
  2691  300007                     	org	3145735
  2692  300007  FF                 	db	255
  2693                           
  2694                           ;Config register CONFIG5L @ 0x300008
  2695                           ;	unspecified, using default values
  2696                           ;	Block 0 Code Protect
  2697                           ;	CP0 = 0x1, unprogrammed default
  2698                           ;	Block 1 Code Protect
  2699                           ;	CP1 = 0x1, unprogrammed default
  2700                           ;	Block 2 Code Protect
  2701                           ;	CP2 = 0x1, unprogrammed default
  2702                           ;	Block 3 Code Protect
  2703                           ;	CP3 = 0x1, unprogrammed default
  2704  300008                     	org	3145736
  2705  300008  0F                 	db	15
  2706                           
  2707                           ;Config register CONFIG5H @ 0x300009
  2708                           ;	unspecified, using default values
  2709                           ;	Boot Block Code Protect
  2710                           ;	CPB = 0x1, unprogrammed default
  2711                           ;	Data EEPROM Code Protect
  2712                           ;	CPD = 0x1, unprogrammed default
  2713  300009                     	org	3145737
  2714  300009  C0                 	db	192
  2715                           
  2716                           ;Config register CONFIG6L @ 0x30000A
  2717                           ;	unspecified, using default values
  2718                           ;	Block 0 Write Protect
  2719                           ;	WRT0 = 0x1, unprogrammed default
  2720                           ;	Block 1 Write Protect
  2721                           ;	WRT1 = 0x1, unprogrammed default
  2722                           ;	Block 2 Write Protect
  2723                           ;	WRT2 = 0x1, unprogrammed default
  2724                           ;	Block 3 Write Protect
  2725                           ;	WRT3 = 0x1, unprogrammed default
  2726  30000A                     	org	3145738
  2727  30000A  0F                 	db	15
  2728                           
  2729                           ;Config register CONFIG6H @ 0x30000B
  2730                           ;	unspecified, using default values
  2731                           ;	Configuration Registers Write Protect
  2732                           ;	WRTC = 0x1, unprogrammed default
  2733                           ;	Boot Block Write Protect
  2734                           ;	WRTB = 0x1, unprogrammed default
  2735                           ;	Data EEPROM Write Protect
  2736                           ;	WRTD = 0x1, unprogrammed default
  2737  30000B                     	org	3145739
  2738  30000B  E0                 	db	224
  2739                           
  2740                           ;Config register CONFIG7L @ 0x30000C
  2741                           ;	unspecified, using default values
  2742                           ;	Block 0 Table Read Protect
  2743                           ;	EBTR0 = 0x1, unprogrammed default
  2744                           ;	Block 1 Table Read Protect
  2745                           ;	EBTR1 = 0x1, unprogrammed default
  2746                           ;	Block 2 Table Read Protect
  2747                           ;	EBTR2 = 0x1, unprogrammed default
  2748                           ;	Block 3 Table Read Protect
  2749                           ;	EBTR3 = 0x1, unprogrammed default
  2750  30000C                     	org	3145740
  2751  30000C  0F                 	db	15
  2752                           
  2753                           ;Config register CONFIG7H @ 0x30000D
  2754                           ;	unspecified, using default values
  2755                           ;	Boot Block Table Read Protect
  2756                           ;	EBTRB = 0x1, unprogrammed default
  2757  30000D                     	org	3145741
  2758  30000D  40                 	db	64
  2759                           tosu	equ	0xFFF
  2760                           tosh	equ	0xFFE
  2761                           tosl	equ	0xFFD
  2762                           stkptr	equ	0xFFC
  2763                           pclatu	equ	0xFFB
  2764                           pclath	equ	0xFFA
  2765                           pcl	equ	0xFF9
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           indf0	equ	0xFEF
  2773                           postinc0	equ	0xFEE
  2774                           postdec0	equ	0xFED
  2775                           preinc0	equ	0xFEC
  2776                           plusw0	equ	0xFEB
  2777                           fsr0h	equ	0xFEA
  2778                           fsr0l	equ	0xFE9
  2779                           wreg	equ	0xFE8
  2780                           indf1	equ	0xFE7
  2781                           postinc1	equ	0xFE6
  2782                           postdec1	equ	0xFE5
  2783                           preinc1	equ	0xFE4
  2784                           plusw1	equ	0xFE3
  2785                           fsr1h	equ	0xFE2
  2786                           fsr1l	equ	0xFE1
  2787                           bsr	equ	0xFE0
  2788                           indf2	equ	0xFDF
  2789                           postinc2	equ	0xFDE
  2790                           postdec2	equ	0xFDD
  2791                           preinc2	equ	0xFDC
  2792                           plusw2	equ	0xFDB
  2793                           fsr2h	equ	0xFDA
  2794                           fsr2l	equ	0xFD9
  2795                           status	equ	0xFD8

Data Sizes:
    Strings     26
    Constant    0
    Data        0
    BSS         40
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      1      41
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S559_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[11]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[11]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK0[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_2(CODE[11]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _abs->___aomod
    _InicializaLCD->_putcm

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    6718
                                              0 BANK0      1     1      0
                      _Configuracion
                      _InicializaLCD
                             _printf
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _printf                                               8     4      4    6515
                                             89 COMRAM     6     2      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6    6309
                                             81 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           42    36      6    5955
                                             65 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                36    26     10    4494
                                             29 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    2845
                                             18 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1303
                                             11 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     902
                                              2 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                2     2      0     134
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (1) _InicializaLCD                                        1     1      0      90
                                              2 COMRAM     1     1      0
                              _putcm
 ---------------------------------------------------------------------------------
 (1) _putcm                                                2     2      0      90
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
   _InicializaLCD
     _putcm
   _printf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___aodiv
           ___aomod
           _abs
             ___aomod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
         _fputc
   _putcm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      1      29       5       25.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      88       6        0.0%
DATA                 0      0      88       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 23 12:54:07 2021

                     l41 12F6                       l35 137E                       l44 1326  
                     l38 115E            _InicializaLCD 10FA                      l161 0E38  
                    l174 0F9C                      l801 1284                      l804 128C  
                    l725 134C                      l830 12C2                      l816 10F8  
                    l824 124C                      l752 0FE4                      l755 1026  
                    l763 08BC                      l757 1062                      l765 08C4  
                    l790 0CB0                      l783 0AFC                      l796 11B8  
                    l797 11C0                      u500 12B6                      u501 12B2  
                    u510 0CC4                      u511 0CC0                      u520 0CF6  
                    u600 0EBC                      u521 0CF2                      u601 0EB8  
                    u610 0EE6                      u450 1076                      u531 0D20  
                    u611 0EE2                      u451 1072                      u540 0D44  
                    u620 0F14                      u460 1088                      u700 084E  
                    u541 0D40                      u621 0F10                      u461 1084  
                    u550 0D6E                      u630 0F5C                      u470 10B0  
                    u710 0864                      u551 0D6A                      u631 0F58  
                    u471 10AC                      u711 0860                      u560 0DAE  
                    u480 10E6                      u640 0FAE                      u800 0A76  
                    u720 0894                      u561 0DAA                      u481 10E2  
                    u641 0FAA                      u801 0A72                      u721 0890  
                    u570 0DF8                      u490 124C                      u650 0FD0  
                    u810 0A88                      u730 08B0                      u571 0DF4  
                    u491 1248                      u651 0FCC                      u811 0A84  
                    u731 08AC                      u580 0E4C                      u660 1026  
                    u820 0A98                      u740 08DE                      u581 0E48  
                    u661 1022                      u821 0A94                      u741 08DA  
                    u590 0E7E                      u670 1036                      u830 0AB0  
                    u750 08EC                      u591 0E7A                      u671 1032  
                    u831 0AAC                      u751 08E8                      u680 1268  
                    u760 0A14                      u840 0B22                      u681 1264  
                    u761 0A10                      u841 0B1E                      u770 0A32  
                    u690 084C                      u850 0B6A                      u907 12DC  
                    u771 0A2E                      u691 0846                      u851 0B66  
                    u780 0A4C                      u860 0B8E                      u917 1100  
                    u781 0A48                      u861 0B8A                      u790 0A66  
                    u870 0C32                      u927 1112                      u791 0A62  
                    u871 0C2E                      u880 11B8                      u937 1120  
                    u881 11B4                      u947 112E                      u957 113C  
                    u967 114A                      u977 1158                      u897 11FA  
                    u987 130E                      _abs 124E                      _pad 0F9E  
                    wreg 000FE8                     l1100 1320                     l1102 1322  
                   l1112 1368                     l1120 111E                     l1200 0CB2  
                   l1130 1150                     l1122 1126                     l1114 10FA  
                   l1210 0CF6                     l1202 0CB6                     ?_abs 0013  
                   l1124 1134                     l1116 110A                     l1220 0D4C  
                   l1212 0D16                     l1204 0CC4                     l1126 113A  
                   l1118 1110                     l1230 0DCE                     l1222 0D60  
                   l1214 0D1A                     l1206 0CE4                     l1302 124E  
                   l1310 0864                     l1128 1148                     l1240 0E18  
                   l1232 0DD0                     l1224 0D6E                     l1216 0D26  
                   l1208 0CE8                     l1304 1268                     l1160 12E2  
                   l1320 08CC                     l1312 0884                     l1090 1306  
                   l1234 0DE2                     l1226 0D80                     l1218 0D44  
                   l1250 0E6C                     l1162 12E8                     l1154 12C6  
                   l1170 1076                     l1330 0902                     l1322 08DE  
                   l1314 0894                     l1306 081C                     l1402 0C7A  
                   l1410 1160                     l1092 1308                     l1228 0DAE  
                   l1236 0DE8                     l1260 0EC4                     l1252 0E70  
                   l1244 0E3A                     l1164 12EE                     l1156 12D2  
                   l1172 1088                     l1332 0908                     l1340 09FA  
                   l1324 08EC                     l1316 0896                     l1308 083C  
                   l1404 0C9E                     l1412 1168                     l1420 1330  
                   l1094 130C                     l1238 0DF8                     l1270 0F46  
                   l1262 0ED8                     l1254 0E7E                     l1246 0E3E  
                   l1166 12F0                     l1158 12DA                     l1174 1092  
                   l1182 120A                     l1190 128E                     l1342 0A14  
                   l1350 0A76                     l1334 098A                     l1326 08F2  
                   l1318 08B0                     l1414 1176                     l1430 11CA  
                   l1096 1314                     l1088 12FA                     l1264 0EE6  
                   l1272 0F4C                     l1256 0E9E                     l1248 0E4C  
                   l1176 10B0                     l1168 1064                     l1184 1216  
                   l1192 129A                     l1280 0F9E                     l1360 0ABC  
                   l1352 0A88                     l1344 0A32                     l1336 0990  
                   l1328 08FA                     l1416 119C                     l1432 11D6  
                   l1424 11C2                     l1098 131A                     l1274 0F5C  
                   l1266 0F14                     l1258 0EBC                     l1178 10E6  
                   l1186 1228                     l1194 129E                     l1290 0FF0  
                   l1282 0FAE                     l1362 0AC4                     l1354 0A98  
                   l1346 0A4C                     l1338 0996                     l1370 0B22  
                   l1418 1328                     l1434 11DC                     l1426 11C2  
                   l1276 0F7C                     l1268 0F34                     l1188 122C  
                   l1196 12B6                     l1292 1004                     l1284 0FC2  
                   l1356 0A9E                     l1364 0AD4                     l1348 0A66  
                   l1380 0B8E                     l1372 0B30                     l1436 11F0  
                   l1428 11C6                     l1294 1008                     l1286 0FD0  
                   l1358 0AB0                     l1390 0C40                     l1382 0BD6  
                   l1374 0B42                     l1438 11F2                     l1296 1036  
                   l1288 0FDC                     l1392 0C54                     l1376 0B46  
                   l1368 0AFE                     l1298 104A                     l1386 0C0E  
                   l1378 0B6A                     l1388 0C32                     l1396 0C60  
                   l1398 0C6E                     ?_pad 0013                     STR_1 0801  
                   STR_2 0810                     _LATA 000F89                     _LATD 000F8C  
                   abs@a 0013                     _dbuf 0068                     _main 11C2  
                   _dtoa 081C                     _prec 0064                     _nout 0060  
                   pad@i 001A                     pad@p 0017                     fsr1h 000FE2  
                   fsr2h 000FDA                     indf2 000FDF                     fsr1l 000FE1  
                   pad@w 001C                     fsr2l 000FD9                     start 0000  
           ___param_bank 000000                    ??_abs 0015                    ??_pad 0019  
         ?_InicializaLCD 0001          __end_of___aodiv 0E3A                    ?_main 0001  
                  ?_dtoa 001E          __end_of___aomod 0F9E             vfpfcnvrt@fmt 0044  
                  _TRISA 000F92                    _TRISD 000F95                    _flags 0066  
                  _fputc 1064                    _fputs 120A                    pad@fp 0013  
                  _width 0062                    _putch 12C4                    _putcm 12F8  
                  dtoa@d 0020                    dtoa@i 0040                    dtoa@n 0038  
                  dtoa@p 0032                    dtoa@s 0036                    dtoa@w 0034  
                  tablat 000FF5                    status 000FD8          __initialization 134E  
           __end_of_main 120A             __end_of_dtoa 0AFE                   ??_main 0088  
                 ??_dtoa 0028            __activetblptr 000001                   ?_fputc 0003  
                 ?_fputs 000C                   _ANSELA 000F5B                   ?_putch 0001  
                 _ANSELD 000F5E                   ?_putcm 0001             vfprintf@cfmt 0058  
              ??___aodiv 0011                ??___aomod 0011          ??_InicializaLCD 0003  
                 clear_0 1354                   isa$std 000001                   _printf 1328  
                 pad@buf 0015                   dtoa@fp 001E                   _strlen 128E  
                 fputc@c 0003                   fputs@c 0010                   fputs@i 0011  
                 fputs@s 000C             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8         __end_of_vfprintf 11C2  
             __accesstop 0060  __end_of__initialization 135A            ___rparam_used 000001  
         __pcstackCOMRAM 0001            __end_of_fputc 10FA            __end_of_fputs 124E  
          __end_of_putch 12F8            __end_of_putcm 1328                  ??_fputc 0007  
                ??_fputs 0010                  ??_putch 0001                  ??_putcm 0001  
             __pbssBANK0 0060    __end_of_Configuracion 1380                  ?_printf 005A  
                ?_strlen 0001       __size_of_vfpfcnvrt 01B4                  __Hparam 0000  
                __Lparam 0000                  ___aodiv 0CB2                  ___aomod 0E3A  
              ?_vfprintf 0052             __psmallconst 0800                  __pcinit 134E  
                __ramtop 0800                  __ptext0 11C2                  __ptext1 1328  
                __ptext2 1160                  __ptext3 0AFE                  __ptext4 081C  
                __ptext5 0F9E                  __ptext6 128E                  __ptext7 120A  
                __ptext8 1064                  __ptext9 12C4          __size_of_printf 0026  
        __size_of_strlen 0036             __size_of_abs 0040             __size_of_pad 00C6  
   end_of_initialization 135A                  fputc@fp 0005                  fputs@fp 000E  
      __end_of_vfpfcnvrt 0CB2                  postdec2 000FDD                  postinc0 000FEE  
                postinc1 000FE6                  postinc2 000FDE               ??_vfprintf 0058  
                strlen@a 0003                  strlen@s 0001              vfpfcnvrt@ap 0046  
            vfpfcnvrt@fp 0042              vfpfcnvrt@ll 004A              putch@Activa 0002  
  __end_of_InicializaLCD 1160           __end_of_printf 134E           __end_of_strlen 12C4  
            putcm@Activa 0002      start_initialization 134E              __end_of_abs 128E  
            __end_of_pad 1064              vfprintf@fmt 0054                 ??_printf 005E  
               ??_strlen 0003            __pcstackBANK0 0088         ___aodiv@dividend 0001  
               ?___aodiv 0001                 ?___aomod 0001         ___aodiv@quotient 0013  
 __size_of_Configuracion 0018        __size_of_vfprintf 0062              __smallconst 0800  
         __size_of_fputc 0096           __size_of_fputs 0044           __size_of_putch 0034  
         __size_of_putcm 0030                 _LATAbits 000F89                _vfpfcnvrt 0AFE  
          _Configuracion 1368                 __Hrparam 0000               vfprintf@ap 0056  
               __Lrparam 0000               vfprintf@fp 0052             __Lsmallconst 0800  
       __size_of___aodiv 0188         __size_of___aomod 0164               ?_vfpfcnvrt 0042  
        ___aodiv@divisor 0009          ___aodiv@counter 0011                 _dtoa$623 0030  
               __ptext10 124E                 __ptext11 0E3A                 __ptext12 0CB2  
               __ptext13 10FA                 __ptext14 12F8                 __ptext15 1368  
         ?_Configuracion 0001            __size_of_main 0048            __size_of_dtoa 02E2  
               isa$xinst 000000                 _vfprintf 1160                printf@fmt 005A  
       ___aomod@dividend 0001                putch@data 0001                putcm@data 0001  
 __size_of_InicializaLCD 0066                 printf@ap 005E          ___aomod@divisor 0009  
            ??_vfpfcnvrt 0048          ___aomod@counter 0011          ??_Configuracion 0001  
           ___aodiv@sign 0012             ___aomod@sign 0012  
