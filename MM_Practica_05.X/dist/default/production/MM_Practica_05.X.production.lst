

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Oct 15 15:37:15 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 05/05/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F45K50 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     
    55                           	psect	smallconst
    56  000800                     __psmallconst:
    57                           	callstack 0
    58  000800  00                 	db	0
    59  000801                     main@F4822:
    60                           	callstack 0
    61  000801  7E                 	db	126
    62  000802  30                 	db	48
    63  000803  6D                 	db	109
    64  000804  79                 	db	121
    65  000805  33                 	db	51
    66  000806  5B                 	db	91
    67  000807  5F                 	db	95
    68  000808  70                 	db	112
    69  000809  7F                 	db	127
    70  00080A  73                 	db	115
    71  00080B                     __end_ofmain@F4822:
    72                           	callstack 0
    73  00080B  00                 	db	0	; dummy byte at the end
    74  0000                     
    75                           	psect	nvCOMRAM
    76  00000F                     __pnvCOMRAM:
    77                           	callstack 0
    78  00000F                     _Value:
    79                           	callstack 0
    80  00000F                     	ds	1
    81  0000                     _ANSELD	set	3934
    82  0000                     _ANSELA	set	3931
    83  0000                     _EECON2	set	4007
    84  0000                     _EEDATA	set	4008
    85  0000                     _EEADR	set	4009
    86  0000                     _PIR2bits	set	4001
    87  0000                     _INTCONbits	set	4082
    88  0000                     _EECON1bits	set	4006
    89  0000                     _IPR2bits	set	4002
    90  0000                     _PIE2bits	set	4000
    91  0000                     _T0CON	set	4053
    92  0000                     _RCONbits	set	4048
    93  0000                     _INTCON	set	4082
    94  0000                     _LATD	set	3980
    95  0000                     _TRISD	set	3989
    96  0000                     _LATA	set	3977
    97  0000                     _TRISA	set	3986
    98  0000                     _PORTD	set	3971
    99                           
   100                           ; #config settings
   101                           
   102                           	psect	cinit
   103  0008C4                     __pcinit:
   104                           	callstack 0
   105  0008C4                     start_initialization:
   106                           	callstack 0
   107  0008C4                     __initialization:
   108                           	callstack 0
   109  0008C4                     end_of_initialization:
   110                           	callstack 0
   111  0008C4                     __end_of__initialization:
   112                           	callstack 0
   113  0008C4  9010               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   114  0008C6  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   115  0008C8  0E00               	movlw	low (__Lsmallconst shr (0+16))
   116  0008CA  6EF8               	movwf	tblptru,c
   117  0008CC  0E08               	movlw	high __Lsmallconst
   118  0008CE  6EF7               	movwf	tblptrh,c
   119  0008D0  0100               	movlb	0
   120  0008D2  EF06  F004         	goto	_main	;jump to C main() function
   121                           
   122                           	psect	cstackCOMRAM
   123  000001                     __pcstackCOMRAM:
   124                           	callstack 0
   125  000001                     EscribeEEprom@Valor:
   126                           	callstack 0
   127                           
   128                           ; 1 bytes @ 0x0
   129  000001                     	ds	1
   130  000002                     EscribeEEprom@Direccion:
   131                           	callstack 0
   132                           
   133                           ; 1 bytes @ 0x1
   134  000002                     	ds	1
   135  000003                     LeeEEprom@Direccion:
   136                           	callstack 0
   137                           
   138                           ; 1 bytes @ 0x2
   139  000003                     	ds	1
   140  000004                     ??_main:
   141                           
   142                           ; 1 bytes @ 0x3
   143  000004                     	ds	1
   144  000005                     main@Dis7seg:
   145                           	callstack 0
   146                           
   147                           ; 10 bytes @ 0x4
   148  000005                     	ds	10
   149                           
   150 ;;
   151 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   152 ;;
   153 ;; *************** function _main *****************
   154 ;; Defined at:
   155 ;;		line 26 in file "main.c"
   156 ;; Parameters:    Size  Location     Type
   157 ;;		None
   158 ;; Auto vars:     Size  Location     Type
   159 ;;  Dis7seg        10    4[COMRAM] const unsigned char [10]
   160 ;; Return value:  Size  Location     Type
   161 ;;                  1    wreg      void 
   162 ;; Registers used:
   163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   164 ;; Tracked objects:
   165 ;;		On entry : 0/0
   166 ;;		On exit  : 0/0
   167 ;;		Unchanged: 0/0
   168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   169 ;;      Params:         0       0       0       0       0       0       0       0       0
   170 ;;      Locals:        10       0       0       0       0       0       0       0       0
   171 ;;      Temps:          1       0       0       0       0       0       0       0       0
   172 ;;      Totals:        11       0       0       0       0       0       0       0       0
   173 ;;Total ram usage:       11 bytes
   174 ;; Hardware stack levels required when called: 3
   175 ;; This function calls:
   176 ;;		_Configuracion
   177 ;;		_LeeEEprom
   178 ;; This function is called by:
   179 ;;		Startup code after reset
   180 ;; This function uses a non-reentrant model
   181 ;;
   182                           
   183                           	psect	text0
   184  00080C                     __ptext0:
   185                           	callstack 0
   186  00080C                     _main:
   187                           	callstack 28
   188  00080C                     
   189                           ;main.c: 27:     const char Dis7seg[10] = {0x7E, 0x30, 0x6D, 0x79, 0x33, 0x5B, 0x5F, 0x7
      +                          0, 0x7F, 0x73};
   190  00080C  0E01               	movlw	low main@F4822
   191  00080E  6EF6               	movwf	tblptrl,c
   192  000810                     	if	0	;There is only one active tblptr byte
   193  000810                     	endif
   194  000810                     	if	0	;There are less than 3 active tblptr bytes
   195  000810                     	endif
   196  000810  EE20  F005         	lfsr	2,main@Dis7seg
   197  000814  0E09               	movlw	9
   198  000816                     u30:
   199  000816  0009               	tblrd		*+
   200  000818  CFF5 FFDE          	movff	tablat,postinc2
   201  00081C  06E8               	decf	wreg,f,c
   202  00081E  E2FB               	bc	u30
   203  000820                     
   204                           ;main.c: 28:     Configuracion();
   205  000820  EC2A  F004         	call	_Configuracion	;wreg free
   206  000824                     
   207                           ;main.c: 29:     Value = LeeEEprom(0);
   208  000824  0E00               	movlw	0
   209  000826  EC55  F004         	call	_LeeEEprom
   210  00082A  6E0F               	movwf	_Value^0,c
   211  00082C                     l790:
   212                           
   213                           ;main.c: 32:         PORTD = Dis7seg[Value];
   214  00082C  0E05               	movlw	low main@Dis7seg
   215  00082E  240F               	addwf	_Value^0,w,c
   216  000830  6ED9               	movwf	fsr2l,c
   217  000832  6ADA               	clrf	fsr2h,c
   218  000834  0E00               	movlw	high main@Dis7seg
   219  000836  22DA               	addwfc	fsr2h,f,c
   220  000838  50DF               	movf	indf2,w,c
   221  00083A  6E83               	movwf	131,c	;volatile
   222  00083C                     
   223                           ;main.c: 33:         _delay((unsigned long)((50)*(1000000/4000.0)));
   224  00083C  0E11               	movlw	17
   225  00083E  6E04               	movwf	??_main^0,c
   226  000840  0E3A               	movlw	58
   227  000842                     u117:
   228  000842  2EE8               	decfsz	wreg,f,c
   229  000844  D7FE               	bra	u117
   230  000846  2E04               	decfsz	??_main^0,f,c
   231  000848  D7FC               	bra	u117
   232  00084A  D000               	nop2	
   233  00084C  EF16  F004         	goto	l790
   234  000850  EF2B  F000         	goto	start
   235  000854                     __end_of_main:
   236                           	callstack 0
   237                           
   238 ;; *************** function _LeeEEprom *****************
   239 ;; Defined at:
   240 ;;		line 73 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;  Direccion       1    wreg     unsigned char 
   243 ;; Auto vars:     Size  Location     Type
   244 ;;  Direccion       1    2[COMRAM] unsigned char 
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      unsigned char 
   247 ;; Registers used:
   248 ;;		wreg, status,2
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         1       0       0       0       0       0       0       0       0
   256 ;;      Temps:          0       0       0       0       0       0       0       0       0
   257 ;;      Totals:         1       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        1 bytes
   259 ;; Hardware stack levels used: 1
   260 ;; Hardware stack levels required when called: 2
   261 ;; This function calls:
   262 ;;		Nothing
   263 ;; This function is called by:
   264 ;;		_main
   265 ;; This function uses a non-reentrant model
   266 ;;
   267                           
   268                           	psect	text1
   269  0008AA                     __ptext1:
   270                           	callstack 0
   271  0008AA                     _LeeEEprom:
   272                           	callstack 28
   273                           
   274                           ;incstack = 0
   275                           ;LeeEEprom@Direccion stored from wreg
   276  0008AA  6E03               	movwf	LeeEEprom@Direccion^0,c
   277  0008AC                     
   278                           ;main.c: 74:     EEADR = Direccion;
   279  0008AC  C003  FFA9         	movff	LeeEEprom@Direccion,4009	;volatile
   280  0008B0                     
   281                           ;main.c: 75:     EECON1bits.RD = 1;
   282  0008B0  80A6               	bsf	166,0,c	;volsfr
   283  0008B2                     l71:
   284  0008B2  B0A6               	btfsc	166,0,c	;volsfr
   285  0008B4  EF5E  F004         	goto	u11
   286  0008B8  EF60  F004         	goto	u10
   287  0008BC                     u11:
   288  0008BC  EF59  F004         	goto	l71
   289  0008C0                     u10:
   290  0008C0                     
   291                           ;main.c: 77:     return EEDATA;
   292  0008C0  50A8               	movf	168,w,c	;volatile
   293  0008C2  0012               	return		;funcret
   294  0008C4                     __end_of_LeeEEprom:
   295                           	callstack 0
   296                           
   297 ;; *************** function _Configuracion *****************
   298 ;; Defined at:
   299 ;;		line 39 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;		None
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, status,2
   308 ;; Tracked objects:
   309 ;;		On entry : 0/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   313 ;;      Params:         0       0       0       0       0       0       0       0       0
   314 ;;      Locals:         0       0       0       0       0       0       0       0       0
   315 ;;      Temps:          0       0       0       0       0       0       0       0       0
   316 ;;      Totals:         0       0       0       0       0       0       0       0       0
   317 ;;Total ram usage:        0 bytes
   318 ;; Hardware stack levels used: 1
   319 ;; Hardware stack levels required when called: 2
   320 ;; This function calls:
   321 ;;		Nothing
   322 ;; This function is called by:
   323 ;;		_main
   324 ;; This function uses a non-reentrant model
   325 ;;
   326                           
   327                           	psect	text2
   328  000854                     __ptext2:
   329                           	callstack 0
   330  000854                     _Configuracion:
   331                           	callstack 28
   332  000854                     
   333                           ;main.c: 40:     TRISA = 0;
   334  000854  0E00               	movlw	0
   335  000856  6E92               	movwf	146,c	;volatile
   336                           
   337                           ;main.c: 41:     ANSELA = 0;
   338  000858  0E00               	movlw	0
   339  00085A  010F               	movlb	15	; () banked
   340  00085C  6F5B               	movwf	91,b	;volatile
   341                           
   342                           ;main.c: 42:     LATA = 0;
   343  00085E  0E00               	movlw	0
   344  000860  6E89               	movwf	137,c	;volatile
   345                           
   346                           ;main.c: 44:     TRISD = 0;
   347  000862  0E00               	movlw	0
   348  000864  6E95               	movwf	149,c	;volatile
   349                           
   350                           ;main.c: 45:     ANSELD = 0;
   351  000866  0E00               	movlw	0
   352  000868  6F5E               	movwf	94,b	;volatile
   353                           
   354                           ;main.c: 46:     LATD = 0;
   355  00086A  0E00               	movlw	0
   356  00086C  6E8C               	movwf	140,c	;volatile
   357                           
   358                           ;main.c: 47:     INTCON = 0xA0;
   359  00086E  0EA0               	movlw	160
   360  000870  6EF2               	movwf	242,c	;volatile
   361  000872                     
   362                           ; BSR set to: 15
   363                           ;main.c: 48:     RCONbits.IPEN = 1;
   364  000872  8ED0               	bsf	208,7,c	;volatile
   365                           
   366                           ;main.c: 49:     T0CON = 0x83;
   367  000874  0E83               	movlw	131
   368  000876  6ED5               	movwf	213,c	;volatile
   369  000878                     
   370                           ; BSR set to: 15
   371                           ;main.c: 51:     PIE2bits.EEIE = 1;
   372  000878  88A0               	bsf	160,4,c	;volatile
   373  00087A                     
   374                           ; BSR set to: 15
   375                           ;main.c: 52:     IPR2bits.EEIP = 1;
   376  00087A  88A2               	bsf	162,4,c	;volatile
   377  00087C                     
   378                           ; BSR set to: 15
   379                           ;main.c: 54:     EECON1bits.EEPGD = 0;
   380  00087C  9EA6               	bcf	166,7,c	;volsfr
   381  00087E                     
   382                           ; BSR set to: 15
   383                           ;main.c: 55:     EECON1bits.CFGS = 0;
   384  00087E  9CA6               	bcf	166,6,c	;volsfr
   385  000880                     
   386                           ; BSR set to: 15
   387  000880  0012               	return		;funcret
   388  000882                     __end_of_Configuracion:
   389                           	callstack 0
   390                           
   391 ;; *************** function _myHiIsr *****************
   392 ;; Defined at:
   393 ;;		line 58 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;		None
   398 ;; Return value:  Size  Location     Type
   399 ;;                  1    wreg      void 
   400 ;; Registers used:
   401 ;;		wreg, status,2, status,0, cstack
   402 ;; Tracked objects:
   403 ;;		On entry : 0/0
   404 ;;		On exit  : 0/0
   405 ;;		Unchanged: 0/0
   406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   407 ;;      Params:         0       0       0       0       0       0       0       0       0
   408 ;;      Locals:         0       0       0       0       0       0       0       0       0
   409 ;;      Temps:          0       0       0       0       0       0       0       0       0
   410 ;;      Totals:         0       0       0       0       0       0       0       0       0
   411 ;;Total ram usage:        0 bytes
   412 ;; Hardware stack levels used: 1
   413 ;; Hardware stack levels required when called: 1
   414 ;; This function calls:
   415 ;;		_EscribeEEprom
   416 ;; This function is called by:
   417 ;;		Interrupt level 2
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	intcode
   422  000008                     __pintcode:
   423                           	callstack 0
   424  000008                     _myHiIsr:
   425                           	callstack 28
   426                           
   427                           ; BSR set to: 15
   428                           ;incstack = 0
   429  000008  8210               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
   430  00000A                     
   431                           ;main.c: 59:     if (INTCONbits.TMR0IF) {
   432  00000A  A4F2               	btfss	242,2,c	;volatile
   433  00000C  EF0A  F000         	goto	i2u8_41
   434  000010  EF0C  F000         	goto	i2u8_40
   435  000014                     i2u8_41:
   436  000014  EF1F  F000         	goto	i2l64
   437  000018                     i2u8_40:
   438  000018                     
   439                           ;main.c: 60:         Value += 1;
   440  000018  2A0F               	incf	_Value^0,f,c
   441  00001A                     
   442                           ;main.c: 62:         if (Value > 9) {
   443  00001A  0E09               	movlw	9
   444  00001C  640F               	cpfsgt	_Value^0,c
   445  00001E  EF13  F000         	goto	i2u9_41
   446  000022  EF15  F000         	goto	i2u9_40
   447  000026                     i2u9_41:
   448  000026  EF17  F000         	goto	i2l830
   449  00002A                     i2u9_40:
   450  00002A                     
   451                           ;main.c: 63:             Value = 0;
   452  00002A  0E00               	movlw	0
   453  00002C  6E0F               	movwf	_Value^0,c
   454  00002E                     i2l830:
   455                           
   456                           ;main.c: 65:         EscribeEEprom(0, Value);
   457  00002E  C00F  F001         	movff	_Value,EscribeEEprom@Valor
   458  000032  0E00               	movlw	0
   459  000034  EC41  F004         	call	_EscribeEEprom
   460  000038                     
   461                           ;main.c: 66:         INTCONbits.TMR0IF = 0;
   462  000038  94F2               	bcf	242,2,c	;volatile
   463                           
   464                           ;main.c: 67:     } else if (PIR2bits.EEIF) {
   465  00003A  EF29  F000         	goto	i2l68
   466  00003E                     i2l64:
   467  00003E  A8A1               	btfss	161,4,c	;volatile
   468  000040  EF24  F000         	goto	i2u10_41
   469  000044  EF26  F000         	goto	i2u10_40
   470  000048                     i2u10_41:
   471  000048  EF29  F000         	goto	i2l68
   472  00004C                     i2u10_40:
   473  00004C                     
   474                           ;main.c: 68:         LATA ^= 1;
   475  00004C  0E01               	movlw	1
   476  00004E  1A89               	xorwf	137,f,c	;volatile
   477  000050                     
   478                           ;main.c: 69:         PIR2bits.EEIF = 0;
   479  000050  98A1               	bcf	161,4,c	;volatile
   480  000052                     i2l68:
   481  000052  9210               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   482  000054  0011               	retfie		f
   483  000056                     __end_of_myHiIsr:
   484                           	callstack 0
   485                           
   486 ;; *************** function _EscribeEEprom *****************
   487 ;; Defined at:
   488 ;;		line 80 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  Direccion       1    wreg     unsigned char 
   491 ;;  Valor           1    0[COMRAM] unsigned char 
   492 ;; Auto vars:     Size  Location     Type
   493 ;;  Direccion       1    1[COMRAM] unsigned char 
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   503 ;;      Params:         1       0       0       0       0       0       0       0       0
   504 ;;      Locals:         1       0       0       0       0       0       0       0       0
   505 ;;      Temps:          0       0       0       0       0       0       0       0       0
   506 ;;      Totals:         2       0       0       0       0       0       0       0       0
   507 ;;Total ram usage:        2 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_myHiIsr
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           	psect	text4
   517  000882                     __ptext4:
   518                           	callstack 0
   519  000882                     _EscribeEEprom:
   520                           	callstack 28
   521                           
   522                           ;incstack = 0
   523                           ;EscribeEEprom@Direccion stored from wreg
   524  000882  6E02               	movwf	EscribeEEprom@Direccion^0,c
   525  000884                     
   526                           ;main.c: 81:     EEADR = Direccion;
   527  000884  C002  FFA9         	movff	EscribeEEprom@Direccion,4009	;volatile
   528  000888                     
   529                           ;main.c: 82:     EEDATA = Valor;
   530  000888  C001  FFA8         	movff	EscribeEEprom@Valor,4008	;volatile
   531  00088C                     
   532                           ;main.c: 84:     EECON1bits.WREN = 1;
   533  00088C  84A6               	bsf	166,2,c	;volsfr
   534  00088E                     
   535                           ;main.c: 85:     EECON2 = 0x55;
   536  00088E  0E55               	movlw	85
   537  000890  6EA7               	movwf	167,c	;volsfr
   538  000892                     
   539                           ;main.c: 86:     EECON2 = 0xAA;
   540  000892  0EAA               	movlw	170
   541  000894  6EA7               	movwf	167,c	;volsfr
   542  000896                     
   543                           ;main.c: 87:     EECON1bits.WR = 1;
   544  000896  82A6               	bsf	166,1,c	;volsfr
   545  000898                     i2l77:
   546  000898  B2A6               	btfsc	166,1,c	;volsfr
   547  00089A  EF51  F004         	goto	i2u7_41
   548  00089E  EF53  F004         	goto	i2u7_40
   549  0008A2                     i2u7_41:
   550  0008A2  EF4C  F004         	goto	i2l77
   551  0008A6                     i2u7_40:
   552  0008A6                     
   553                           ;main.c: 90:     EECON1bits.WREN = 0;
   554  0008A6  94A6               	bcf	166,2,c	;volsfr
   555  0008A8  0012               	return		;funcret
   556  0008AA                     __end_of_EscribeEEprom:
   557                           	callstack 0
   558                           
   559                           	psect	rparam
   560  0000                     
   561                           	psect	temp
   562  000010                     btemp:
   563                           	callstack 0
   564  000010                     	ds	1
   565  0000                     int$flags	set	btemp
   566  0000                     wtemp8	set	btemp+1
   567  0000                     ttemp5	set	btemp+1
   568  0000                     ttemp6	set	btemp+4
   569  0000                     ttemp7	set	btemp+8
   570                           
   571                           	psect	idloc
   572                           
   573                           ;Config register IDLOC0 @ 0x200000
   574                           ;	unspecified, using default values
   575  200000                     	org	2097152
   576  200000  FF                 	db	255
   577                           
   578                           ;Config register IDLOC1 @ 0x200001
   579                           ;	unspecified, using default values
   580  200001                     	org	2097153
   581  200001  FF                 	db	255
   582                           
   583                           ;Config register IDLOC2 @ 0x200002
   584                           ;	unspecified, using default values
   585  200002                     	org	2097154
   586  200002  FF                 	db	255
   587                           
   588                           ;Config register IDLOC3 @ 0x200003
   589                           ;	unspecified, using default values
   590  200003                     	org	2097155
   591  200003  FF                 	db	255
   592                           
   593                           ;Config register IDLOC4 @ 0x200004
   594                           ;	unspecified, using default values
   595  200004                     	org	2097156
   596  200004  FF                 	db	255
   597                           
   598                           ;Config register IDLOC5 @ 0x200005
   599                           ;	unspecified, using default values
   600  200005                     	org	2097157
   601  200005  FF                 	db	255
   602                           
   603                           ;Config register IDLOC6 @ 0x200006
   604                           ;	unspecified, using default values
   605  200006                     	org	2097158
   606  200006  FF                 	db	255
   607                           
   608                           ;Config register IDLOC7 @ 0x200007
   609                           ;	unspecified, using default values
   610  200007                     	org	2097159
   611  200007  FF                 	db	255
   612                           
   613                           	psect	config
   614                           
   615                           ;Config register CONFIG1L @ 0x300000
   616                           ;	unspecified, using default values
   617                           ;	PLL Selection
   618                           ;	PLLSEL = 0x0, unprogrammed default
   619                           ;	PLL Enable Configuration bit
   620                           ;	CFGPLLEN = 0x0, unprogrammed default
   621                           ;	CPU System Clock Postscaler
   622                           ;	CPUDIV = 0x0, unprogrammed default
   623                           ;	Low Speed USB mode with 48 MHz system clock
   624                           ;	LS48MHZ = 0x0, unprogrammed default
   625  300000                     	org	3145728
   626  300000  00                 	db	0
   627                           
   628                           ;Config register CONFIG1H @ 0x300001
   629                           ;	Oscillator Selection
   630                           ;	FOSC = INTOSCIO, Internal oscillator
   631                           ;	Primary Oscillator Shutdown
   632                           ;	PCLKEN = 0x1, unprogrammed default
   633                           ;	Fail-Safe Clock Monitor
   634                           ;	FCMEN = 0x0, unprogrammed default
   635                           ;	Internal/External Oscillator Switchover
   636                           ;	IESO = 0x0, unprogrammed default
   637  300001                     	org	3145729
   638  300001  28                 	db	40
   639                           
   640                           ;Config register CONFIG2L @ 0x300002
   641                           ;	unspecified, using default values
   642                           ;	Power-up Timer Enable
   643                           ;	nPWRTEN = 0x1, unprogrammed default
   644                           ;	Brown-out Reset Enable
   645                           ;	BOREN = 0x3, unprogrammed default
   646                           ;	Brown-out Reset Voltage
   647                           ;	BORV = 0x3, unprogrammed default
   648                           ;	Low-Power Brown-out Reset
   649                           ;	nLPBOR = 0x1, unprogrammed default
   650  300002                     	org	3145730
   651  300002  5F                 	db	95
   652                           
   653                           ;Config register CONFIG2H @ 0x300003
   654                           ;	Watchdog Timer Enable bits
   655                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
   656                           ;	Watchdog Timer Postscaler
   657                           ;	WDTPS = 0xF, unprogrammed default
   658  300003                     	org	3145731
   659  300003  3C                 	db	60
   660                           
   661                           ; Padding undefined space
   662  300004                     	org	3145732
   663  300004  FF                 	db	255
   664                           
   665                           ;Config register CONFIG3H @ 0x300005
   666                           ;	CCP2 MUX bit
   667                           ;	CCP2MX = 0x1, unprogrammed default
   668                           ;	PORTB A/D Enable bit
   669                           ;	PBADEN = 0x1, unprogrammed default
   670                           ;	Timer3 Clock Input MUX bit
   671                           ;	T3CMX = 0x1, unprogrammed default
   672                           ;	SDO Output MUX bit
   673                           ;	SDOMX = 0x1, unprogrammed default
   674                           ;	Master Clear Reset Pin Enable
   675                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
   676  300005                     	org	3145733
   677  300005  D3                 	db	211
   678                           
   679                           ;Config register CONFIG4L @ 0x300006
   680                           ;	Stack Full/Underflow Reset
   681                           ;	STVREN = 0x1, unprogrammed default
   682                           ;	Single-Supply ICSP Enable bit
   683                           ;	LVP = OFF, Single-Supply ICSP disabled
   684                           ;	Dedicated In-Circuit Debug/Programming Port Enable
   685                           ;	ICPRT = OFF, ICPORT disabled
   686                           ;	Extended Instruction Set Enable bit
   687                           ;	XINST = 0x0, unprogrammed default
   688                           ;	Background Debugger Enable bit
   689                           ;	DEBUG = 0x1, unprogrammed default
   690  300006                     	org	3145734
   691  300006  81                 	db	129
   692                           
   693                           ; Padding undefined space
   694  300007                     	org	3145735
   695  300007  FF                 	db	255
   696                           
   697                           ;Config register CONFIG5L @ 0x300008
   698                           ;	unspecified, using default values
   699                           ;	Block 0 Code Protect
   700                           ;	CP0 = 0x1, unprogrammed default
   701                           ;	Block 1 Code Protect
   702                           ;	CP1 = 0x1, unprogrammed default
   703                           ;	Block 2 Code Protect
   704                           ;	CP2 = 0x1, unprogrammed default
   705                           ;	Block 3 Code Protect
   706                           ;	CP3 = 0x1, unprogrammed default
   707  300008                     	org	3145736
   708  300008  0F                 	db	15
   709                           
   710                           ;Config register CONFIG5H @ 0x300009
   711                           ;	unspecified, using default values
   712                           ;	Boot Block Code Protect
   713                           ;	CPB = 0x1, unprogrammed default
   714                           ;	Data EEPROM Code Protect
   715                           ;	CPD = 0x1, unprogrammed default
   716  300009                     	org	3145737
   717  300009  C0                 	db	192
   718                           
   719                           ;Config register CONFIG6L @ 0x30000A
   720                           ;	unspecified, using default values
   721                           ;	Block 0 Write Protect
   722                           ;	WRT0 = 0x1, unprogrammed default
   723                           ;	Block 1 Write Protect
   724                           ;	WRT1 = 0x1, unprogrammed default
   725                           ;	Block 2 Write Protect
   726                           ;	WRT2 = 0x1, unprogrammed default
   727                           ;	Block 3 Write Protect
   728                           ;	WRT3 = 0x1, unprogrammed default
   729  30000A                     	org	3145738
   730  30000A  0F                 	db	15
   731                           
   732                           ;Config register CONFIG6H @ 0x30000B
   733                           ;	unspecified, using default values
   734                           ;	Configuration Registers Write Protect
   735                           ;	WRTC = 0x1, unprogrammed default
   736                           ;	Boot Block Write Protect
   737                           ;	WRTB = 0x1, unprogrammed default
   738                           ;	Data EEPROM Write Protect
   739                           ;	WRTD = 0x1, unprogrammed default
   740  30000B                     	org	3145739
   741  30000B  E0                 	db	224
   742                           
   743                           ;Config register CONFIG7L @ 0x30000C
   744                           ;	unspecified, using default values
   745                           ;	Block 0 Table Read Protect
   746                           ;	EBTR0 = 0x1, unprogrammed default
   747                           ;	Block 1 Table Read Protect
   748                           ;	EBTR1 = 0x1, unprogrammed default
   749                           ;	Block 2 Table Read Protect
   750                           ;	EBTR2 = 0x1, unprogrammed default
   751                           ;	Block 3 Table Read Protect
   752                           ;	EBTR3 = 0x1, unprogrammed default
   753  30000C                     	org	3145740
   754  30000C  0F                 	db	15
   755                           
   756                           ;Config register CONFIG7H @ 0x30000D
   757                           ;	unspecified, using default values
   758                           ;	Boot Block Table Read Protect
   759                           ;	EBTRB = 0x1, unprogrammed default
   760  30000D                     	org	3145741
   761  30000D  40                 	db	64
   762                           tosu	equ	0xFFF
   763                           tosh	equ	0xFFE
   764                           tosl	equ	0xFFD
   765                           stkptr	equ	0xFFC
   766                           pclatu	equ	0xFFB
   767                           pclath	equ	0xFFA
   768                           pcl	equ	0xFF9
   769                           tblptru	equ	0xFF8
   770                           tblptrh	equ	0xFF7
   771                           tblptrl	equ	0xFF6
   772                           tablat	equ	0xFF5
   773                           prodh	equ	0xFF4
   774                           prodl	equ	0xFF3
   775                           indf0	equ	0xFEF
   776                           postinc0	equ	0xFEE
   777                           postdec0	equ	0xFED
   778                           preinc0	equ	0xFEC
   779                           plusw0	equ	0xFEB
   780                           fsr0h	equ	0xFEA
   781                           fsr0l	equ	0xFE9
   782                           wreg	equ	0xFE8
   783                           indf1	equ	0xFE7
   784                           postinc1	equ	0xFE6
   785                           postdec1	equ	0xFE5
   786                           preinc1	equ	0xFE4
   787                           plusw1	equ	0xFE3
   788                           fsr1h	equ	0xFE2
   789                           fsr1l	equ	0xFE1
   790                           bsr	equ	0xFE0
   791                           indf2	equ	0xFDF
   792                           postinc2	equ	0xFDE
   793                           postdec2	equ	0xFDD
   794                           preinc2	equ	0xFDC
   795                           plusw2	equ	0xFDB
   796                           fsr2h	equ	0xFDA
   797                           fsr2l	equ	0xFD9
   798                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     14      15
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_LeeEEprom

Critical Paths under _myHiIsr in COMRAM

    _myHiIsr->_EscribeEEprom

Critical Paths under _main in BANK0

    None.

Critical Paths under _myHiIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myHiIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myHiIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myHiIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myHiIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myHiIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myHiIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myHiIsr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0      30
                                              3 COMRAM    11    11      0
                      _Configuracion
                          _LeeEEprom
 ---------------------------------------------------------------------------------
 (1) _LeeEEprom                                            1     1      0      15
                                              2 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _myHiIsr                                              0     0      0     120
                      _EscribeEEprom
 ---------------------------------------------------------------------------------
 (3) _EscribeEEprom                                        2     1      1     120
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Configuracion
   _LeeEEprom

 _myHiIsr (ROOT)
   _EscribeEEprom

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      E       F       1       16.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       F       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
ABS                  0      0       F       6        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Oct 15 15:37:15 2021

                     l71 08B2                       l73 08C0                       l74 08C2  
                     l59 0880                       u10 08C0                       u11 08BC  
                     u30 0816                      l760 0878                      l762 087A  
                    l770 08B0                      l764 087C                      l756 0854  
                    l766 087E                      l758 0872                      l790 082C  
                    l768 08AC                      l792 083C                      l784 080C  
                    l786 0820                      l788 0824                      u117 0842  
                    wreg 000FE8                     _LATA 000F89                     _LATD 000F8C  
                   i2l80 08A8                     i2l64 003E                     i2l68 0052  
                   i2l77 0898                     i2l79 08A6                     _main 080C  
                   indf2 000FDF                     fsr2l 000FD9                     btemp 0010  
                   start 0056             ___param_bank 000000                    ?_main 0001  
                  _EEADR 000FA9                    _T0CON 000FD5                    i2l810 0884  
                  i2l820 0896                    i2l812 0888                    i2l814 088C  
                  i2l830 002E                    i2l822 000A                    i2l816 088E  
                  i2l832 0038                    i2l824 0018                    i2l818 0892  
                  i2l834 004C                    i2l826 001A                    i2l836 0050  
                  i2l828 002A                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISD 000F95                    _Value 000F          ??_EscribeEEprom 0002  
     EscribeEEprom@Valor 0001          __end_of_myHiIsr 0056                    tablat 000FF5  
                  ttemp5 0011                    ttemp6 0014                    ttemp7 0018  
                  wtemp8 0011          __initialization 08C4             __end_of_main 0854  
     __size_of_LeeEEprom 001A                   ??_main 0004            __activetblptr 000001  
                 _EEDATA 000FA8                   _EECON2 000FA7                   _ANSELA 000F5B  
                 _ANSELD 000F5E                   _INTCON 000FF2                   i2u7_40 08A6  
                 i2u7_41 08A2                   i2u8_40 0018                   i2u8_41 0014  
                 i2u9_40 002A                   i2u9_41 0026                   isa$std 000001  
              ??_myHiIsr 0003             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 08C4        __end_of_LeeEEprom 08C4            ___rparam_used 000001  
         __pcstackCOMRAM 0001    __end_of_Configuracion 0882               __pnvCOMRAM 000F  
                i2u10_40 004C                  i2u10_41 0048                  __Hparam 0000  
                __Lparam 0000             __psmallconst 0800                  __pcinit 08C4  
                __ramtop 0800                  __ptext0 080C                  __ptext1 08AA  
                __ptext2 0854                  __ptext4 0882                  _myHiIsr 0008  
     LeeEEprom@Direccion 0003    __end_of_EscribeEEprom 08AA     end_of_initialization 08C4  
      __end_ofmain@F4822 080B                  postinc2 000FDE                _LeeEEprom 08AA  
    start_initialization 08C4               ?_LeeEEprom 0001   EscribeEEprom@Direccion 0002  
              __pintcode 0008   __size_of_Configuracion 002E              __smallconst 0800  
               ?_myHiIsr 0001                 _IPR2bits 000FA2                 _PIE2bits 000FA0  
            ??_LeeEEprom 0003                 _PIR2bits 000FA1                 _RCONbits 000FD0  
              main@F4822 0801            _Configuracion 0854               _EECON1bits 000FA6  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0800  
 __size_of_EscribeEEprom 0028         __size_of_myHiIsr 004E           ?_Configuracion 0001  
          __size_of_main 0048                 isa$xinst 000000                 int$flags 0010  
             _INTCONbits 000FF2                 intlevel2 0000            _EscribeEEprom 0882  
        ??_Configuracion 0003           ?_EscribeEEprom 0001              main@Dis7seg 0005  
